{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"jquery","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"$"}]},{"source":"./foundation.util.mediaQuery","imported":["MediaQuery"],"specifiers":[{"kind":"named","imported":"MediaQuery","local":"MediaQuery"}]},{"source":"./foundation.util.motion","imported":["Motion"],"specifiers":[{"kind":"named","imported":"Motion","local":"Motion"}]},{"source":"./foundation.plugin","imported":["Plugin"],"specifiers":[{"kind":"named","imported":"Plugin","local":"Plugin"}]}],"exports":{"exported":["ResponsiveToggle"],"specifiers":[{"kind":"local","local":"ResponsiveToggle","exported":"ResponsiveToggle"}]}}},"options":{"filename":"packages/zurb:foundation-sites/js/foundation.responsiveToggle.js","filenameRelative":"packages/zurb:foundation-sites/js/foundation.responsiveToggle.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/js/foundation.responsiveToggle.js.map","sourceFileName":"packages/zurb:foundation-sites/js/foundation.responsiveToggle.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.responsiveToggle"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar module1 = module;\nmodule1.export({\n  ResponsiveToggle: function () {\n    return ResponsiveToggle;\n  }\n});\nvar $ = void 0;\nmodule1.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 0);\nvar MediaQuery = void 0;\nmodule1.watch(require(\"./foundation.util.mediaQuery\"), {\n  MediaQuery: function (v) {\n    MediaQuery = v;\n  }\n}, 1);\nvar Motion = void 0;\nmodule1.watch(require(\"./foundation.util.motion\"), {\n  Motion: function (v) {\n    Motion = v;\n  }\n}, 2);\nvar Plugin = void 0;\nmodule1.watch(require(\"./foundation.plugin\"), {\n  Plugin: function (v) {\n    Plugin = v;\n  }\n}, 3);\n\n/**\n * ResponsiveToggle module.\n * @module foundation.responsiveToggle\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion\n */var ResponsiveToggle = function (_Plugin) {\n  (0, _inherits3.default)(ResponsiveToggle, _Plugin);\n\n  function ResponsiveToggle() {\n    (0, _classCallCheck3.default)(this, ResponsiveToggle);\n    return (0, _possibleConstructorReturn3.default)(this, _Plugin.apply(this, arguments));\n  }\n\n  /**\n   * Creates a new instance of Tab Bar.\n   * @class\n   * @name ResponsiveToggle\n   * @fires ResponsiveToggle#init\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */ResponsiveToggle.prototype._setup = function () {\n    function _setup(element, options) {\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n      this.className = 'ResponsiveToggle'; // ie9 back compat\n\n      this._init();\n\n      this._events();\n    }\n\n    return _setup;\n  }(); /**\n        * Initializes the tab bar by finding the target element, toggling element, and running update().\n        * @function\n        * @private\n        */\n\n  ResponsiveToggle.prototype._init = function () {\n    function _init() {\n      MediaQuery._init();\n\n      var targetID = this.$element.data('responsive-toggle');\n\n      if (!targetID) {\n        console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n      }\n\n      this.$targetMenu = $(\"#\" + targetID);\n      this.$toggler = this.$element.find('[data-toggle]').filter(function () {\n        var target = $(this).data('toggle');\n        return target === targetID || target === \"\";\n      });\n      this.options = $.extend({}, this.options, this.$targetMenu.data()); // If they were set, parse the animation classes\n\n      if (this.options.animate) {\n        var input = this.options.animate.split(' ');\n        this.animationIn = input[0];\n        this.animationOut = input[1] || null;\n      }\n\n      this._update();\n    }\n\n    return _init;\n  }(); /**\n        * Adds necessary event handlers for the tab bar to work.\n        * @function\n        * @private\n        */\n\n  ResponsiveToggle.prototype._events = function () {\n    function _events() {\n      var _this = this;\n\n      this._updateMqHandler = this._update.bind(this);\n      $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n      this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n    }\n\n    return _events;\n  }(); /**\n        * Checks the current media query to determine if the tab bar should be visible or hidden.\n        * @function\n        * @private\n        */\n\n  ResponsiveToggle.prototype._update = function () {\n    function _update() {\n      // Mobile\n      if (!MediaQuery.atLeast(this.options.hideFor)) {\n        this.$element.show();\n        this.$targetMenu.hide();\n      } // Desktop\n      else {\n          this.$element.hide();\n          this.$targetMenu.show();\n        }\n    }\n\n    return _update;\n  }(); /**\n        * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n        * @function\n        * @fires ResponsiveToggle#toggled\n        */\n\n  ResponsiveToggle.prototype.toggleMenu = function () {\n    function toggleMenu() {\n      var _this3 = this;\n\n      if (!MediaQuery.atLeast(this.options.hideFor)) {\n        /**\n         * Fires when the element attached to the tab bar toggles.\n         * @event ResponsiveToggle#toggled\n         */if (this.options.animate) {\n          if (this.$targetMenu.is(':hidden')) {\n            Motion.animateIn(this.$targetMenu, this.animationIn, function () {\n              _this3.$element.trigger('toggled.zf.responsiveToggle');\n\n              _this3.$targetMenu.find('[data-mutate]').triggerHandler('mutateme.zf.trigger');\n            });\n          } else {\n            Motion.animateOut(this.$targetMenu, this.animationOut, function () {\n              _this3.$element.trigger('toggled.zf.responsiveToggle');\n            });\n          }\n        } else {\n          this.$targetMenu.toggle(0);\n          this.$targetMenu.find('[data-mutate]').trigger('mutateme.zf.trigger');\n          this.$element.trigger('toggled.zf.responsiveToggle');\n        }\n      }\n    }\n\n    return toggleMenu;\n  }();\n\n  ResponsiveToggle.prototype._destroy = function () {\n    function _destroy() {\n      this.$element.off('.zf.responsiveToggle');\n      this.$toggler.off('.zf.responsiveToggle');\n      $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n    }\n\n    return _destroy;\n  }();\n\n  return ResponsiveToggle;\n}(Plugin);\n\nResponsiveToggle.defaults = {\n  /**\n   * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n   * @option\n   * @type {string}\n   * @default 'medium'\n   */hideFor: 'medium',\n  /**\n   * To decide if the toggle should be animated or not.\n   * @option\n   * @type {boolean}\n   * @default false\n   */animate: false\n};","map":{"version":3,"sources":["packages/zurb:foundation-sites/js/foundation.responsiveToggle.js"],"names":["module1","module","export","ResponsiveToggle","$","watch","require","v","MediaQuery","Motion","Plugin","_setup","element","options","$element","extend","defaults","data","className","_init","_events","targetID","console","error","$targetMenu","$toggler","find","filter","target","animate","input","split","animationIn","animationOut","_update","_this","_updateMqHandler","bind","window","on","toggleMenu","atLeast","hideFor","show","hide","is","animateIn","trigger","triggerHandler","animateOut","toggle","_destroy","off"],"mappings":"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","file":"packages/zurb:foundation-sites/js/foundation.responsiveToggle.js.map","sourcesContent":["'use strict';\n\nimport $ from 'jquery';\n\nimport { MediaQuery } from './foundation.util.mediaQuery';\nimport { Motion } from './foundation.util.motion';\nimport { Plugin } from './foundation.plugin';\n\n/**\n * ResponsiveToggle module.\n * @module foundation.responsiveToggle\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion\n */\n\nclass ResponsiveToggle extends Plugin {\n  /**\n   * Creates a new instance of Tab Bar.\n   * @class\n   * @name ResponsiveToggle\n   * @fires ResponsiveToggle#init\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n    this.className = 'ResponsiveToggle'; // ie9 back compat\n\n    this._init();\n    this._events();\n  }\n\n  /**\n   * Initializes the tab bar by finding the target element, toggling element, and running update().\n   * @function\n   * @private\n   */\n  _init() {\n    MediaQuery._init();\n    var targetID = this.$element.data('responsive-toggle');\n    if (!targetID) {\n      console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n    }\n\n    this.$targetMenu = $(`#${targetID}`);\n    this.$toggler = this.$element.find('[data-toggle]').filter(function() {\n      var target = $(this).data('toggle');\n      return (target === targetID || target === \"\");\n    });\n    this.options = $.extend({}, this.options, this.$targetMenu.data());\n\n    // If they were set, parse the animation classes\n    if(this.options.animate) {\n      let input = this.options.animate.split(' ');\n\n      this.animationIn = input[0];\n      this.animationOut = input[1] || null;\n    }\n\n    this._update();\n  }\n\n  /**\n   * Adds necessary event handlers for the tab bar to work.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this._updateMqHandler = this._update.bind(this);\n\n    $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n    this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n  }\n\n  /**\n   * Checks the current media query to determine if the tab bar should be visible or hidden.\n   * @function\n   * @private\n   */\n  _update() {\n    // Mobile\n    if (!MediaQuery.atLeast(this.options.hideFor)) {\n      this.$element.show();\n      this.$targetMenu.hide();\n    }\n\n    // Desktop\n    else {\n      this.$element.hide();\n      this.$targetMenu.show();\n    }\n  }\n\n  /**\n   * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n   * @function\n   * @fires ResponsiveToggle#toggled\n   */\n  toggleMenu() {\n    if (!MediaQuery.atLeast(this.options.hideFor)) {\n      /**\n       * Fires when the element attached to the tab bar toggles.\n       * @event ResponsiveToggle#toggled\n       */\n      if(this.options.animate) {\n        if (this.$targetMenu.is(':hidden')) {\n          Motion.animateIn(this.$targetMenu, this.animationIn, () => {\n            this.$element.trigger('toggled.zf.responsiveToggle');\n            this.$targetMenu.find('[data-mutate]').triggerHandler('mutateme.zf.trigger');\n          });\n        }\n        else {\n          Motion.animateOut(this.$targetMenu, this.animationOut, () => {\n            this.$element.trigger('toggled.zf.responsiveToggle');\n          });\n        }\n      }\n      else {\n        this.$targetMenu.toggle(0);\n        this.$targetMenu.find('[data-mutate]').trigger('mutateme.zf.trigger');\n        this.$element.trigger('toggled.zf.responsiveToggle');\n      }\n    }\n  };\n\n  _destroy() {\n    this.$element.off('.zf.responsiveToggle');\n    this.$toggler.off('.zf.responsiveToggle');\n\n    $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n  }\n}\n\nResponsiveToggle.defaults = {\n  /**\n   * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n   * @option\n   * @type {string}\n   * @default 'medium'\n   */\n  hideFor: 'medium',\n\n  /**\n   * To decide if the toggle should be animated or not.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  animate: false\n};\n\nexport { ResponsiveToggle };\n"]},"hash":"8c045fa685534b188ef7a4854d06fba3b0a91fbe"}
