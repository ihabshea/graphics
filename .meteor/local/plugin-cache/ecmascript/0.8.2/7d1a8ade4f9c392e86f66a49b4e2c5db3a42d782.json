{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/dist/js/plugins/foundation.zf.responsiveAccordionTabs.js","filenameRelative":"packages/zurb:foundation-sites/dist/js/plugins/foundation.zf.responsiveAccordionTabs.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/dist/js/plugins/foundation.zf.responsiveAccordionTabs.js.map","sourceFileName":"packages/zurb:foundation-sites/dist/js/plugins/foundation.zf.responsiveAccordionTabs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.zf.responsiveAccordionTabs"},"ignored":false,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n!function ($) {\n  /**\n   * ResponsiveAccordionTabs module.\n   * @module foundation.responsiveAccordionTabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.motion\n   * @requires foundation.accordion\n   * @requires foundation.tabs\n   */var ResponsiveAccordionTabs = function () {\n    /**\n     * Creates a new instance of a responsive accordion tabs.\n     * @class\n     * @fires ResponsiveAccordionTabs#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */function ResponsiveAccordionTabs(element, options) {\n      _classCallCheck(this, ResponsiveAccordionTabs);\n\n      this.$element = $(element);\n      this.options = $.extend({}, this.$element.data(), options);\n      this.rules = this.$element.data('responsive-accordion-tabs');\n      this.currentMq = null;\n      this.currentPlugin = null;\n\n      if (!this.$element.attr('id')) {\n        this.$element.attr('id', Foundation.GetYoDigits(6, 'responsiveaccordiontabs'));\n      }\n\n      ;\n\n      this._init();\n\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveAccordionTabs');\n    } /**\n       * Initializes the Menu by parsing the classes from the 'data-responsive-accordion-tabs' attribute on the element.\n       * @function\n       * @private\n       */\n\n    _createClass(ResponsiveAccordionTabs, [{\n      key: '_init',\n      value: function () {\n        function _init() {\n          // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n          if (typeof this.rules === 'string') {\n            var rulesTree = {}; // Parse rules from \"classes\" pulled from data attribute\n\n            var rules = this.rules.split(' '); // Iterate through every rule found\n\n            for (var i = 0; i < rules.length; i++) {\n              var rule = rules[i].split('-');\n              var ruleSize = rule.length > 1 ? rule[0] : 'small';\n              var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n              if (MenuPlugins[rulePlugin] !== null) {\n                rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n              }\n            }\n\n            this.rules = rulesTree;\n          }\n\n          this._getAllOptions();\n\n          if (!$.isEmptyObject(this.rules)) {\n            this._checkMediaQueries();\n          }\n        }\n\n        return _init;\n      }()\n    }, {\n      key: '_getAllOptions',\n      value: function () {\n        function _getAllOptions() {\n          //get all defaults and options\n          var _this = this;\n\n          _this.allOptions = {};\n\n          for (var key in meteorBabelHelpers.sanitizeForInObject(MenuPlugins)) {\n            if (MenuPlugins.hasOwnProperty(key)) {\n              var obj = MenuPlugins[key];\n\n              try {\n                var dummyPlugin = $('<ul></ul>');\n                var tmpPlugin = new obj.plugin(dummyPlugin, _this.options);\n\n                for (var keyKey in meteorBabelHelpers.sanitizeForInObject(tmpPlugin.options)) {\n                  if (tmpPlugin.options.hasOwnProperty(keyKey) && keyKey !== 'zfPlugin') {\n                    var objObj = tmpPlugin.options[keyKey];\n                    _this.allOptions[keyKey] = objObj;\n                  }\n                }\n\n                tmpPlugin.destroy();\n              } catch (e) {}\n            }\n          }\n        }\n\n        return _getAllOptions;\n      }() /**\n           * Initializes events for the Menu.\n           * @function\n           * @private\n           */\n    }, {\n      key: '_events',\n      value: function () {\n        function _events() {\n          var _this = this;\n\n          $(window).on('changed.zf.mediaquery', function () {\n            _this._checkMediaQueries();\n          });\n        }\n\n        return _events;\n      }() /**\n           * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n           * @function\n           * @private\n           */\n    }, {\n      key: '_checkMediaQueries',\n      value: function () {\n        function _checkMediaQueries() {\n          var matchedMq,\n              _this = this; // Iterate through each rule and find the last matching rule\n\n\n          $.each(this.rules, function (key) {\n            if (Foundation.MediaQuery.atLeast(key)) {\n              matchedMq = key;\n            }\n          }); // No match? No dice\n\n          if (!matchedMq) return; // Plugin already initialized? We good\n\n          if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return; // Remove existing plugin-specific CSS classes\n\n          $.each(MenuPlugins, function (key, value) {\n            _this.$element.removeClass(value.cssClass);\n          }); // Add the CSS class for the new plugin\n\n          this.$element.addClass(this.rules[matchedMq].cssClass); // Create an instance of the new plugin\n\n          if (this.currentPlugin) {\n            //don't know why but on nested elements data zfPlugin get's lost\n            if (!this.currentPlugin.$element.data('zfPlugin') && this.storezfData) this.currentPlugin.$element.data('zfPlugin', this.storezfData);\n            this.currentPlugin.destroy();\n          }\n\n          this._handleMarkup(this.rules[matchedMq].cssClass);\n\n          this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n          this.storezfData = this.currentPlugin.$element.data('zfPlugin');\n        }\n\n        return _checkMediaQueries;\n      }()\n    }, {\n      key: '_handleMarkup',\n      value: function () {\n        function _handleMarkup(toSet) {\n          var _this = this,\n              fromString = 'accordion';\n\n          var $panels = $('[data-tabs-content=' + this.$element.attr('id') + ']');\n          if ($panels.length) fromString = 'tabs';\n\n          if (fromString === toSet) {\n            return;\n          }\n\n          ;\n          var tabsTitle = _this.allOptions.linkClass ? _this.allOptions.linkClass : 'tabs-title';\n          var tabsPanel = _this.allOptions.panelClass ? _this.allOptions.panelClass : 'tabs-panel';\n          this.$element.removeAttr('role');\n          var $liHeads = this.$element.children('.' + tabsTitle + ',[data-accordion-item]').removeClass(tabsTitle).removeClass('accordion-item').removeAttr('data-accordion-item');\n          var $liHeadsA = $liHeads.children('a').removeClass('accordion-title');\n\n          if (fromString === 'tabs') {\n            $panels = $panels.children('.' + tabsPanel).removeClass(tabsPanel).removeAttr('role').removeAttr('aria-hidden').removeAttr('aria-labelledby');\n            $panels.children('a').removeAttr('role').removeAttr('aria-controls').removeAttr('aria-selected');\n          } else {\n            $panels = $liHeads.children('[data-tab-content]').removeClass('accordion-content');\n          }\n\n          ;\n          $panels.css({\n            display: '',\n            visibility: ''\n          });\n          $liHeads.css({\n            display: '',\n            visibility: ''\n          });\n\n          if (toSet === 'accordion') {\n            $panels.each(function (key, value) {\n              $(value).appendTo($liHeads.get(key)).addClass('accordion-content').attr('data-tab-content', '').removeClass('is-active').css({\n                height: ''\n              });\n              $('[data-tabs-content=' + _this.$element.attr('id') + ']').after('<div id=\"tabs-placeholder-' + _this.$element.attr('id') + '\"></div>').remove();\n              $liHeads.addClass('accordion-item').attr('data-accordion-item', '');\n              $liHeadsA.addClass('accordion-title');\n            });\n          } else if (toSet === 'tabs') {\n            var $tabsContent = $('[data-tabs-content=' + _this.$element.attr('id') + ']');\n            var $placeholder = $('#tabs-placeholder-' + _this.$element.attr('id'));\n\n            if ($placeholder.length) {\n              $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter($placeholder).attr('data-tabs-content', _this.$element.attr('id'));\n              $placeholder.remove();\n            } else {\n              $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter(_this.$element).attr('data-tabs-content', _this.$element.attr('id'));\n            }\n\n            ;\n            $panels.each(function (key, value) {\n              var tempValue = $(value).appendTo($tabsContent).addClass(tabsPanel);\n              var hash = $liHeadsA.get(key).hash.slice(1);\n              var id = $(value).attr('id') || Foundation.GetYoDigits(6, 'accordion');\n\n              if (hash !== id) {\n                if (hash !== '') {\n                  $(value).attr('id', hash);\n                } else {\n                  hash = id;\n                  $(value).attr('id', hash);\n                  $($liHeadsA.get(key)).attr('href', $($liHeadsA.get(key)).attr('href').replace('#', '') + '#' + hash);\n                }\n\n                ;\n              }\n\n              ;\n              var isActive = $($liHeads.get(key)).hasClass('is-active');\n\n              if (isActive) {\n                tempValue.addClass('is-active');\n              }\n\n              ;\n            });\n            $liHeads.addClass(tabsTitle);\n          }\n\n          ;\n        }\n\n        return _handleMarkup;\n      }() /**\n           * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n           * @function\n           */\n    }, {\n      key: 'destroy',\n      value: function () {\n        function destroy() {\n          if (this.currentPlugin) this.currentPlugin.destroy();\n          $(window).off('.zf.ResponsiveAccordionTabs');\n          Foundation.unregisterPlugin(this);\n        }\n\n        return destroy;\n      }()\n    }]);\n\n    return ResponsiveAccordionTabs;\n  }();\n\n  ResponsiveAccordionTabs.defaults = {}; // The plugin matches the plugin classes with these plugin instances.\n\n  var MenuPlugins = {\n    tabs: {\n      cssClass: 'tabs',\n      plugin: Foundation._plugins.tabs || null\n    },\n    accordion: {\n      cssClass: 'accordion',\n      plugin: Foundation._plugins.accordion || null\n    }\n  }; // Window exports\n\n  Foundation.plugin(ResponsiveAccordionTabs, 'ResponsiveAccordionTabs');\n}(jQuery);","map":{"version":3,"sources":["packages/zurb:foundation-sites/dist/js/plugins/foundation.zf.responsiveAccordionTabs.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","$","ResponsiveAccordionTabs","element","options","$element","extend","data","rules","currentMq","currentPlugin","attr","Foundation","GetYoDigits","_init","_events","registerPlugin","value","rulesTree","split","rule","ruleSize","rulePlugin","MenuPlugins","_getAllOptions","isEmptyObject","_checkMediaQueries","_this","allOptions","hasOwnProperty","obj","dummyPlugin","tmpPlugin","plugin","keyKey","objObj","destroy","e","window","on","matchedMq","each","MediaQuery","atLeast","removeClass","cssClass","addClass","storezfData","_handleMarkup","toSet","fromString","$panels","tabsTitle","linkClass","tabsPanel","panelClass","removeAttr","$liHeads","children","$liHeadsA","css","display","visibility","appendTo","get","height","after","remove","$tabsContent","$placeholder","insertAfter","tempValue","hash","slice","id","replace","isActive","hasClass","off","unregisterPlugin","defaults","tabs","_plugins","accordion","jQuery"],"mappings":"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","file":"packages/zurb:foundation-sites/dist/js/plugins/foundation.zf.responsiveAccordionTabs.js.map","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveAccordionTabs module.\n   * @module foundation.responsiveAccordionTabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.motion\n   * @requires foundation.accordion\n   * @requires foundation.tabs\n   */\n\n  var ResponsiveAccordionTabs = function () {\n    /**\n     * Creates a new instance of a responsive accordion tabs.\n     * @class\n     * @fires ResponsiveAccordionTabs#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function ResponsiveAccordionTabs(element, options) {\n      _classCallCheck(this, ResponsiveAccordionTabs);\n\n      this.$element = $(element);\n      this.options = $.extend({}, this.$element.data(), options);\n      this.rules = this.$element.data('responsive-accordion-tabs');\n      this.currentMq = null;\n      this.currentPlugin = null;\n      if (!this.$element.attr('id')) {\n        this.$element.attr('id', Foundation.GetYoDigits(6, 'responsiveaccordiontabs'));\n      };\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveAccordionTabs');\n    }\n\n    /**\n     * Initializes the Menu by parsing the classes from the 'data-responsive-accordion-tabs' attribute on the element.\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveAccordionTabs, [{\n      key: '_init',\n      value: function _init() {\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n        if (typeof this.rules === 'string') {\n          var rulesTree = {};\n\n          // Parse rules from \"classes\" pulled from data attribute\n          var rules = this.rules.split(' ');\n\n          // Iterate through every rule found\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i].split('-');\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n            if (MenuPlugins[rulePlugin] !== null) {\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n            }\n          }\n\n          this.rules = rulesTree;\n        }\n\n        this._getAllOptions();\n\n        if (!$.isEmptyObject(this.rules)) {\n          this._checkMediaQueries();\n        }\n      }\n    }, {\n      key: '_getAllOptions',\n      value: function _getAllOptions() {\n        //get all defaults and options\n        var _this = this;\n        _this.allOptions = {};\n        for (var key in MenuPlugins) {\n          if (MenuPlugins.hasOwnProperty(key)) {\n            var obj = MenuPlugins[key];\n            try {\n              var dummyPlugin = $('<ul></ul>');\n              var tmpPlugin = new obj.plugin(dummyPlugin, _this.options);\n              for (var keyKey in tmpPlugin.options) {\n                if (tmpPlugin.options.hasOwnProperty(keyKey) && keyKey !== 'zfPlugin') {\n                  var objObj = tmpPlugin.options[keyKey];\n                  _this.allOptions[keyKey] = objObj;\n                }\n              }\n              tmpPlugin.destroy();\n            } catch (e) {}\n          }\n        }\n      }\n\n      /**\n       * Initializes events for the Menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n      }\n\n      /**\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) {\n          //don't know why but on nested elements data zfPlugin get's lost\n          if (!this.currentPlugin.$element.data('zfPlugin') && this.storezfData) this.currentPlugin.$element.data('zfPlugin', this.storezfData);\n          this.currentPlugin.destroy();\n        }\n        this._handleMarkup(this.rules[matchedMq].cssClass);\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n        this.storezfData = this.currentPlugin.$element.data('zfPlugin');\n      }\n    }, {\n      key: '_handleMarkup',\n      value: function _handleMarkup(toSet) {\n        var _this = this,\n            fromString = 'accordion';\n        var $panels = $('[data-tabs-content=' + this.$element.attr('id') + ']');\n        if ($panels.length) fromString = 'tabs';\n        if (fromString === toSet) {\n          return;\n        };\n\n        var tabsTitle = _this.allOptions.linkClass ? _this.allOptions.linkClass : 'tabs-title';\n        var tabsPanel = _this.allOptions.panelClass ? _this.allOptions.panelClass : 'tabs-panel';\n\n        this.$element.removeAttr('role');\n        var $liHeads = this.$element.children('.' + tabsTitle + ',[data-accordion-item]').removeClass(tabsTitle).removeClass('accordion-item').removeAttr('data-accordion-item');\n        var $liHeadsA = $liHeads.children('a').removeClass('accordion-title');\n\n        if (fromString === 'tabs') {\n          $panels = $panels.children('.' + tabsPanel).removeClass(tabsPanel).removeAttr('role').removeAttr('aria-hidden').removeAttr('aria-labelledby');\n          $panels.children('a').removeAttr('role').removeAttr('aria-controls').removeAttr('aria-selected');\n        } else {\n          $panels = $liHeads.children('[data-tab-content]').removeClass('accordion-content');\n        };\n\n        $panels.css({ display: '', visibility: '' });\n        $liHeads.css({ display: '', visibility: '' });\n        if (toSet === 'accordion') {\n          $panels.each(function (key, value) {\n            $(value).appendTo($liHeads.get(key)).addClass('accordion-content').attr('data-tab-content', '').removeClass('is-active').css({ height: '' });\n            $('[data-tabs-content=' + _this.$element.attr('id') + ']').after('<div id=\"tabs-placeholder-' + _this.$element.attr('id') + '\"></div>').remove();\n            $liHeads.addClass('accordion-item').attr('data-accordion-item', '');\n            $liHeadsA.addClass('accordion-title');\n          });\n        } else if (toSet === 'tabs') {\n          var $tabsContent = $('[data-tabs-content=' + _this.$element.attr('id') + ']');\n          var $placeholder = $('#tabs-placeholder-' + _this.$element.attr('id'));\n          if ($placeholder.length) {\n            $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter($placeholder).attr('data-tabs-content', _this.$element.attr('id'));\n            $placeholder.remove();\n          } else {\n            $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter(_this.$element).attr('data-tabs-content', _this.$element.attr('id'));\n          };\n          $panels.each(function (key, value) {\n            var tempValue = $(value).appendTo($tabsContent).addClass(tabsPanel);\n            var hash = $liHeadsA.get(key).hash.slice(1);\n            var id = $(value).attr('id') || Foundation.GetYoDigits(6, 'accordion');\n            if (hash !== id) {\n              if (hash !== '') {\n                $(value).attr('id', hash);\n              } else {\n                hash = id;\n                $(value).attr('id', hash);\n                $($liHeadsA.get(key)).attr('href', $($liHeadsA.get(key)).attr('href').replace('#', '') + '#' + hash);\n              };\n            };\n            var isActive = $($liHeads.get(key)).hasClass('is-active');\n            if (isActive) {\n              tempValue.addClass('is-active');\n            };\n          });\n          $liHeads.addClass(tabsTitle);\n        };\n      }\n\n      /**\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveAccordionTabs');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveAccordionTabs;\n  }();\n\n  ResponsiveAccordionTabs.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    tabs: {\n      cssClass: 'tabs',\n      plugin: Foundation._plugins.tabs || null\n    },\n    accordion: {\n      cssClass: 'accordion',\n      plugin: Foundation._plugins.accordion || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveAccordionTabs, 'ResponsiveAccordionTabs');\n}(jQuery);"]},"hash":"7d1a8ade4f9c392e86f66a49b4e2c5db3a42d782"}
