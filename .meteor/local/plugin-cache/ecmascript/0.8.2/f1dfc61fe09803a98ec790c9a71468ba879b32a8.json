{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"jquery","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"$"}]},{"source":"./foundation.util.motion","imported":["Motion"],"specifiers":[{"kind":"named","imported":"Motion","local":"Motion"}]},{"source":"./foundation.plugin","imported":["Plugin"],"specifiers":[{"kind":"named","imported":"Plugin","local":"Plugin"}]},{"source":"./foundation.util.triggers","imported":["Triggers"],"specifiers":[{"kind":"named","imported":"Triggers","local":"Triggers"}]}],"exports":{"exported":["Toggler"],"specifiers":[{"kind":"local","local":"Toggler","exported":"Toggler"}]}}},"options":{"filename":"packages/zurb:foundation-sites/js/foundation.toggler.js","filenameRelative":"packages/zurb:foundation-sites/js/foundation.toggler.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/js/foundation.toggler.js.map","sourceFileName":"packages/zurb:foundation-sites/js/foundation.toggler.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.toggler"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar module1 = module;\nmodule1.export({\n  Toggler: function () {\n    return Toggler;\n  }\n});\nvar $ = void 0;\nmodule1.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 0);\nvar Motion = void 0;\nmodule1.watch(require(\"./foundation.util.motion\"), {\n  Motion: function (v) {\n    Motion = v;\n  }\n}, 1);\nvar Plugin = void 0;\nmodule1.watch(require(\"./foundation.plugin\"), {\n  Plugin: function (v) {\n    Plugin = v;\n  }\n}, 2);\nvar Triggers = void 0;\nmodule1.watch(require(\"./foundation.util.triggers\"), {\n  Triggers: function (v) {\n    Triggers = v;\n  }\n}, 3);\n\n/**\n * Toggler module.\n * @module foundation.toggler\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n */var Toggler = function (_Plugin) {\n  (0, _inherits3.default)(Toggler, _Plugin);\n\n  function Toggler() {\n    (0, _classCallCheck3.default)(this, Toggler);\n    return (0, _possibleConstructorReturn3.default)(this, _Plugin.apply(this, arguments));\n  }\n\n  /**\n   * Creates a new instance of Toggler.\n   * @class\n   * @name Toggler\n   * @fires Toggler#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */Toggler.prototype._setup = function () {\n    function _setup(element, options) {\n      this.$element = element;\n      this.options = $.extend({}, Toggler.defaults, element.data(), options);\n      this.className = '';\n      this.className = 'Toggler'; // ie9 back compat\n      // Triggers init is idempotent, just need to make sure it is initialized\n\n      Triggers.init($);\n\n      this._init();\n\n      this._events();\n    }\n\n    return _setup;\n  }(); /**\n        * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n        * @function\n        * @private\n        */\n\n  Toggler.prototype._init = function () {\n    function _init() {\n      var input; // Parse animation classes if they were set\n\n      if (this.options.animate) {\n        input = this.options.animate.split(' ');\n        this.animationIn = input[0];\n        this.animationOut = input[1] || null;\n      } // Otherwise, parse toggle class\n      else {\n          input = this.$element.data('toggler'); // Allow for a . at the beginning of the string\n\n          this.className = input[0] === '.' ? input.slice(1) : input;\n        } // Add ARIA attributes to triggers\n\n\n      var id = this.$element[0].id;\n      $(\"[data-open=\\\"\" + id + \"\\\"], [data-close=\\\"\" + id + \"\\\"], [data-toggle=\\\"\" + id + \"\\\"]\").attr('aria-controls', id); // If the target is hidden, add aria-hidden\n\n      this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n    }\n\n    return _init;\n  }(); /**\n        * Initializes events for the toggle trigger.\n        * @function\n        * @private\n        */\n\n  Toggler.prototype._events = function () {\n    function _events() {\n      this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n    }\n\n    return _events;\n  }(); /**\n        * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n        * @function\n        * @fires Toggler#on\n        * @fires Toggler#off\n        */\n\n  Toggler.prototype.toggle = function () {\n    function toggle() {\n      this[this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n    }\n\n    return toggle;\n  }();\n\n  Toggler.prototype._toggleClass = function () {\n    function _toggleClass() {\n      this.$element.toggleClass(this.className);\n      var isOn = this.$element.hasClass(this.className);\n\n      if (isOn) {\n        /**\n         * Fires if the target element has the class after a toggle.\n         * @event Toggler#on\n         */this.$element.trigger('on.zf.toggler');\n      } else {\n        /**\n         * Fires if the target element does not have the class after a toggle.\n         * @event Toggler#off\n         */this.$element.trigger('off.zf.toggler');\n      }\n\n      this._updateARIA(isOn);\n\n      this.$element.find('[data-mutate]').trigger('mutateme.zf.trigger');\n    }\n\n    return _toggleClass;\n  }();\n\n  Toggler.prototype._toggleAnimate = function () {\n    function _toggleAnimate() {\n      var _this = this;\n\n      if (this.$element.is(':hidden')) {\n        Motion.animateIn(this.$element, this.animationIn, function () {\n          _this._updateARIA(true);\n\n          this.trigger('on.zf.toggler');\n          this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n        });\n      } else {\n        Motion.animateOut(this.$element, this.animationOut, function () {\n          _this._updateARIA(false);\n\n          this.trigger('off.zf.toggler');\n          this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n        });\n      }\n    }\n\n    return _toggleAnimate;\n  }();\n\n  Toggler.prototype._updateARIA = function () {\n    function _updateARIA(isOn) {\n      this.$element.attr('aria-expanded', isOn ? true : false);\n    }\n\n    return _updateARIA;\n  }(); /**\n        * Destroys the instance of Toggler on the element.\n        * @function\n        */\n\n  Toggler.prototype._destroy = function () {\n    function _destroy() {\n      this.$element.off('.zf.toggler');\n    }\n\n    return _destroy;\n  }();\n\n  return Toggler;\n}(Plugin);\n\nToggler.defaults = {\n  /**\n   * Tells the plugin if the element should animated when toggled.\n   * @option\n   * @type {boolean}\n   * @default false\n   */animate: false\n};","map":{"version":3,"sources":["packages/zurb:foundation-sites/js/foundation.toggler.js"],"names":["module1","module","export","Toggler","$","watch","require","v","Motion","Plugin","Triggers","_setup","element","options","$element","extend","defaults","data","className","init","_init","_events","input","animate","split","animationIn","animationOut","slice","id","attr","is","off","on","toggle","bind","_toggleClass","toggleClass","isOn","hasClass","trigger","_updateARIA","find","_toggleAnimate","_this","animateIn","animateOut","_destroy"],"mappings":"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","file":"packages/zurb:foundation-sites/js/foundation.toggler.js.map","sourcesContent":["'use strict';\n\nimport $ from 'jquery';\nimport { Motion } from './foundation.util.motion';\nimport { Plugin } from './foundation.plugin';\nimport { Triggers } from './foundation.util.triggers';\n\n/**\n * Toggler module.\n * @module foundation.toggler\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n */\n\nclass Toggler extends Plugin {\n  /**\n   * Creates a new instance of Toggler.\n   * @class\n   * @name Toggler\n   * @fires Toggler#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Toggler.defaults, element.data(), options);\n    this.className = '';\n    this.className = 'Toggler'; // ie9 back compat\n\n    // Triggers init is idempotent, just need to make sure it is initialized\n    Triggers.init($);\n\n    this._init();\n    this._events();\n  }\n\n  /**\n   * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n   * @function\n   * @private\n   */\n  _init() {\n    var input;\n    // Parse animation classes if they were set\n    if (this.options.animate) {\n      input = this.options.animate.split(' ');\n\n      this.animationIn = input[0];\n      this.animationOut = input[1] || null;\n    }\n    // Otherwise, parse toggle class\n    else {\n      input = this.$element.data('toggler');\n      // Allow for a . at the beginning of the string\n      this.className = input[0] === '.' ? input.slice(1) : input;\n    }\n\n    // Add ARIA attributes to triggers\n    var id = this.$element[0].id;\n    $(`[data-open=\"${id}\"], [data-close=\"${id}\"], [data-toggle=\"${id}\"]`)\n      .attr('aria-controls', id);\n    // If the target is hidden, add aria-hidden\n    this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n  }\n\n  /**\n   * Initializes events for the toggle trigger.\n   * @function\n   * @private\n   */\n  _events() {\n    this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n  }\n\n  /**\n   * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n   * @function\n   * @fires Toggler#on\n   * @fires Toggler#off\n   */\n  toggle() {\n    this[ this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n  }\n\n  _toggleClass() {\n    this.$element.toggleClass(this.className);\n\n    var isOn = this.$element.hasClass(this.className);\n    if (isOn) {\n      /**\n       * Fires if the target element has the class after a toggle.\n       * @event Toggler#on\n       */\n      this.$element.trigger('on.zf.toggler');\n    }\n    else {\n      /**\n       * Fires if the target element does not have the class after a toggle.\n       * @event Toggler#off\n       */\n      this.$element.trigger('off.zf.toggler');\n    }\n\n    this._updateARIA(isOn);\n    this.$element.find('[data-mutate]').trigger('mutateme.zf.trigger');\n  }\n\n  _toggleAnimate() {\n    var _this = this;\n\n    if (this.$element.is(':hidden')) {\n      Motion.animateIn(this.$element, this.animationIn, function() {\n        _this._updateARIA(true);\n        this.trigger('on.zf.toggler');\n        this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n      });\n    }\n    else {\n      Motion.animateOut(this.$element, this.animationOut, function() {\n        _this._updateARIA(false);\n        this.trigger('off.zf.toggler');\n        this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n      });\n    }\n  }\n\n  _updateARIA(isOn) {\n    this.$element.attr('aria-expanded', isOn ? true : false);\n  }\n\n  /**\n   * Destroys the instance of Toggler on the element.\n   * @function\n   */\n  _destroy() {\n    this.$element.off('.zf.toggler');\n  }\n}\n\nToggler.defaults = {\n  /**\n   * Tells the plugin if the element should animated when toggled.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  animate: false\n};\n\nexport {Toggler};\n"]},"hash":"f1dfc61fe09803a98ec790c9a71468ba879b32a8"}
