{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/vendor/jquery/src/serialize.js","filenameRelative":"packages/zurb:foundation-sites/vendor/jquery/src/serialize.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/vendor/jquery/src/serialize.js.map","sourceFileName":"packages/zurb:foundation-sites/vendor/jquery/src/serialize.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"serialize"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndefine([\"./core\", \"./manipulation/var/rcheckableType\", \"./core/init\", \"./traversing\", // filter\n\"./attributes/prop\"], function (jQuery, rcheckableType) {\n\tvar r20 = /%20/g,\n\t    rbracket = /\\[\\]$/,\n\t    rCRLF = /\\r?\\n/g,\n\t    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\t    rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n\tfunction buildParams(prefix, obj, traditional, add) {\n\t\tvar name;\n\n\t\tif (jQuery.isArray(obj)) {\n\t\t\t// Serialize array item.\n\t\t\tjQuery.each(obj, function (i, v) {\n\t\t\t\tif (traditional || rbracket.test(prefix)) {\n\t\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\t\tadd(prefix, v);\n\t\t\t\t} else {\n\t\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\t\tbuildParams(prefix + \"[\" + ((typeof v === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(v)) === \"object\" ? i : \"\") + \"]\", v, traditional, add);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (!traditional && jQuery.type(obj) === \"object\") {\n\t\t\t// Serialize object item.\n\t\t\tfor (name in meteorBabelHelpers.sanitizeForInObject(obj)) {\n\t\t\t\tbuildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n\t\t\t}\n\t\t} else {\n\t\t\t// Serialize scalar item.\n\t\t\tadd(prefix, obj);\n\t\t}\n\t} // Serialize an array of form elements or a set of\n\t// key/values into a query string\n\n\n\tjQuery.param = function (a, traditional) {\n\t\tvar prefix,\n\t\t    s = [],\n\t\t    add = function (key, value) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction(value) ? value() : value == null ? \"\" : value;\n\t\t\ts[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n\t\t}; // Set traditional to true for jQuery <= 1.3.2 behavior.\n\n\n\t\tif (traditional === undefined) {\n\t\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t\t} // If an array was passed in, assume that it is an array of form elements.\n\n\n\t\tif (jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n\t\t\t// Serialize the form elements\n\t\t\tjQuery.each(a, function () {\n\t\t\t\tadd(this.name, this.value);\n\t\t\t});\n\t\t} else {\n\t\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t\t// did it), otherwise encode params recursively.\n\t\t\tfor (prefix in meteorBabelHelpers.sanitizeForInObject(a)) {\n\t\t\t\tbuildParams(prefix, a[prefix], traditional, add);\n\t\t\t}\n\t\t} // Return the resulting serialization\n\n\n\t\treturn s.join(\"&\").replace(r20, \"+\");\n\t};\n\n\tjQuery.fn.extend({\n\t\tserialize: function () {\n\t\t\treturn jQuery.param(this.serializeArray());\n\t\t},\n\t\tserializeArray: function () {\n\t\t\treturn this.map(function () {\n\t\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\t\tvar elements = jQuery.prop(this, \"elements\");\n\t\t\t\treturn elements ? jQuery.makeArray(elements) : this;\n\t\t\t}).filter(function () {\n\t\t\t\tvar type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n\t\t\t\treturn this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n\t\t\t}).map(function (i, elem) {\n\t\t\t\tvar val = jQuery(this).val();\n\t\t\t\treturn val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: elem.name,\n\t\t\t\t\t\tvalue: val.replace(rCRLF, \"\\r\\n\")\n\t\t\t\t\t};\n\t\t\t\t}) : {\n\t\t\t\t\tname: elem.name,\n\t\t\t\t\tvalue: val.replace(rCRLF, \"\\r\\n\")\n\t\t\t\t};\n\t\t\t}).get();\n\t\t}\n\t});\n\treturn jQuery;\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/vendor/jquery/src/serialize.js"],"names":["define","jQuery","rcheckableType","r20","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","prefix","obj","traditional","add","name","isArray","each","i","v","test","type","param","a","s","key","value","isFunction","length","encodeURIComponent","undefined","ajaxSettings","jquery","isPlainObject","join","replace","fn","extend","serialize","serializeArray","map","elements","prop","makeArray","filter","is","nodeName","checked","elem","val","get"],"mappings":"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","file":"packages/zurb:foundation-sites/vendor/jquery/src/serialize.js.map","sourcesContent":["define([\n\t\"./core\",\n\t\"./manipulation/var/rcheckableType\",\n\t\"./core/init\",\n\t\"./traversing\", // filter\n\t\"./attributes/prop\"\n], function( jQuery, rcheckableType ) {\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function() {\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\nreturn jQuery;\n});\n"]},"hash":"b500e8a1f238dd6ea57f5af26647097ef937e493"}
