{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/customizer/lib/sass.js","filenameRelative":"packages/zurb:foundation-sites/customizer/lib/sass.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/customizer/lib/sass.js.map","sourceFileName":"packages/zurb:foundation-sites/customizer/lib/sass.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"sass"},"ignored":false,"code":"var empty = require('is-empty-object');\n\nvar format = require('util').format;\n\nvar multiline = require('multiline').stripIndent;\n\nvar SASS_TEMPLATE = multiline(function () {/*\n                                           @charset 'utf-8';\n                                           // Variables go here\n                                           %s\n                                           // Core imports go here\n                                           @import 'foundation';\n                                           @import 'motion-ui';\n                                           // Modules go here\n                                           %s\n                                           // Motion UI goes here\n                                           @include motion-ui-transitions;\n                                           @include motion-ui-animations;\n                                           */}); /**\n                                                  * Generates an entry point Sass file with a custom list of CSS exports and Sass variables.\n                                                  * @param {Object} config - Customizer configuration object.\n                                                  * @param {String[]} modules - Modules to include CSS for.\n                                                  * @param {Object} variables - Sass variable overrides to include. The key is the name of the variable, and the value is the value.\n                                                  * @returns {String} Formatted Sass file.\n                                                  */\n\nmodule.exports = function (config, modules, variables) {\n  var variableList = [];\n  var colorList = {};\n  var exportList = ['@include foundation-global-styles;'];\n\n  if (empty(modules)) {\n    modules = Object.keys(config);\n  } // Create variable overrides code\n\n\n  for (var i in meteorBabelHelpers.sanitizeForInObject(variables)) {\n    var name = i.replace('_', '-');\n\n    if (name.match(/-color$/)) {\n      var key = name.replace('-color', '');\n      colorList[key] = variables[i];\n    } else {\n      variableList.push(format('$%s: %s;', name, variables[i]));\n    }\n  }\n\n  if (!empty(colorList)) {\n    variableList.push(createPaletteMap(colorList));\n  } // Create module exports with @include\n\n\n  for (var i in meteorBabelHelpers.sanitizeForInObject(modules)) {\n    var name = modules[i];\n\n    if (config[name] && config[name].sass) {\n      exportList.push(format('@include foundation-%s;', config[name].sass));\n    }\n  }\n\n  return format(SASS_TEMPLATE, variableList.join('\\n'), exportList.join('\\n'));\n};\n\nfunction createPaletteMap(colors) {\n  var output = '$foundation-palette: (%s\\n);';\n  var keys = '';\n\n  for (var i in meteorBabelHelpers.sanitizeForInObject(colors)) {\n    keys += format('\\n  %s: %s,', i, colors[i]);\n  }\n\n  return format(output, keys);\n}","map":{"version":3,"sources":["packages/zurb:foundation-sites/customizer/lib/sass.js"],"names":["empty","require","format","multiline","stripIndent","SASS_TEMPLATE","module","exports","config","modules","variables","variableList","colorList","exportList","Object","keys","i","name","replace","match","key","push","createPaletteMap","sass","join","colors","output"],"mappings":"AAAA,IAAIA,QAAQC,QAAQ,iBAAR,CAAZ;;AACA,IAAIC,SAASD,QAAQ,MAAR,EAAgBC,MAA7B;;AACA,IAAIC,YAAYF,QAAQ,WAAR,EAAqBG,WAArC;;AAEA,IAAIC,gBAAgBF,UAAU,YAAW,CAAC;;;;;;;;;;;;6CAgBvC,CAhBiB,CAApB,C,CAkBA;;;;;;;;AAOAG,OAAOC,OAAP,GAAiB,UAASC,MAAT,EAAiBC,OAAjB,EAA0BC,SAA1B,EAAqC;AACpD,MAAIC,eAAe,EAAnB;AACA,MAAIC,YAAY,EAAhB;AACA,MAAIC,aAAa,CAAC,oCAAD,CAAjB;;AAEA,MAAIb,MAAMS,OAAN,CAAJ,EAAoB;AAClBA,cAAUK,OAAOC,IAAP,CAAYP,MAAZ,CAAV;AACD,GAPmD,CASpD;;;AACA,OAAK,IAAIQ,CAAT,2CAAcN,SAAd,GAAyB;AACvB,QAAIO,OAAOD,EAAEE,OAAF,CAAU,GAAV,EAAe,GAAf,CAAX;;AACA,QAAID,KAAKE,KAAL,CAAW,SAAX,CAAJ,EAA2B;AACzB,UAAIC,MAAMH,KAAKC,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAV;AACAN,gBAAUQ,GAAV,IAAiBV,UAAUM,CAAV,CAAjB;AACD,KAHD,MAIK;AACHL,mBAAaU,IAAb,CAAkBnB,OAAO,UAAP,EAAmBe,IAAnB,EAAyBP,UAAUM,CAAV,CAAzB,CAAlB;AACD;AACF;;AAED,MAAI,CAAChB,MAAMY,SAAN,CAAL,EAAuB;AACrBD,iBAAaU,IAAb,CAAkBC,iBAAiBV,SAAjB,CAAlB;AACD,GAvBmD,CAyBpD;;;AACA,OAAK,IAAII,CAAT,2CAAcP,OAAd,GAAuB;AACrB,QAAIQ,OAAOR,QAAQO,CAAR,CAAX;;AAEA,QAAIR,OAAOS,IAAP,KAAgBT,OAAOS,IAAP,EAAaM,IAAjC,EAAuC;AACrCV,iBAAWQ,IAAX,CAAgBnB,OAAO,yBAAP,EAAkCM,OAAOS,IAAP,EAAaM,IAA/C,CAAhB;AACD;AACF;;AAED,SAAOrB,OAAOG,aAAP,EAAsBM,aAAaa,IAAb,CAAkB,IAAlB,CAAtB,EAA+CX,WAAWW,IAAX,CAAgB,IAAhB,CAA/C,CAAP;AACD,CAnCD;;AAqCA,SAASF,gBAAT,CAA0BG,MAA1B,EAAkC;AAChC,MAAIC,SAAS,8BAAb;AACA,MAAIX,OAAO,EAAX;;AAEA,OAAK,IAAIC,CAAT,2CAAcS,MAAd,GAAsB;AACpBV,YAAQb,OAAO,aAAP,EAAsBc,CAAtB,EAAyBS,OAAOT,CAAP,CAAzB,CAAR;AACD;;AAED,SAAOd,OAAOwB,MAAP,EAAeX,IAAf,CAAP;AACD","file":"packages/zurb:foundation-sites/customizer/lib/sass.js.map","sourcesContent":["var empty = require('is-empty-object');\nvar format = require('util').format;\nvar multiline = require('multiline').stripIndent;\n\nvar SASS_TEMPLATE = multiline(function() {/*\n  @charset 'utf-8';\n\n  // Variables go here\n  %s\n\n  // Core imports go here\n  @import 'foundation';\n  @import 'motion-ui';\n\n  // Modules go here\n  %s\n\n  // Motion UI goes here\n  @include motion-ui-transitions;\n  @include motion-ui-animations;\n*/});\n\n/**\n * Generates an entry point Sass file with a custom list of CSS exports and Sass variables.\n * @param {Object} config - Customizer configuration object.\n * @param {String[]} modules - Modules to include CSS for.\n * @param {Object} variables - Sass variable overrides to include. The key is the name of the variable, and the value is the value.\n * @returns {String} Formatted Sass file.\n */\nmodule.exports = function(config, modules, variables) {\n  var variableList = [];\n  var colorList = {};\n  var exportList = ['@include foundation-global-styles;'];\n\n  if (empty(modules)) {\n    modules = Object.keys(config);\n  }\n\n  // Create variable overrides code\n  for (var i in variables) {\n    var name = i.replace('_', '-');\n    if (name.match(/-color$/)) {\n      var key = name.replace('-color', '');\n      colorList[key] = variables[i];\n    }\n    else {\n      variableList.push(format('$%s: %s;', name, variables[i]));\n    }\n  }\n\n  if (!empty(colorList)) {\n    variableList.push(createPaletteMap(colorList));\n  }\n\n  // Create module exports with @include\n  for (var i in modules) {\n    var name = modules[i];\n\n    if (config[name] && config[name].sass) {\n      exportList.push(format('@include foundation-%s;', config[name].sass));\n    }\n  }\n\n  return format(SASS_TEMPLATE, variableList.join('\\n'), exportList.join('\\n'))\n}\n\nfunction createPaletteMap(colors) {\n  var output = '$foundation-palette: (%s\\n);';\n  var keys = '';\n\n  for (var i in colors) {\n    keys += format('\\n  %s: %s,', i, colors[i]);\n  }\n\n  return format(output, keys);\n}\n"]},"hash":"40e6e956e60d62a0cdac71398a40a8c6d69e7595"}
