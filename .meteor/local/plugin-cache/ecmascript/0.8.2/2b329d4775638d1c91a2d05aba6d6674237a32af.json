{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"jquery","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"$"}]},{"source":"./foundation.util.mediaQuery","imported":["MediaQuery"],"specifiers":[{"kind":"named","imported":"MediaQuery","local":"MediaQuery"}]},{"source":"./foundation.util.core","imported":["GetYoDigits"],"specifiers":[{"kind":"named","imported":"GetYoDigits","local":"GetYoDigits"}]},{"source":"./foundation.plugin","imported":["Plugin"],"specifiers":[{"kind":"named","imported":"Plugin","local":"Plugin"}]},{"source":"./foundation.dropdownMenu","imported":["DropdownMenu"],"specifiers":[{"kind":"named","imported":"DropdownMenu","local":"DropdownMenu"}]},{"source":"./foundation.drilldown","imported":["Drilldown"],"specifiers":[{"kind":"named","imported":"Drilldown","local":"Drilldown"}]},{"source":"./foundation.accordionMenu","imported":["AccordionMenu"],"specifiers":[{"kind":"named","imported":"AccordionMenu","local":"AccordionMenu"}]}],"exports":{"exported":["ResponsiveMenu"],"specifiers":[{"kind":"local","local":"ResponsiveMenu","exported":"ResponsiveMenu"}]}}},"options":{"filename":"packages/zurb:foundation-sites/js/foundation.responsiveMenu.js","filenameRelative":"packages/zurb:foundation-sites/js/foundation.responsiveMenu.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/js/foundation.responsiveMenu.js.map","sourceFileName":"packages/zurb:foundation-sites/js/foundation.responsiveMenu.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.responsiveMenu"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar module1 = module;\nmodule1.export({\n  ResponsiveMenu: function () {\n    return ResponsiveMenu;\n  }\n});\nvar $ = void 0;\nmodule1.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 0);\nvar MediaQuery = void 0;\nmodule1.watch(require(\"./foundation.util.mediaQuery\"), {\n  MediaQuery: function (v) {\n    MediaQuery = v;\n  }\n}, 1);\nvar GetYoDigits = void 0;\nmodule1.watch(require(\"./foundation.util.core\"), {\n  GetYoDigits: function (v) {\n    GetYoDigits = v;\n  }\n}, 2);\nvar Plugin = void 0;\nmodule1.watch(require(\"./foundation.plugin\"), {\n  Plugin: function (v) {\n    Plugin = v;\n  }\n}, 3);\nvar DropdownMenu = void 0;\nmodule1.watch(require(\"./foundation.dropdownMenu\"), {\n  DropdownMenu: function (v) {\n    DropdownMenu = v;\n  }\n}, 4);\nvar Drilldown = void 0;\nmodule1.watch(require(\"./foundation.drilldown\"), {\n  Drilldown: function (v) {\n    Drilldown = v;\n  }\n}, 5);\nvar AccordionMenu = void 0;\nmodule1.watch(require(\"./foundation.accordionMenu\"), {\n  AccordionMenu: function (v) {\n    AccordionMenu = v;\n  }\n}, 6);\nvar MenuPlugins = {\n  dropdown: {\n    cssClass: 'dropdown',\n    plugin: DropdownMenu\n  },\n  drilldown: {\n    cssClass: 'drilldown',\n    plugin: Drilldown\n  },\n  accordion: {\n    cssClass: 'accordion-menu',\n    plugin: AccordionMenu\n  }\n}; // import \"foundation.util.triggers.js\";\n/**\n * ResponsiveMenu module.\n * @module foundation.responsiveMenu\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n */\n\nvar ResponsiveMenu = function (_Plugin) {\n  (0, _inherits3.default)(ResponsiveMenu, _Plugin);\n\n  function ResponsiveMenu() {\n    (0, _classCallCheck3.default)(this, ResponsiveMenu);\n    return (0, _possibleConstructorReturn3.default)(this, _Plugin.apply(this, arguments));\n  }\n\n  /**\n   * Creates a new instance of a responsive menu.\n   * @class\n   * @name ResponsiveMenu\n   * @fires ResponsiveMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */ResponsiveMenu.prototype._setup = function () {\n    function _setup(element, options) {\n      this.$element = $(element);\n      this.rules = this.$element.data('responsive-menu');\n      this.currentMq = null;\n      this.currentPlugin = null;\n      this.className = 'ResponsiveMenu'; // ie9 back compat\n\n      this._init();\n\n      this._events();\n    }\n\n    return _setup;\n  }(); /**\n        * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n        * @function\n        * @private\n        */\n\n  ResponsiveMenu.prototype._init = function () {\n    function _init() {\n      MediaQuery._init(); // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n\n\n      if (typeof this.rules === 'string') {\n        var rulesTree = {}; // Parse rules from \"classes\" pulled from data attribute\n\n        var rules = this.rules.split(' '); // Iterate through every rule found\n\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i].split('-');\n          var ruleSize = rule.length > 1 ? rule[0] : 'small';\n          var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n          if (MenuPlugins[rulePlugin] !== null) {\n            rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n          }\n        }\n\n        this.rules = rulesTree;\n      }\n\n      if (!$.isEmptyObject(this.rules)) {\n        this._checkMediaQueries();\n      } // Add data-mutate since children may need it.\n\n\n      this.$element.attr('data-mutate', this.$element.attr('data-mutate') || GetYoDigits(6, 'responsive-menu'));\n    }\n\n    return _init;\n  }(); /**\n        * Initializes events for the Menu.\n        * @function\n        * @private\n        */\n\n  ResponsiveMenu.prototype._events = function () {\n    function _events() {\n      var _this = this;\n\n      $(window).on('changed.zf.mediaquery', function () {\n        _this._checkMediaQueries();\n      }); // $(window).on('resize.zf.ResponsiveMenu', function() {\n      //   _this._checkMediaQueries();\n      // });\n    }\n\n    return _events;\n  }(); /**\n        * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n        * @function\n        * @private\n        */\n\n  ResponsiveMenu.prototype._checkMediaQueries = function () {\n    function _checkMediaQueries() {\n      var matchedMq,\n          _this = this; // Iterate through each rule and find the last matching rule\n\n\n      $.each(this.rules, function (key) {\n        if (MediaQuery.atLeast(key)) {\n          matchedMq = key;\n        }\n      }); // No match? No dice\n\n      if (!matchedMq) return; // Plugin already initialized? We good\n\n      if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return; // Remove existing plugin-specific CSS classes\n\n      $.each(MenuPlugins, function (key, value) {\n        _this.$element.removeClass(value.cssClass);\n      }); // Add the CSS class for the new plugin\n\n      this.$element.addClass(this.rules[matchedMq].cssClass); // Create an instance of the new plugin\n\n      if (this.currentPlugin) this.currentPlugin.destroy();\n      this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n    }\n\n    return _checkMediaQueries;\n  }(); /**\n        * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n        * @function\n        */\n\n  ResponsiveMenu.prototype._destroy = function () {\n    function _destroy() {\n      this.currentPlugin.destroy();\n      $(window).off('.zf.ResponsiveMenu');\n    }\n\n    return _destroy;\n  }();\n\n  return ResponsiveMenu;\n}(Plugin);\n\nResponsiveMenu.defaults = {};","map":{"version":3,"sources":["packages/zurb:foundation-sites/js/foundation.responsiveMenu.js"],"names":["module1","module","export","ResponsiveMenu","$","watch","require","v","MediaQuery","GetYoDigits","Plugin","DropdownMenu","Drilldown","AccordionMenu","MenuPlugins","dropdown","cssClass","plugin","drilldown","accordion","_setup","element","options","$element","rules","data","currentMq","currentPlugin","className","_init","_events","rulesTree","split","i","length","rule","ruleSize","rulePlugin","isEmptyObject","_checkMediaQueries","attr","_this","window","on","matchedMq","each","key","atLeast","value","removeClass","addClass","destroy","_destroy","off","defaults"],"mappings":"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","file":"packages/zurb:foundation-sites/js/foundation.responsiveMenu.js.map","sourcesContent":["'use strict';\n\nimport $ from 'jquery';\n\nimport { MediaQuery } from './foundation.util.mediaQuery';\nimport { GetYoDigits } from './foundation.util.core';\nimport { Plugin } from './foundation.plugin';\n\nimport { DropdownMenu } from './foundation.dropdownMenu';\nimport { Drilldown } from './foundation.drilldown';\nimport { AccordionMenu } from './foundation.accordionMenu';\n\nlet MenuPlugins = {\n  dropdown: {\n    cssClass: 'dropdown',\n    plugin: DropdownMenu\n  },\n drilldown: {\n    cssClass: 'drilldown',\n    plugin: Drilldown\n  },\n  accordion: {\n    cssClass: 'accordion-menu',\n    plugin: AccordionMenu\n  }\n};\n\n  // import \"foundation.util.triggers.js\";\n\n\n/**\n * ResponsiveMenu module.\n * @module foundation.responsiveMenu\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n */\n\nclass ResponsiveMenu extends Plugin {\n  /**\n   * Creates a new instance of a responsive menu.\n   * @class\n   * @name ResponsiveMenu\n   * @fires ResponsiveMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = $(element);\n    this.rules = this.$element.data('responsive-menu');\n    this.currentMq = null;\n    this.currentPlugin = null;\n    this.className = 'ResponsiveMenu'; // ie9 back compat\n\n    this._init();\n    this._events();\n  }\n\n  /**\n   * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n   * @function\n   * @private\n   */\n  _init() {\n\n    MediaQuery._init();\n    // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n    if (typeof this.rules === 'string') {\n      let rulesTree = {};\n\n      // Parse rules from \"classes\" pulled from data attribute\n      let rules = this.rules.split(' ');\n\n      // Iterate through every rule found\n      for (let i = 0; i < rules.length; i++) {\n        let rule = rules[i].split('-');\n        let ruleSize = rule.length > 1 ? rule[0] : 'small';\n        let rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n        if (MenuPlugins[rulePlugin] !== null) {\n          rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n        }\n      }\n\n      this.rules = rulesTree;\n    }\n\n    if (!$.isEmptyObject(this.rules)) {\n      this._checkMediaQueries();\n    }\n    // Add data-mutate since children may need it.\n    this.$element.attr('data-mutate', (this.$element.attr('data-mutate') || GetYoDigits(6, 'responsive-menu')));\n  }\n\n  /**\n   * Initializes events for the Menu.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function() {\n      _this._checkMediaQueries();\n    });\n    // $(window).on('resize.zf.ResponsiveMenu', function() {\n    //   _this._checkMediaQueries();\n    // });\n  }\n\n  /**\n   * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n   * @function\n   * @private\n   */\n  _checkMediaQueries() {\n    var matchedMq, _this = this;\n    // Iterate through each rule and find the last matching rule\n    $.each(this.rules, function(key) {\n      if (MediaQuery.atLeast(key)) {\n        matchedMq = key;\n      }\n    });\n\n    // No match? No dice\n    if (!matchedMq) return;\n\n    // Plugin already initialized? We good\n    if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n    // Remove existing plugin-specific CSS classes\n    $.each(MenuPlugins, function(key, value) {\n      _this.$element.removeClass(value.cssClass);\n    });\n\n    // Add the CSS class for the new plugin\n    this.$element.addClass(this.rules[matchedMq].cssClass);\n\n    // Create an instance of the new plugin\n    if (this.currentPlugin) this.currentPlugin.destroy();\n    this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n  }\n\n  /**\n   * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n   * @function\n   */\n  _destroy() {\n    this.currentPlugin.destroy();\n    $(window).off('.zf.ResponsiveMenu');\n  }\n}\n\nResponsiveMenu.defaults = {};\n\nexport {ResponsiveMenu};\n"]},"hash":"2b329d4775638d1c91a2d05aba6d6674237a32af"}
