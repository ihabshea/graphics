{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/vendor/jquery/src/core/access.js","filenameRelative":"packages/zurb:foundation-sites/vendor/jquery/src/core/access.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/vendor/jquery/src/core/access.js.map","sourceFileName":"packages/zurb:foundation-sites/vendor/jquery/src/core/access.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"access"},"ignored":false,"code":"define([\"../core\"], function (jQuery) {\n\t// Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\tvar access = jQuery.access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n\t\tvar i = 0,\n\t\t    len = elems.length,\n\t\t    bulk = key == null; // Sets many values\n\n\t\tif (jQuery.type(key) === \"object\") {\n\t\t\tchainable = true;\n\n\t\t\tfor (i in meteorBabelHelpers.sanitizeForInObject(key)) {\n\t\t\t\tjQuery.access(elems, fn, i, key[i], true, emptyGet, raw);\n\t\t\t} // Sets one value\n\n\t\t} else if (value !== undefined) {\n\t\t\tchainable = true;\n\n\t\t\tif (!jQuery.isFunction(value)) {\n\t\t\t\traw = true;\n\t\t\t}\n\n\t\t\tif (bulk) {\n\t\t\t\t// Bulk operations run against the entire set\n\t\t\t\tif (raw) {\n\t\t\t\t\tfn.call(elems, value);\n\t\t\t\t\tfn = null; // ...except when executing function values\n\t\t\t\t} else {\n\t\t\t\t\tbulk = fn;\n\n\t\t\t\t\tfn = function (elem, key, value) {\n\t\t\t\t\t\treturn bulk.call(jQuery(elem), value);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fn) {\n\t\t\t\tfor (; i < len; i++) {\n\t\t\t\t\tfn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn chainable ? elems : // Gets\n\t\tbulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;\n\t};\n\n\treturn access;\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/vendor/jquery/src/core/access.js"],"names":["define","jQuery","access","elems","fn","key","value","chainable","emptyGet","raw","i","len","length","bulk","type","undefined","isFunction","call","elem"],"mappings":"AAAAA,OAAO,CACN,SADM,CAAP,EAEG,UAAUC,MAAV,EAAmB;AAEtB;AACA;AACA,KAAIC,SAASD,OAAOC,MAAP,GAAgB,UAAUC,KAAV,EAAiBC,EAAjB,EAAqBC,GAArB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,QAA5C,EAAsDC,GAAtD,EAA4D;AACxF,MAAIC,IAAI,CAAR;AAAA,MACCC,MAAMR,MAAMS,MADb;AAAA,MAECC,OAAOR,OAAO,IAFf,CADwF,CAKxF;;AACA,MAAKJ,OAAOa,IAAP,CAAaT,GAAb,MAAuB,QAA5B,EAAuC;AACtCE,eAAY,IAAZ;;AACA,QAAMG,CAAN,2CAAWL,GAAX,GAAiB;AAChBJ,WAAOC,MAAP,CAAeC,KAAf,EAAsBC,EAAtB,EAA0BM,CAA1B,EAA6BL,IAAIK,CAAJ,CAA7B,EAAqC,IAArC,EAA2CF,QAA3C,EAAqDC,GAArD;AACA,IAJqC,CAMvC;;AACC,GAPD,MAOO,IAAKH,UAAUS,SAAf,EAA2B;AACjCR,eAAY,IAAZ;;AAEA,OAAK,CAACN,OAAOe,UAAP,CAAmBV,KAAnB,CAAN,EAAmC;AAClCG,UAAM,IAAN;AACA;;AAED,OAAKI,IAAL,EAAY;AACX;AACA,QAAKJ,GAAL,EAAW;AACVL,QAAGa,IAAH,CAASd,KAAT,EAAgBG,KAAhB;AACAF,UAAK,IAAL,CAFU,CAIX;AACC,KALD,MAKO;AACNS,YAAOT,EAAP;;AACAA,UAAK,UAAUc,IAAV,EAAgBb,GAAhB,EAAqBC,KAArB,EAA6B;AACjC,aAAOO,KAAKI,IAAL,CAAWhB,OAAQiB,IAAR,CAAX,EAA2BZ,KAA3B,CAAP;AACA,MAFD;AAGA;AACD;;AAED,OAAKF,EAAL,EAAU;AACT,WAAQM,IAAIC,GAAZ,EAAiBD,GAAjB,EAAuB;AACtBN,QAAID,MAAMO,CAAN,CAAJ,EAAcL,GAAd,EAAmBI,MAAMH,KAAN,GAAcA,MAAMW,IAAN,CAAYd,MAAMO,CAAN,CAAZ,EAAsBA,CAAtB,EAAyBN,GAAID,MAAMO,CAAN,CAAJ,EAAcL,GAAd,CAAzB,CAAjC;AACA;AACD;AACD;;AAED,SAAOE,YACNJ,KADM,GAGN;AACAU,SACCT,GAAGa,IAAH,CAASd,KAAT,CADD,GAECQ,MAAMP,GAAID,MAAM,CAAN,CAAJ,EAAcE,GAAd,CAAN,GAA4BG,QAN9B;AAOA,EAjDD;;AAmDA,QAAON,MAAP;AAEC,CA3DD","file":"packages/zurb:foundation-sites/vendor/jquery/src/core/access.js.map","sourcesContent":["define([\n\t\"../core\"\n], function( jQuery ) {\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[0], key ) : emptyGet;\n};\n\nreturn access;\n\n});\n"]},"hash":"fc5b5281ea2ba6a972e9199e7b1e70e9c529192b"}
