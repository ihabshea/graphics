{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/vendor/jquery/src/ajax/xhr.js","filenameRelative":"packages/zurb:foundation-sites/vendor/jquery/src/ajax/xhr.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/vendor/jquery/src/ajax/xhr.js.map","sourceFileName":"packages/zurb:foundation-sites/vendor/jquery/src/ajax/xhr.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"xhr"},"ignored":false,"code":"define([\"../core\", \"../var/support\", \"../ajax\"], function (jQuery, support) {\n\tjQuery.ajaxSettings.xhr = function () {\n\t\ttry {\n\t\t\treturn new XMLHttpRequest();\n\t\t} catch (e) {}\n\t};\n\n\tvar xhrId = 0,\n\t    xhrCallbacks = {},\n\t    xhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\t    xhrSupported = jQuery.ajaxSettings.xhr(); // Support: IE9\n\t// Open requests must be manually aborted on unload (#5280)\n\t// See https://support.microsoft.com/kb/2856746 for more info\n\n\tif (window.attachEvent) {\n\t\twindow.attachEvent(\"onunload\", function () {\n\t\t\tfor (var key in meteorBabelHelpers.sanitizeForInObject(xhrCallbacks)) {\n\t\t\t\txhrCallbacks[key]();\n\t\t\t}\n\t\t});\n\t}\n\n\tsupport.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n\tsupport.ajax = xhrSupported = !!xhrSupported;\n\tjQuery.ajaxTransport(function (options) {\n\t\tvar callback; // Cross domain only allowed if supported through XMLHttpRequest\n\n\t\tif (support.cors || xhrSupported && !options.crossDomain) {\n\t\t\treturn {\n\t\t\t\tsend: function (headers, complete) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t    xhr = options.xhr(),\n\t\t\t\t\t    id = ++xhrId;\n\t\t\t\t\txhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n\t\t\t\t\tif (options.xhrFields) {\n\t\t\t\t\t\tfor (i in meteorBabelHelpers.sanitizeForInObject(options.xhrFields)) {\n\t\t\t\t\t\t\txhr[i] = options.xhrFields[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t} // Override mime type if needed\n\n\n\t\t\t\t\tif (options.mimeType && xhr.overrideMimeType) {\n\t\t\t\t\t\txhr.overrideMimeType(options.mimeType);\n\t\t\t\t\t} // X-Requested-With header\n\t\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t\t// For same-domain requests, won't change header if already provided.\n\n\n\t\t\t\t\tif (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n\t\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t\t} // Set headers\n\n\n\t\t\t\t\tfor (i in meteorBabelHelpers.sanitizeForInObject(headers)) {\n\t\t\t\t\t\txhr.setRequestHeader(i, headers[i]);\n\t\t\t\t\t} // Callback\n\n\n\t\t\t\t\tcallback = function (type) {\n\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tdelete xhrCallbacks[id];\n\t\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\n\t\t\t\t\t\t\t\tif (type === \"abort\") {\n\t\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t\t} else if (type === \"error\") {\n\t\t\t\t\t\t\t\t\tcomplete( // file: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\txhr.status, xhr.statusText);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE9\n\t\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined, xhr.getAllResponseHeaders());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}; // Listen to events\n\n\n\t\t\t\t\txhr.onload = callback();\n\t\t\t\t\txhr.onerror = callback(\"error\"); // Create the abort callback\n\n\t\t\t\t\tcallback = xhrCallbacks[id] = callback(\"abort\");\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\t\txhr.send(options.hasContent && options.data || null);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tabort: function () {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/vendor/jquery/src/ajax/xhr.js"],"names":["define","jQuery","support","ajaxSettings","xhr","XMLHttpRequest","e","xhrId","xhrCallbacks","xhrSuccessStatus","xhrSupported","window","attachEvent","key","cors","ajax","ajaxTransport","options","callback","crossDomain","send","headers","complete","i","id","open","type","url","async","username","password","xhrFields","mimeType","overrideMimeType","setRequestHeader","onload","onerror","abort","status","statusText","responseText","text","undefined","getAllResponseHeaders","hasContent","data"],"mappings":"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","file":"packages/zurb:foundation-sites/vendor/jquery/src/ajax/xhr.js.map","sourcesContent":["define([\n\t\"../core\",\n\t\"../var/support\",\n\t\"../ajax\"\n], function( jQuery, support ) {\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrId = 0,\n\txhrCallbacks = {},\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\n// Support: IE9\n// Open requests must be manually aborted on unload (#5280)\n// See https://support.microsoft.com/kb/2856746 for more info\nif ( window.attachEvent ) {\n\twindow.attachEvent( \"onunload\", function() {\n\t\tfor ( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t});\n}\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr(),\n\t\t\t\t\tid = ++xhrId;\n\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[ id ] = callback(\"abort\");\n\n\t\t\t\ttry {\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n});\n"]},"hash":"c8576eebf3a37a42f0ef510f96e44063a6a081f6"}
