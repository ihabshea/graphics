{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/vendor/modernizr/test/js/dumpdata.js","filenameRelative":"packages/zurb:foundation-sites/vendor/modernizr/test/js/dumpdata.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/vendor/modernizr/test/js/dumpdata.js.map","sourceFileName":"packages/zurb:foundation-sites/vendor/modernizr/test/js/dumpdata.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"dumpdata"},"ignored":false,"code":"function dumpModernizr() {\n  var str = '';\n  dumpModernizr.old = dumpModernizr.old || {};\n\n  for (var prop in meteorBabelHelpers.sanitizeForInObject(Modernizr)) {\n    // skip previously done ones.\n    if (dumpModernizr.old[prop]) continue;else dumpModernizr.old[prop] = true;\n    if (typeof Modernizr[prop] === 'function') continue; // skip unit test items\n\n    if (/^test/.test(prop)) continue;\n\n    if (~TEST.inputs.indexOf(prop)) {\n      str += '<li><b>' + prop + '{}</b><ul>';\n\n      for (var field in meteorBabelHelpers.sanitizeForInObject(Modernizr[prop])) {\n        str += '<li class=\"' + (Modernizr[prop][field] ? 'yes' : '') + '\">' + field + ': ' + Modernizr[prop][field] + '</li>';\n      }\n\n      str += '</ul></li>';\n    } else {\n      str += '<li  id=\"' + prop + '\" class=\"' + (Modernizr[prop] ? 'yes' : '') + '\">' + prop + ': ' + Modernizr[prop] + '</li>';\n    }\n  }\n\n  return str;\n}\n\nfunction grabFeatDetects() {\n  // thx github.js\n  $.getScript('https://api.github.com/repos/Modernizr/Modernizr/git/trees/master?recursive=1&callback=processTree');\n}\n\nfunction processTree(data) {\n  var filenames = [];\n\n  for (var i = 0; i < data.data.tree.length; i++) {\n    var file = data.data.tree[i];\n    var match = file.path.match(/^feature-detects\\/(.*)/);\n    if (!match) continue;\n    var relpath = location.host == \"modernizr.github.com\" ? '../modernizr-git/' : '../';\n    filenames.push(relpath + match[0]);\n  }\n\n  var jqxhrs = filenames.map(function (filename) {\n    return jQuery.getScript(filename);\n  });\n  jQuery.when.apply(jQuery, jqxhrs).done(resultsToDOM);\n}\n\nfunction resultsToDOM() {\n  var modOutput = document.createElement('div'),\n      ref = document.getElementById('qunit-testresult') || document.getElementById('qunit-tests');\n  modOutput.className = 'output';\n  modOutput.innerHTML = dumpModernizr();\n  ref.parentNode.insertBefore(modOutput, ref); // Modernizr object as text\n\n  document.getElementsByTagName('textarea')[0].innerHTML = JSON.stringify(Modernizr);\n} /* uno    */\n\nresultsToDOM(); /* dos    */\ngrabFeatDetects(); /* tres   */\nsetTimeout(resultsToDOM, 5e3); /* quatro */\nsetTimeout(resultsToDOM, 15e3);","map":{"version":3,"sources":["packages/zurb:foundation-sites/vendor/modernizr/test/js/dumpdata.js"],"names":["dumpModernizr","str","old","prop","Modernizr","test","TEST","inputs","indexOf","field","grabFeatDetects","$","getScript","processTree","data","filenames","i","tree","length","file","match","path","relpath","location","host","push","jqxhrs","map","filename","jQuery","when","apply","done","resultsToDOM","modOutput","document","createElement","ref","getElementById","className","innerHTML","parentNode","insertBefore","getElementsByTagName","JSON","stringify","setTimeout"],"mappings":"AAAA,SAASA,aAAT,GAAwB;AACtB,MAAIC,MAAM,EAAV;AACAD,gBAAcE,GAAd,GAAoBF,cAAcE,GAAd,IAAqB,EAAzC;;AAEE,OAAK,IAAIC,IAAT,2CAAiBC,SAAjB,GAA4B;AAE1B;AACA,QAAIJ,cAAcE,GAAd,CAAkBC,IAAlB,CAAJ,EAA6B,SAA7B,KACKH,cAAcE,GAAd,CAAkBC,IAAlB,IAA0B,IAA1B;AAEL,QAAI,OAAOC,UAAUD,IAAV,CAAP,KAA2B,UAA/B,EAA2C,SANjB,CAO1B;;AACA,QAAI,QAAQE,IAAR,CAAaF,IAAb,CAAJ,EAAwB;;AAExB,QAAI,CAACG,KAAKC,MAAL,CAAYC,OAAZ,CAAoBL,IAApB,CAAL,EAAgC;AAC9BF,aAAO,YAAUE,IAAV,GAAe,YAAtB;;AACA,WAAK,IAAIM,KAAT,2CAAkBL,UAAUD,IAAV,CAAlB,GAAmC;AACjCF,eAAO,iBAAiBG,UAAUD,IAAV,EAAgBM,KAAhB,IAAyB,KAAzB,GAAiC,EAAlD,IAAwD,IAAxD,GAA+DA,KAA/D,GAAuE,IAAvE,GAA8EL,UAAUD,IAAV,EAAgBM,KAAhB,CAA9E,GAAuG,OAA9G;AACD;;AACDR,aAAO,YAAP;AACD,KAND,MAMO;AACLA,aAAO,cAAYE,IAAZ,GAAiB,WAAjB,IAAgCC,UAAUD,IAAV,IAAkB,KAAlB,GAA0B,EAA1D,IAAgE,IAAhE,GAAuEA,IAAvE,GAA8E,IAA9E,GAAqFC,UAAUD,IAAV,CAArF,GAAuG,OAA9G;AACD;AACJ;;AACD,SAAOF,GAAP;AACD;;AAGD,SAASS,eAAT,GAA0B;AACxB;AACAC,IAAEC,SAAF,CAAY,oGAAZ;AACD;;AAGD,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AACxB,MAAIC,YAAY,EAAhB;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,KAAKA,IAAL,CAAUG,IAAV,CAAeC,MAAnC,EAA2CF,GAA3C,EAA+C;AAC7C,QAAIG,OAAOL,KAAKA,IAAL,CAAUG,IAAV,CAAeD,CAAf,CAAX;AACA,QAAII,QAAQD,KAAKE,IAAL,CAAUD,KAAV,CAAgB,wBAAhB,CAAZ;AACA,QAAI,CAACA,KAAL,EAAY;AAEZ,QAAIE,UAAUC,SAASC,IAAT,IAAiB,sBAAjB,GACE,mBADF,GACwB,KADtC;AAGAT,cAAUU,IAAV,CAAeH,UAAUF,MAAM,CAAN,CAAzB;AACD;;AAED,MAAIM,SAASX,UAAUY,GAAV,CAAc,UAASC,QAAT,EAAkB;AAC3C,WAAOC,OAAOjB,SAAP,CAAiBgB,QAAjB,CAAP;AACD,GAFY,CAAb;AAIAC,SAAOC,IAAP,CAAYC,KAAZ,CAAkBF,MAAlB,EAA0BH,MAA1B,EAAkCM,IAAlC,CAAuCC,YAAvC;AAED;;AAED,SAASA,YAAT,GAAuB;AAErB,MAAIC,YAAYC,SAASC,aAAT,CAAuB,KAAvB,CAAhB;AAAA,MACIC,MAAMF,SAASG,cAAT,CAAwB,kBAAxB,KAA+CH,SAASG,cAAT,CAAwB,aAAxB,CADzD;AAGAJ,YAAUK,SAAV,GAAsB,QAAtB;AACAL,YAAUM,SAAV,GAAsBxC,eAAtB;AAEAqC,MAAII,UAAJ,CAAeC,YAAf,CAA4BR,SAA5B,EAAuCG,GAAvC,EARqB,CAUrB;;AACAF,WAASQ,oBAAT,CAA8B,UAA9B,EAA0C,CAA1C,EAA6CH,SAA7C,GAAyDI,KAAKC,SAAL,CAAezC,SAAf,CAAzD;AAED,C,CAED;;AAAa6B,e,CACb;AAAavB,kB,CACb;AAAaoC,WAAWb,YAAX,EAA0B,GAA1B,E,CACb;AAAaa,WAAWb,YAAX,EAAyB,IAAzB","file":"packages/zurb:foundation-sites/vendor/modernizr/test/js/dumpdata.js.map","sourcesContent":["function dumpModernizr(){\n  var str = '';\n  dumpModernizr.old = dumpModernizr.old || {};\n\n    for (var prop in Modernizr) {\n\n      // skip previously done ones.\n      if (dumpModernizr.old[prop]) continue;\n      else dumpModernizr.old[prop] = true;\n\n      if (typeof Modernizr[prop] === 'function') continue;\n      // skip unit test items\n      if (/^test/.test(prop)) continue;\n\n      if (~TEST.inputs.indexOf(prop)) {\n        str += '<li><b>'+prop+'{}</b><ul>';\n        for (var field in Modernizr[prop]) {\n          str += '<li class=\"' + (Modernizr[prop][field] ? 'yes' : '') + '\">' + field + ': ' + Modernizr[prop][field] + '</li>';\n        }\n        str += '</ul></li>';\n      } else {\n        str += '<li  id=\"'+prop+'\" class=\"' + (Modernizr[prop] ? 'yes' : '') + '\">' + prop + ': ' + Modernizr[prop] + '</li>';\n      }\n  }\n  return str;\n}\n\n\nfunction grabFeatDetects(){\n  // thx github.js\n  $.getScript('https://api.github.com/repos/Modernizr/Modernizr/git/trees/master?recursive=1&callback=processTree');\n}\n\n\nfunction processTree(data){\n  var filenames = [];\n\n  for (var i = 0; i < data.data.tree.length; i++){\n    var file = data.data.tree[i];\n    var match = file.path.match(/^feature-detects\\/(.*)/);\n    if (!match) continue;\n\n    var relpath = location.host == \"modernizr.github.com\" ?\n                    '../modernizr-git/' : '../';\n\n    filenames.push(relpath + match[0]);\n  }\n\n  var jqxhrs = filenames.map(function(filename){\n    return jQuery.getScript(filename);\n  });\n\n  jQuery.when.apply(jQuery, jqxhrs).done(resultsToDOM);\n\n}\n\nfunction resultsToDOM(){\n\n  var modOutput = document.createElement('div'),\n      ref = document.getElementById('qunit-testresult') || document.getElementById('qunit-tests');\n\n  modOutput.className = 'output';\n  modOutput.innerHTML = dumpModernizr();\n\n  ref.parentNode.insertBefore(modOutput, ref);\n\n  // Modernizr object as text\n  document.getElementsByTagName('textarea')[0].innerHTML = JSON.stringify(Modernizr);\n\n}\n\n/* uno    */ resultsToDOM();\n/* dos    */ grabFeatDetects();\n/* tres   */ setTimeout(resultsToDOM,  5e3);\n/* quatro */ setTimeout(resultsToDOM, 15e3);\n"]},"hash":"d168b48753658b505044c474bf17ed094725b1ac"}
