{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"jquery","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"$"}]},{"source":"./foundation.util.core","imported":["GetYoDigits"],"specifiers":[{"kind":"named","imported":"GetYoDigits","local":"GetYoDigits"}]},{"source":"./foundation.util.mediaQuery","imported":["MediaQuery"],"specifiers":[{"kind":"named","imported":"MediaQuery","local":"MediaQuery"}]},{"source":"./foundation.util.triggers","imported":["Triggers"],"specifiers":[{"kind":"named","imported":"Triggers","local":"Triggers"}]},{"source":"./foundation.positionable","imported":["Positionable"],"specifiers":[{"kind":"named","imported":"Positionable","local":"Positionable"}]}],"exports":{"exported":["Tooltip"],"specifiers":[{"kind":"local","local":"Tooltip","exported":"Tooltip"}]}}},"options":{"filename":"packages/zurb:foundation-sites/js/foundation.tooltip.js","filenameRelative":"packages/zurb:foundation-sites/js/foundation.tooltip.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/js/foundation.tooltip.js.map","sourceFileName":"packages/zurb:foundation-sites/js/foundation.tooltip.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.tooltip"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar module1 = module;\nmodule1.export({\n  Tooltip: function () {\n    return Tooltip;\n  }\n});\nvar $ = void 0;\nmodule1.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 0);\nvar GetYoDigits = void 0;\nmodule1.watch(require(\"./foundation.util.core\"), {\n  GetYoDigits: function (v) {\n    GetYoDigits = v;\n  }\n}, 1);\nvar MediaQuery = void 0;\nmodule1.watch(require(\"./foundation.util.mediaQuery\"), {\n  MediaQuery: function (v) {\n    MediaQuery = v;\n  }\n}, 2);\nvar Triggers = void 0;\nmodule1.watch(require(\"./foundation.util.triggers\"), {\n  Triggers: function (v) {\n    Triggers = v;\n  }\n}, 3);\nvar Positionable = void 0;\nmodule1.watch(require(\"./foundation.positionable\"), {\n  Positionable: function (v) {\n    Positionable = v;\n  }\n}, 4);\n\n/**\n * Tooltip module.\n * @module foundation.tooltip\n * @requires foundation.util.box\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.triggers\n */var Tooltip = function (_Positionable) {\n  (0, _inherits3.default)(Tooltip, _Positionable);\n\n  function Tooltip() {\n    (0, _classCallCheck3.default)(this, Tooltip);\n    return (0, _possibleConstructorReturn3.default)(this, _Positionable.apply(this, arguments));\n  }\n\n  /**\n   * Creates a new instance of a Tooltip.\n   * @class\n   * @name Tooltip\n   * @fires Tooltip#init\n   * @param {jQuery} element - jQuery object to attach a tooltip to.\n   * @param {Object} options - object to extend the default configuration.\n   */Tooltip.prototype._setup = function () {\n    function _setup(element, options) {\n      this.$element = element;\n      this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n      this.className = 'Tooltip'; // ie9 back compat\n\n      this.isActive = false;\n      this.isClick = false; // Triggers init is idempotent, just need to make sure it is initialized\n\n      Triggers.init($);\n\n      this._init();\n    }\n\n    return _setup;\n  }(); /**\n        * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n        * @private\n        */\n\n  Tooltip.prototype._init = function () {\n    function _init() {\n      MediaQuery._init();\n\n      var elemId = this.$element.attr('aria-describedby') || GetYoDigits(6, 'tooltip');\n      this.options.tipText = this.options.tipText || this.$element.attr('title');\n      this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n      if (this.options.allowHtml) {\n        this.template.appendTo(document.body).html(this.options.tipText).hide();\n      } else {\n        this.template.appendTo(document.body).text(this.options.tipText).hide();\n      }\n\n      this.$element.attr({\n        'title': '',\n        'aria-describedby': elemId,\n        'data-yeti-box': elemId,\n        'data-toggle': elemId,\n        'data-resize': elemId\n      }).addClass(this.options.triggerClass);\n\n      _Positionable.prototype._init.call(this);\n\n      this._events();\n    }\n\n    return _init;\n  }();\n\n  Tooltip.prototype._getDefaultPosition = function () {\n    function _getDefaultPosition() {\n      // handle legacy classnames\n      var position = this.$element[0].className.match(/\\b(top|left|right|bottom)\\b/g);\n      return position ? position[0] : 'top';\n    }\n\n    return _getDefaultPosition;\n  }();\n\n  Tooltip.prototype._getDefaultAlignment = function () {\n    function _getDefaultAlignment() {\n      return 'center';\n    }\n\n    return _getDefaultAlignment;\n  }();\n\n  Tooltip.prototype._getHOffset = function () {\n    function _getHOffset() {\n      if (this.position === 'left' || this.position === 'right') {\n        return this.options.hOffset + this.options.tooltipWidth;\n      } else {\n        return this.options.hOffset;\n      }\n    }\n\n    return _getHOffset;\n  }();\n\n  Tooltip.prototype._getVOffset = function () {\n    function _getVOffset() {\n      if (this.position === 'top' || this.position === 'bottom') {\n        return this.options.vOffset + this.options.tooltipHeight;\n      } else {\n        return this.options.vOffset;\n      }\n    }\n\n    return _getVOffset;\n  }(); /**\n        * builds the tooltip element, adds attributes, and returns the template.\n        * @private\n        */\n\n  Tooltip.prototype._buildTemplate = function () {\n    function _buildTemplate(id) {\n      var templateClasses = (this.options.tooltipClass + \" \" + this.options.positionClass + \" \" + this.options.templateClasses).trim();\n      var $template = $('<div></div>').addClass(templateClasses).attr({\n        'role': 'tooltip',\n        'aria-hidden': true,\n        'data-is-active': false,\n        'data-is-focus': false,\n        'id': id\n      });\n      return $template;\n    }\n\n    return _buildTemplate;\n  }(); /**\n        * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n        * if the tooltip is larger than the screen width, default to full width - any user selected margin\n        * @private\n        */\n\n  Tooltip.prototype._setPosition = function () {\n    function _setPosition() {\n      _Positionable.prototype._setPosition.call(this, this.$element, this.template);\n    }\n\n    return _setPosition;\n  }(); /**\n        * reveals the tooltip, and fires an event to close any other open tooltips on the page\n        * @fires Tooltip#closeme\n        * @fires Tooltip#show\n        * @function\n        */\n\n  Tooltip.prototype.show = function () {\n    function show() {\n      if (this.options.showOn !== 'all' && !MediaQuery.is(this.options.showOn)) {\n        // console.error('The screen is too small to display this tooltip');\n        return false;\n      }\n\n      var _this = this;\n\n      this.template.css('visibility', 'hidden').show();\n\n      this._setPosition();\n\n      this.template.removeClass('top bottom left right').addClass(this.position);\n      this.template.removeClass('align-top align-bottom align-left align-right align-center').addClass('align-' + this.alignment); /**\n                                                                                                                                    * Fires to close all other open tooltips on the page\n                                                                                                                                    * @event Closeme#tooltip\n                                                                                                                                    */\n      this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n      this.template.attr({\n        'data-is-active': true,\n        'aria-hidden': false\n      });\n      _this.isActive = true; // console.log(this.template);\n\n      this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {//maybe do stuff?\n      }); /**\n           * Fires when the tooltip is shown\n           * @event Tooltip#show\n           */\n      this.$element.trigger('show.zf.tooltip');\n    }\n\n    return show;\n  }(); /**\n        * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n        * @fires Tooltip#hide\n        * @function\n        */\n\n  Tooltip.prototype.hide = function () {\n    function hide() {\n      // console.log('hiding', this.$element.data('yeti-box'));\n      var _this = this;\n\n      this.template.stop().attr({\n        'aria-hidden': true,\n        'data-is-active': false\n      }).fadeOut(this.options.fadeOutDuration, function () {\n        _this.isActive = false;\n        _this.isClick = false;\n      }); /**\n           * fires when the tooltip is hidden\n           * @event Tooltip#hide\n           */\n      this.$element.trigger('hide.zf.tooltip');\n    }\n\n    return hide;\n  }(); /**\n        * adds event listeners for the tooltip and its anchor\n        * TODO combine some of the listeners like focus and mouseenter, etc.\n        * @private\n        */\n\n  Tooltip.prototype._events = function () {\n    function _events() {\n      var _this = this;\n\n      var $template = this.template;\n      var isFocus = false;\n\n      if (!this.options.disableHover) {\n        this.$element.on('mouseenter.zf.tooltip', function (e) {\n          if (!_this.isActive) {\n            _this.timeout = setTimeout(function () {\n              _this.show();\n            }, _this.options.hoverDelay);\n          }\n        }).on('mouseleave.zf.tooltip', function (e) {\n          clearTimeout(_this.timeout);\n\n          if (!isFocus || _this.isClick && !_this.options.clickOpen) {\n            _this.hide();\n          }\n        });\n      }\n\n      if (this.options.clickOpen) {\n        this.$element.on('mousedown.zf.tooltip', function (e) {\n          e.stopImmediatePropagation();\n\n          if (_this.isClick) {//_this.hide();\n            // _this.isClick = false;\n          } else {\n            _this.isClick = true;\n\n            if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n              _this.show();\n            }\n          }\n        });\n      } else {\n        this.$element.on('mousedown.zf.tooltip', function (e) {\n          e.stopImmediatePropagation();\n          _this.isClick = true;\n        });\n      }\n\n      if (!this.options.disableForTouch) {\n        this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\n          _this.isActive ? _this.hide() : _this.show();\n        });\n      }\n\n      this.$element.on({\n        // 'toggle.zf.trigger': this.toggle.bind(this),\n        // 'close.zf.trigger': this.hide.bind(this)\n        'close.zf.trigger': this.hide.bind(this)\n      });\n      this.$element.on('focus.zf.tooltip', function (e) {\n        isFocus = true;\n\n        if (_this.isClick) {\n          // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\n          // a real focus, otherwise on hover and come back we get bad behavior\n          if (!_this.options.clickOpen) {\n            isFocus = false;\n          }\n\n          return false;\n        } else {\n          _this.show();\n        }\n      }).on('focusout.zf.tooltip', function (e) {\n        isFocus = false;\n        _this.isClick = false;\n\n        _this.hide();\n      }).on('resizeme.zf.trigger', function () {\n        if (_this.isActive) {\n          _this._setPosition();\n        }\n      });\n    }\n\n    return _events;\n  }(); /**\n        * adds a toggle method, in addition to the static show() & hide() functions\n        * @function\n        */\n\n  Tooltip.prototype.toggle = function () {\n    function toggle() {\n      if (this.isActive) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n\n    return toggle;\n  }(); /**\n        * Destroys an instance of tooltip, removes template element from the view.\n        * @function\n        */\n\n  Tooltip.prototype._destroy = function () {\n    function _destroy() {\n      this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tooltip').removeClass('has-tip top right left').removeAttr('aria-describedby aria-haspopup data-disable-hover data-resize data-toggle data-tooltip data-yeti-box');\n      this.template.remove();\n    }\n\n    return _destroy;\n  }();\n\n  return Tooltip;\n}(Positionable);\n\nTooltip.defaults = {\n  disableForTouch: false,\n  /**\n   * Time, in ms, before a tooltip should open on hover.\n   * @option\n   * @type {number}\n   * @default 200\n   */hoverDelay: 200,\n  /**\n   * Time, in ms, a tooltip should take to fade into view.\n   * @option\n   * @type {number}\n   * @default 150\n   */fadeInDuration: 150,\n  /**\n   * Time, in ms, a tooltip should take to fade out of view.\n   * @option\n   * @type {number}\n   * @default 150\n   */fadeOutDuration: 150,\n  /**\n   * Disables hover events from opening the tooltip if set to true\n   * @option\n   * @type {boolean}\n   * @default false\n   */disableHover: false,\n  /**\n   * Optional addtional classes to apply to the tooltip template on init.\n   * @option\n   * @type {string}\n   * @default ''\n   */templateClasses: '',\n  /**\n   * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n   * @option\n   * @type {string}\n   * @default 'tooltip'\n   */tooltipClass: 'tooltip',\n  /**\n   * Class applied to the tooltip anchor element.\n   * @option\n   * @type {string}\n   * @default 'has-tip'\n   */triggerClass: 'has-tip',\n  /**\n   * Minimum breakpoint size at which to open the tooltip.\n   * @option\n   * @type {string}\n   * @default 'small'\n   */showOn: 'small',\n  /**\n   * Custom template to be used to generate markup for tooltip.\n   * @option\n   * @type {string}\n   * @default ''\n   */template: '',\n  /**\n   * Text displayed in the tooltip template on open.\n   * @option\n   * @type {string}\n   * @default ''\n   */tipText: '',\n  touchCloseText: 'Tap to close.',\n  /**\n   * Allows the tooltip to remain open if triggered with a click or touch event.\n   * @option\n   * @type {boolean}\n   * @default true\n   */clickOpen: true,\n  /**\n   * DEPRECATED Additional positioning classes, set by the JS\n   * @option\n   * @type {string}\n   * @default ''\n   */positionClass: '',\n  /**\n   * Position of tooltip. Can be left, right, bottom, top, or auto.\n   * @option\n   * @type {string}\n   * @default 'auto'\n   */position: 'auto',\n  /**\n   * Alignment of tooltip relative to anchor. Can be left, right, bottom, top, center, or auto.\n   * @option\n   * @type {string}\n   * @default 'auto'\n   */alignment: 'auto',\n  /**\n   * Allow overlap of container/window. If false, tooltip will first try to\n   * position as defined by data-position and data-alignment, but reposition if\n   * it would cause an overflow.  @option\n   * @type {boolean}\n   * @default false\n   */allowOverlap: false,\n  /**\n   * Allow overlap of only the bottom of the container. This is the most common\n   * behavior for dropdowns, allowing the dropdown to extend the bottom of the\n   * screen but not otherwise influence or break out of the container.\n   * Less common for tooltips.\n   * @option\n   * @type {boolean}\n   * @default false\n   */allowBottomOverlap: false,\n  /**\n   * Distance, in pixels, the template should push away from the anchor on the Y axis.\n   * @option\n   * @type {number}\n   * @default 0\n   */vOffset: 0,\n  /**\n   * Distance, in pixels, the template should push away from the anchor on the X axis\n   * @option\n   * @type {number}\n   * @default 0\n   */hOffset: 0,\n  /**\n   * Distance, in pixels, the template spacing auto-adjust for a vertical tooltip\n   * @option\n   * @type {number}\n   * @default 14\n   */tooltipHeight: 14,\n  /**\n   * Distance, in pixels, the template spacing auto-adjust for a horizontal tooltip\n   * @option\n   * @type {number}\n   * @default 12\n   */tooltipWidth: 12,\n  /**\n  * Allow HTML in tooltip. Warning: If you are loading user-generated content into tooltips,\n  * allowing HTML may open yourself up to XSS attacks.\n  * @option\n  * @type {boolean}\n  * @default false\n  */allowHtml: false\n}; /**\n    * TODO utilize resize event trigger\n    */","map":{"version":3,"sources":["packages/zurb:foundation-sites/js/foundation.tooltip.js"],"names":["module1","module","export","Tooltip","$","watch","require","v","GetYoDigits","MediaQuery","Triggers","Positionable","_setup","element","options","$element","extend","defaults","data","className","isActive","isClick","init","_init","elemId","attr","tipText","template","_buildTemplate","allowHtml","appendTo","document","body","html","hide","text","addClass","triggerClass","_events","_getDefaultPosition","position","match","_getDefaultAlignment","_getHOffset","hOffset","tooltipWidth","_getVOffset","vOffset","tooltipHeight","id","templateClasses","tooltipClass","positionClass","trim","$template","_setPosition","show","showOn","is","_this","css","removeClass","alignment","trigger","stop","fadeIn","fadeInDuration","fadeOut","fadeOutDuration","isFocus","disableHover","on","e","timeout","setTimeout","hoverDelay","clearTimeout","clickOpen","stopImmediatePropagation","disableForTouch","bind","toggle","_destroy","off","removeAttr","remove","touchCloseText","allowOverlap","allowBottomOverlap"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAAA,IAAMA,UAAQC,MAAd;AAAqBD,QAAQE,MAAR,CAAe;AAACC,WAAQ;AAAA,WAAIA,OAAJ;AAAA;AAAT,CAAf;AAAsC,IAAIC,UAAJ;AAAMJ,QAAQK,KAAR,CAAcC,QAAQ,QAAR,CAAd,EAAgC;AAAA,uBAASC,CAAT,EAAW;AAACH,QAAEG,CAAF;AAAI;AAAhB,CAAhC,EAAkD,CAAlD;AAAqD,IAAIC,oBAAJ;AAAgBR,QAAQK,KAAR,CAAcC,QAAQ,wBAAR,CAAd,EAAgD;AAACE,aAAD,YAAaD,CAAb,EAAe;AAACC,kBAAYD,CAAZ;AAAc;AAA9B,CAAhD,EAAgF,CAAhF;AAAmF,IAAIE,mBAAJ;AAAeT,QAAQK,KAAR,CAAcC,QAAQ,8BAAR,CAAd,EAAsD;AAACG,YAAD,YAAYF,CAAZ,EAAc;AAACE,iBAAWF,CAAX;AAAa;AAA5B,CAAtD,EAAoF,CAApF;AAAuF,IAAIG,iBAAJ;AAAaV,QAAQK,KAAR,CAAcC,QAAQ,4BAAR,CAAd,EAAoD;AAACI,UAAD,YAAUH,CAAV,EAAY;AAACG,eAASH,CAAT;AAAW;AAAxB,CAApD,EAA8E,CAA9E;AAAiF,IAAII,qBAAJ;AAAiBX,QAAQK,KAAR,CAAcC,QAAQ,2BAAR,CAAd,EAAmD;AAACK,cAAD,YAAcJ,CAAd,EAAgB;AAACI,mBAAaJ,CAAb;AAAe;AAAhC,CAAnD,EAAqF,CAArF;;AAS9a;;;;;;OAQMJ,O;;;;;;;;AACJ;;;;;;;uBAQAS,M;oBAAOC,O,EAASC,O,EAAS;AACvB,WAAKC,QAAL,GAAgBF,OAAhB;AACA,WAAKC,OAAL,GAAeV,EAAEY,MAAF,CAAS,EAAT,EAAab,QAAQc,QAArB,EAA+B,KAAKF,QAAL,CAAcG,IAAd,EAA/B,EAAqDJ,OAArD,CAAf;AACA,WAAKK,SAAL,GAAiB,SAAjB,CAHuB,CAGK;;AAE5B,WAAKC,QAAL,GAAgB,KAAhB;AACA,WAAKC,OAAL,GAAe,KAAf,CANuB,CAQvB;;AACAX,eAASY,IAAT,CAAclB,CAAd;;AAEA,WAAKmB,KAAL;AACD;;;OAED;;;;;oBAIAA,K;qBAAQ;AACNd,iBAAWc,KAAX;;AACA,UAAIC,SAAS,KAAKT,QAAL,CAAcU,IAAd,CAAmB,kBAAnB,KAA0CjB,YAAY,CAAZ,EAAe,SAAf,CAAvD;AAEA,WAAKM,OAAL,CAAaY,OAAb,GAAuB,KAAKZ,OAAL,CAAaY,OAAb,IAAwB,KAAKX,QAAL,CAAcU,IAAd,CAAmB,OAAnB,CAA/C;AACA,WAAKE,QAAL,GAAgB,KAAKb,OAAL,CAAaa,QAAb,GAAwBvB,EAAE,KAAKU,OAAL,CAAaa,QAAf,CAAxB,GAAmD,KAAKC,cAAL,CAAoBJ,MAApB,CAAnE;;AAEA,UAAI,KAAKV,OAAL,CAAae,SAAjB,EAA4B;AAC1B,aAAKF,QAAL,CAAcG,QAAd,CAAuBC,SAASC,IAAhC,EACGC,IADH,CACQ,KAAKnB,OAAL,CAAaY,OADrB,EAEGQ,IAFH;AAGD,OAJD,MAIO;AACL,aAAKP,QAAL,CAAcG,QAAd,CAAuBC,SAASC,IAAhC,EACGG,IADH,CACQ,KAAKrB,OAAL,CAAaY,OADrB,EAEGQ,IAFH;AAGD;;AAED,WAAKnB,QAAL,CAAcU,IAAd,CAAmB;AACjB,iBAAS,EADQ;AAEjB,4BAAoBD,MAFH;AAGjB,yBAAiBA,MAHA;AAIjB,uBAAeA,MAJE;AAKjB,uBAAeA;AALE,OAAnB,EAMGY,QANH,CAMY,KAAKtB,OAAL,CAAauB,YANzB;;AAQA,8BAAMd,KAAN;;AACA,WAAKe,OAAL;AACD;;;;;oBAEDC,mB;mCAAsB;AACpB;AACA,UAAIC,WAAW,KAAKzB,QAAL,CAAc,CAAd,EAAiBI,SAAjB,CAA2BsB,KAA3B,CAAiC,8BAAjC,CAAf;AACA,aAAOD,WAAWA,SAAS,CAAT,CAAX,GAAyB,KAAhC;AACD;;;;;oBAEDE,oB;oCAAuB;AACrB,aAAO,QAAP;AACD;;;;;oBAEDC,W;2BAAc;AACZ,UAAG,KAAKH,QAAL,KAAkB,MAAlB,IAA4B,KAAKA,QAAL,KAAkB,OAAjD,EAA0D;AACxD,eAAO,KAAK1B,OAAL,CAAa8B,OAAb,GAAuB,KAAK9B,OAAL,CAAa+B,YAA3C;AACD,OAFD,MAEO;AACL,eAAO,KAAK/B,OAAL,CAAa8B,OAApB;AACD;AACF;;;;;oBAEDE,W;2BAAc;AACZ,UAAG,KAAKN,QAAL,KAAkB,KAAlB,IAA2B,KAAKA,QAAL,KAAkB,QAAhD,EAA0D;AACxD,eAAO,KAAK1B,OAAL,CAAaiC,OAAb,GAAuB,KAAKjC,OAAL,CAAakC,aAA3C;AACD,OAFD,MAEO;AACL,eAAO,KAAKlC,OAAL,CAAaiC,OAApB;AACD;AACF;;;OAED;;;;;oBAIAnB,c;4BAAeqB,E,EAAI;AACjB,UAAIC,kBAAkB,CAAI,KAAKpC,OAAL,CAAaqC,YAAjB,SAAiC,KAAKrC,OAAL,CAAasC,aAA9C,SAA+D,KAAKtC,OAAL,CAAaoC,eAA5E,EAA+FG,IAA/F,EAAtB;AACA,UAAIC,YAAalD,EAAE,aAAF,EAAiBgC,QAAjB,CAA0Bc,eAA1B,EAA2CzB,IAA3C,CAAgD;AAC/D,gBAAQ,SADuD;AAE/D,uBAAe,IAFgD;AAG/D,0BAAkB,KAH6C;AAI/D,yBAAiB,KAJ8C;AAK/D,cAAMwB;AALyD,OAAhD,CAAjB;AAOA,aAAOK,SAAP;AACD;;;OAED;;;;;;oBAKAC,Y;4BAAe;AACb,8BAAMA,YAAN,YAAmB,KAAKxC,QAAxB,EAAkC,KAAKY,QAAvC;AACD;;;OAED;;;;;;;oBAMA6B,I;oBAAO;AACL,UAAI,KAAK1C,OAAL,CAAa2C,MAAb,KAAwB,KAAxB,IAAiC,CAAChD,WAAWiD,EAAX,CAAc,KAAK5C,OAAL,CAAa2C,MAA3B,CAAtC,EAA0E;AACxE;AACA,eAAO,KAAP;AACD;;AAED,UAAIE,QAAQ,IAAZ;;AACA,WAAKhC,QAAL,CAAciC,GAAd,CAAkB,YAAlB,EAAgC,QAAhC,EAA0CJ,IAA1C;;AACA,WAAKD,YAAL;;AACA,WAAK5B,QAAL,CAAckC,WAAd,CAA0B,uBAA1B,EAAmDzB,QAAnD,CAA4D,KAAKI,QAAjE;AACA,WAAKb,QAAL,CAAckC,WAAd,CAA0B,4DAA1B,EAAwFzB,QAAxF,CAAiG,WAAW,KAAK0B,SAAjH,EAVK,CAYL;;;;AAIA,WAAK/C,QAAL,CAAcgD,OAAd,CAAsB,oBAAtB,EAA4C,KAAKpC,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAA5C;AAGA,WAAKE,QAAL,CAAcF,IAAd,CAAmB;AACjB,0BAAkB,IADD;AAEjB,uBAAe;AAFE,OAAnB;AAIAkC,YAAMvC,QAAN,GAAiB,IAAjB,CAvBK,CAwBL;;AACA,WAAKO,QAAL,CAAcqC,IAAd,GAAqB9B,IAArB,GAA4B0B,GAA5B,CAAgC,YAAhC,EAA8C,EAA9C,EAAkDK,MAAlD,CAAyD,KAAKnD,OAAL,CAAaoD,cAAtE,EAAsF,YAAW,CAC/F;AACD,OAFD,EAzBK,CA4BL;;;;AAIA,WAAKnD,QAAL,CAAcgD,OAAd,CAAsB,iBAAtB;AACD;;;OAED;;;;;;oBAKA7B,I;oBAAO;AACL;AACA,UAAIyB,QAAQ,IAAZ;;AACA,WAAKhC,QAAL,CAAcqC,IAAd,GAAqBvC,IAArB,CAA0B;AACxB,uBAAe,IADS;AAExB,0BAAkB;AAFM,OAA1B,EAGG0C,OAHH,CAGW,KAAKrD,OAAL,CAAasD,eAHxB,EAGyC,YAAW;AAClDT,cAAMvC,QAAN,GAAiB,KAAjB;AACAuC,cAAMtC,OAAN,GAAgB,KAAhB;AACD,OAND,EAHK,CAUL;;;;AAIA,WAAKN,QAAL,CAAcgD,OAAd,CAAsB,iBAAtB;AACD;;;OAED;;;;;;oBAKAzB,O;uBAAU;AACR,UAAIqB,QAAQ,IAAZ;;AACA,UAAIL,YAAY,KAAK3B,QAArB;AACA,UAAI0C,UAAU,KAAd;;AAEA,UAAI,CAAC,KAAKvD,OAAL,CAAawD,YAAlB,EAAgC;AAE9B,aAAKvD,QAAL,CACCwD,EADD,CACI,uBADJ,EAC6B,UAASC,CAAT,EAAY;AACvC,cAAI,CAACb,MAAMvC,QAAX,EAAqB;AACnBuC,kBAAMc,OAAN,GAAgBC,WAAW,YAAW;AACpCf,oBAAMH,IAAN;AACD,aAFe,EAEbG,MAAM7C,OAAN,CAAc6D,UAFD,CAAhB;AAGD;AACF,SAPD,EAQCJ,EARD,CAQI,uBARJ,EAQ6B,UAASC,CAAT,EAAY;AACvCI,uBAAajB,MAAMc,OAAnB;;AACA,cAAI,CAACJ,OAAD,IAAaV,MAAMtC,OAAN,IAAiB,CAACsC,MAAM7C,OAAN,CAAc+D,SAAjD,EAA6D;AAC3DlB,kBAAMzB,IAAN;AACD;AACF,SAbD;AAcD;;AAED,UAAI,KAAKpB,OAAL,CAAa+D,SAAjB,EAA4B;AAC1B,aAAK9D,QAAL,CAAcwD,EAAd,CAAiB,sBAAjB,EAAyC,UAASC,CAAT,EAAY;AACnDA,YAAEM,wBAAF;;AACA,cAAInB,MAAMtC,OAAV,EAAmB,CACjB;AACA;AACD,WAHD,MAGO;AACLsC,kBAAMtC,OAAN,GAAgB,IAAhB;;AACA,gBAAI,CAACsC,MAAM7C,OAAN,CAAcwD,YAAd,IAA8B,CAACX,MAAM5C,QAAN,CAAeU,IAAf,CAAoB,UAApB,CAAhC,KAAoE,CAACkC,MAAMvC,QAA/E,EAAyF;AACvFuC,oBAAMH,IAAN;AACD;AACF;AACF,SAXD;AAYD,OAbD,MAaO;AACL,aAAKzC,QAAL,CAAcwD,EAAd,CAAiB,sBAAjB,EAAyC,UAASC,CAAT,EAAY;AACnDA,YAAEM,wBAAF;AACAnB,gBAAMtC,OAAN,GAAgB,IAAhB;AACD,SAHD;AAID;;AAED,UAAI,CAAC,KAAKP,OAAL,CAAaiE,eAAlB,EAAmC;AACjC,aAAKhE,QAAL,CACCwD,EADD,CACI,oCADJ,EAC0C,UAASC,CAAT,EAAY;AACpDb,gBAAMvC,QAAN,GAAiBuC,MAAMzB,IAAN,EAAjB,GAAgCyB,MAAMH,IAAN,EAAhC;AACD,SAHD;AAID;;AAED,WAAKzC,QAAL,CAAcwD,EAAd,CAAiB;AACf;AACA;AACA,4BAAoB,KAAKrC,IAAL,CAAU8C,IAAV,CAAe,IAAf;AAHL,OAAjB;AAMA,WAAKjE,QAAL,CACGwD,EADH,CACM,kBADN,EAC0B,UAASC,CAAT,EAAY;AAClCH,kBAAU,IAAV;;AACA,YAAIV,MAAMtC,OAAV,EAAmB;AACjB;AACA;AACA,cAAG,CAACsC,MAAM7C,OAAN,CAAc+D,SAAlB,EAA6B;AAAER,sBAAU,KAAV;AAAkB;;AACjD,iBAAO,KAAP;AACD,SALD,MAKO;AACLV,gBAAMH,IAAN;AACD;AACF,OAXH,EAaGe,EAbH,CAaM,qBAbN,EAa6B,UAASC,CAAT,EAAY;AACrCH,kBAAU,KAAV;AACAV,cAAMtC,OAAN,GAAgB,KAAhB;;AACAsC,cAAMzB,IAAN;AACD,OAjBH,EAmBGqC,EAnBH,CAmBM,qBAnBN,EAmB6B,YAAW;AACpC,YAAIZ,MAAMvC,QAAV,EAAoB;AAClBuC,gBAAMJ,YAAN;AACD;AACF,OAvBH;AAwBD;;;OAED;;;;;oBAIA0B,M;sBAAS;AACP,UAAI,KAAK7D,QAAT,EAAmB;AACjB,aAAKc,IAAL;AACD,OAFD,MAEO;AACL,aAAKsB,IAAL;AACD;AACF;;;OAED;;;;;oBAIA0B,Q;wBAAW;AACT,WAAKnE,QAAL,CAAcU,IAAd,CAAmB,OAAnB,EAA4B,KAAKE,QAAL,CAAcQ,IAAd,EAA5B,EACcgD,GADd,CACkB,yBADlB,EAEctB,WAFd,CAE0B,wBAF1B,EAGcuB,UAHd,CAGyB,sGAHzB;AAKA,WAAKzD,QAAL,CAAc0D,MAAd;AACD;;;;;;EAxRmB1E,Y;;AA2RtBR,QAAQc,QAAR,GAAmB;AACjB8D,mBAAiB,KADA;AAEjB;;;;;KAMAJ,YAAY,GARK;AASjB;;;;;KAMAT,gBAAgB,GAfC;AAgBjB;;;;;KAMAE,iBAAiB,GAtBA;AAuBjB;;;;;KAMAE,cAAc,KA7BG;AA8BjB;;;;;KAMApB,iBAAiB,EApCA;AAqCjB;;;;;KAMAC,cAAc,SA3CG;AA4CjB;;;;;KAMAd,cAAc,SAlDG;AAmDjB;;;;;KAMAoB,QAAQ,OAzDS;AA0DjB;;;;;KAMA9B,UAAU,EAhEO;AAiEjB;;;;;KAMAD,SAAS,EAvEQ;AAwEjB4D,kBAAgB,eAxEC;AAyEjB;;;;;KAMAT,WAAW,IA/EM;AAgFjB;;;;;KAMAzB,eAAe,EAtFE;AAuFjB;;;;;KAMAZ,UAAU,MA7FO;AA8FjB;;;;;KAMAsB,WAAW,MApGM;AAqGjB;;;;;;KAOAyB,cAAc,KA5GG;AA6GjB;;;;;;;;KASAC,oBAAoB,KAtHH;AAuHjB;;;;;KAMAzC,SAAS,CA7HQ;AA8HjB;;;;;KAMAH,SAAS,CApIQ;AAqIjB;;;;;KAMAI,eAAe,EA3IE;AA4IjB;;;;;KAMAH,cAAc,EAlJG;AAmJf;;;;;;IAOFhB,WAAW;AA1JM,CAAnB,C,CA6JA","file":"packages/zurb:foundation-sites/js/foundation.tooltip.js.map","sourcesContent":["'use strict';\n\nimport $ from 'jquery';\n\nimport { GetYoDigits } from './foundation.util.core';\nimport { MediaQuery } from './foundation.util.mediaQuery';\nimport { Triggers } from './foundation.util.triggers';\nimport { Positionable } from './foundation.positionable';\n\n/**\n * Tooltip module.\n * @module foundation.tooltip\n * @requires foundation.util.box\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.triggers\n */\n\nclass Tooltip extends Positionable {\n  /**\n   * Creates a new instance of a Tooltip.\n   * @class\n   * @name Tooltip\n   * @fires Tooltip#init\n   * @param {jQuery} element - jQuery object to attach a tooltip to.\n   * @param {Object} options - object to extend the default configuration.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n    this.className = 'Tooltip'; // ie9 back compat\n\n    this.isActive = false;\n    this.isClick = false;\n\n    // Triggers init is idempotent, just need to make sure it is initialized\n    Triggers.init($);\n\n    this._init();\n  }\n\n  /**\n   * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n   * @private\n   */\n  _init() {\n    MediaQuery._init();\n    var elemId = this.$element.attr('aria-describedby') || GetYoDigits(6, 'tooltip');\n\n    this.options.tipText = this.options.tipText || this.$element.attr('title');\n    this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n    if (this.options.allowHtml) {\n      this.template.appendTo(document.body)\n        .html(this.options.tipText)\n        .hide();\n    } else {\n      this.template.appendTo(document.body)\n        .text(this.options.tipText)\n        .hide();\n    }\n\n    this.$element.attr({\n      'title': '',\n      'aria-describedby': elemId,\n      'data-yeti-box': elemId,\n      'data-toggle': elemId,\n      'data-resize': elemId\n    }).addClass(this.options.triggerClass);\n\n    super._init();\n    this._events();\n  }\n\n  _getDefaultPosition() {\n    // handle legacy classnames\n    var position = this.$element[0].className.match(/\\b(top|left|right|bottom)\\b/g);\n    return position ? position[0] : 'top';\n  }\n\n  _getDefaultAlignment() {\n    return 'center';\n  }\n\n  _getHOffset() {\n    if(this.position === 'left' || this.position === 'right') {\n      return this.options.hOffset + this.options.tooltipWidth;\n    } else {\n      return this.options.hOffset\n    }\n  }\n\n  _getVOffset() {\n    if(this.position === 'top' || this.position === 'bottom') {\n      return this.options.vOffset + this.options.tooltipHeight;\n    } else {\n      return this.options.vOffset\n    }\n  }\n\n  /**\n   * builds the tooltip element, adds attributes, and returns the template.\n   * @private\n   */\n  _buildTemplate(id) {\n    var templateClasses = (`${this.options.tooltipClass} ${this.options.positionClass} ${this.options.templateClasses}`).trim();\n    var $template =  $('<div></div>').addClass(templateClasses).attr({\n      'role': 'tooltip',\n      'aria-hidden': true,\n      'data-is-active': false,\n      'data-is-focus': false,\n      'id': id\n    });\n    return $template;\n  }\n\n  /**\n   * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n   * if the tooltip is larger than the screen width, default to full width - any user selected margin\n   * @private\n   */\n  _setPosition() {\n    super._setPosition(this.$element, this.template);\n  }\n\n  /**\n   * reveals the tooltip, and fires an event to close any other open tooltips on the page\n   * @fires Tooltip#closeme\n   * @fires Tooltip#show\n   * @function\n   */\n  show() {\n    if (this.options.showOn !== 'all' && !MediaQuery.is(this.options.showOn)) {\n      // console.error('The screen is too small to display this tooltip');\n      return false;\n    }\n\n    var _this = this;\n    this.template.css('visibility', 'hidden').show();\n    this._setPosition();\n    this.template.removeClass('top bottom left right').addClass(this.position)\n    this.template.removeClass('align-top align-bottom align-left align-right align-center').addClass('align-' + this.alignment);\n\n    /**\n     * Fires to close all other open tooltips on the page\n     * @event Closeme#tooltip\n     */\n    this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n\n    this.template.attr({\n      'data-is-active': true,\n      'aria-hidden': false\n    });\n    _this.isActive = true;\n    // console.log(this.template);\n    this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function() {\n      //maybe do stuff?\n    });\n    /**\n     * Fires when the tooltip is shown\n     * @event Tooltip#show\n     */\n    this.$element.trigger('show.zf.tooltip');\n  }\n\n  /**\n   * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n   * @fires Tooltip#hide\n   * @function\n   */\n  hide() {\n    // console.log('hiding', this.$element.data('yeti-box'));\n    var _this = this;\n    this.template.stop().attr({\n      'aria-hidden': true,\n      'data-is-active': false\n    }).fadeOut(this.options.fadeOutDuration, function() {\n      _this.isActive = false;\n      _this.isClick = false;\n    });\n    /**\n     * fires when the tooltip is hidden\n     * @event Tooltip#hide\n     */\n    this.$element.trigger('hide.zf.tooltip');\n  }\n\n  /**\n   * adds event listeners for the tooltip and its anchor\n   * TODO combine some of the listeners like focus and mouseenter, etc.\n   * @private\n   */\n  _events() {\n    var _this = this;\n    var $template = this.template;\n    var isFocus = false;\n\n    if (!this.options.disableHover) {\n\n      this.$element\n      .on('mouseenter.zf.tooltip', function(e) {\n        if (!_this.isActive) {\n          _this.timeout = setTimeout(function() {\n            _this.show();\n          }, _this.options.hoverDelay);\n        }\n      })\n      .on('mouseleave.zf.tooltip', function(e) {\n        clearTimeout(_this.timeout);\n        if (!isFocus || (_this.isClick && !_this.options.clickOpen)) {\n          _this.hide();\n        }\n      });\n    }\n\n    if (this.options.clickOpen) {\n      this.$element.on('mousedown.zf.tooltip', function(e) {\n        e.stopImmediatePropagation();\n        if (_this.isClick) {\n          //_this.hide();\n          // _this.isClick = false;\n        } else {\n          _this.isClick = true;\n          if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n            _this.show();\n          }\n        }\n      });\n    } else {\n      this.$element.on('mousedown.zf.tooltip', function(e) {\n        e.stopImmediatePropagation();\n        _this.isClick = true;\n      });\n    }\n\n    if (!this.options.disableForTouch) {\n      this.$element\n      .on('tap.zf.tooltip touchend.zf.tooltip', function(e) {\n        _this.isActive ? _this.hide() : _this.show();\n      });\n    }\n\n    this.$element.on({\n      // 'toggle.zf.trigger': this.toggle.bind(this),\n      // 'close.zf.trigger': this.hide.bind(this)\n      'close.zf.trigger': this.hide.bind(this)\n    });\n\n    this.$element\n      .on('focus.zf.tooltip', function(e) {\n        isFocus = true;\n        if (_this.isClick) {\n          // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\n          // a real focus, otherwise on hover and come back we get bad behavior\n          if(!_this.options.clickOpen) { isFocus = false; }\n          return false;\n        } else {\n          _this.show();\n        }\n      })\n\n      .on('focusout.zf.tooltip', function(e) {\n        isFocus = false;\n        _this.isClick = false;\n        _this.hide();\n      })\n\n      .on('resizeme.zf.trigger', function() {\n        if (_this.isActive) {\n          _this._setPosition();\n        }\n      });\n  }\n\n  /**\n   * adds a toggle method, in addition to the static show() & hide() functions\n   * @function\n   */\n  toggle() {\n    if (this.isActive) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Destroys an instance of tooltip, removes template element from the view.\n   * @function\n   */\n  _destroy() {\n    this.$element.attr('title', this.template.text())\n                 .off('.zf.trigger .zf.tooltip')\n                 .removeClass('has-tip top right left')\n                 .removeAttr('aria-describedby aria-haspopup data-disable-hover data-resize data-toggle data-tooltip data-yeti-box');\n\n    this.template.remove();\n  }\n}\n\nTooltip.defaults = {\n  disableForTouch: false,\n  /**\n   * Time, in ms, before a tooltip should open on hover.\n   * @option\n   * @type {number}\n   * @default 200\n   */\n  hoverDelay: 200,\n  /**\n   * Time, in ms, a tooltip should take to fade into view.\n   * @option\n   * @type {number}\n   * @default 150\n   */\n  fadeInDuration: 150,\n  /**\n   * Time, in ms, a tooltip should take to fade out of view.\n   * @option\n   * @type {number}\n   * @default 150\n   */\n  fadeOutDuration: 150,\n  /**\n   * Disables hover events from opening the tooltip if set to true\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  disableHover: false,\n  /**\n   * Optional addtional classes to apply to the tooltip template on init.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  templateClasses: '',\n  /**\n   * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n   * @option\n   * @type {string}\n   * @default 'tooltip'\n   */\n  tooltipClass: 'tooltip',\n  /**\n   * Class applied to the tooltip anchor element.\n   * @option\n   * @type {string}\n   * @default 'has-tip'\n   */\n  triggerClass: 'has-tip',\n  /**\n   * Minimum breakpoint size at which to open the tooltip.\n   * @option\n   * @type {string}\n   * @default 'small'\n   */\n  showOn: 'small',\n  /**\n   * Custom template to be used to generate markup for tooltip.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  template: '',\n  /**\n   * Text displayed in the tooltip template on open.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  tipText: '',\n  touchCloseText: 'Tap to close.',\n  /**\n   * Allows the tooltip to remain open if triggered with a click or touch event.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  clickOpen: true,\n  /**\n   * DEPRECATED Additional positioning classes, set by the JS\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  positionClass: '',\n  /**\n   * Position of tooltip. Can be left, right, bottom, top, or auto.\n   * @option\n   * @type {string}\n   * @default 'auto'\n   */\n  position: 'auto',\n  /**\n   * Alignment of tooltip relative to anchor. Can be left, right, bottom, top, center, or auto.\n   * @option\n   * @type {string}\n   * @default 'auto'\n   */\n  alignment: 'auto',\n  /**\n   * Allow overlap of container/window. If false, tooltip will first try to\n   * position as defined by data-position and data-alignment, but reposition if\n   * it would cause an overflow.  @option\n   * @type {boolean}\n   * @default false\n   */\n  allowOverlap: false,\n  /**\n   * Allow overlap of only the bottom of the container. This is the most common\n   * behavior for dropdowns, allowing the dropdown to extend the bottom of the\n   * screen but not otherwise influence or break out of the container.\n   * Less common for tooltips.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  allowBottomOverlap: false,\n  /**\n   * Distance, in pixels, the template should push away from the anchor on the Y axis.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  vOffset: 0,\n  /**\n   * Distance, in pixels, the template should push away from the anchor on the X axis\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  hOffset: 0,\n  /**\n   * Distance, in pixels, the template spacing auto-adjust for a vertical tooltip\n   * @option\n   * @type {number}\n   * @default 14\n   */\n  tooltipHeight: 14,\n  /**\n   * Distance, in pixels, the template spacing auto-adjust for a horizontal tooltip\n   * @option\n   * @type {number}\n   * @default 12\n   */\n  tooltipWidth: 12,\n    /**\n   * Allow HTML in tooltip. Warning: If you are loading user-generated content into tooltips,\n   * allowing HTML may open yourself up to XSS attacks.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  allowHtml: false\n};\n\n/**\n * TODO utilize resize event trigger\n */\n\nexport {Tooltip};\n"]},"hash":"8419faa457c53dcd1038f4b7a577dd6ddca0c225"}
