{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/test/javascript/util/keyboard.js","filenameRelative":"packages/zurb:foundation-sites/test/javascript/util/keyboard.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/test/javascript/util/keyboard.js.map","sourceFileName":"packages/zurb:foundation-sites/test/javascript/util/keyboard.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"keyboard"},"ignored":false,"code":"describe('Keyboard util', function () {\n  /**\n   * Creates a dummy event to parse.\n   * Uses jQuery Event class constructor.\n   * @param  {number} keyCode Key code of the key that is simulated.\n   * @param  {object} opts    Options that say if modifiers are pressed.\n   * @return {Event}          Event to use.\n   */var createEvent = window.mockKeyboardEvent;\n  var keyCodes = {\n    'A': 65,\n    'TAB': 9,\n    'ENTER': 13,\n    'ESCAPE': 27,\n    'SPACE': 32,\n    'ARROW_LEFT': 37,\n    'ARROW_UP': 38,\n    'ARROW_RIGHT': 39,\n    'ARROW_DOWN': 40\n  };\n  it('exists on the Foundation API', function () {\n    window.Foundation.Keyboard.should.be.an('object');\n  });\n  describe('parseKey()', function () {\n    it('returns the character pressed for a normal key', function () {\n      var event = createEvent(keyCodes['A']),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n      parsedKey.should.be.equal('A');\n    });\n    it('returns the character pressed for special keys', function () {\n      for (var key in meteorBabelHelpers.sanitizeForInObject(keyCodes)) {\n        var keyCode = keyCodes[key];\n        var event = createEvent(keyCode),\n            parsedKey = Foundation.Keyboard.parseKey(event);\n        parsedKey.should.be.equal(key);\n      }\n    });\n    it('recognizes if CTRL was pressed', function () {\n      var event = createEvent(keyCodes['A'], {\n        ctrl: true\n      }),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n      parsedKey.should.be.equal('CTRL_A');\n    });\n    it('recognizes if ALT was pressed', function () {\n      var event = createEvent(keyCodes['A'], {\n        alt: true\n      }),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n      parsedKey.should.be.equal('ALT_A');\n    });\n    it('recognizes if SHIFT was pressed', function () {\n      var event = createEvent(keyCodes['A'], {\n        shift: true\n      }),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n      parsedKey.should.be.equal('SHIFT_A');\n    });\n    it('recognizes if multiple modifiers were pressed', function () {\n      var event = createEvent(keyCodes['A'], {\n        shift: true,\n        alt: true,\n        ctrl: true\n      }),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n      parsedKey.should.be.equal('ALT_CTRL_SHIFT_A');\n    });\n  });\n  describe('handleKey()', function () {\n    it('executes callback for given key event', function () {\n      var spy = sinon.spy(); // Register component\n\n      Foundation.Keyboard.register('MyComponent', {\n        'ESCAPE': 'close'\n      });\n      var event = createEvent(keyCodes['ESCAPE']);\n      Foundation.Keyboard.handleKey(event, 'MyComponent', {\n        close: function () {\n          spy();\n        }\n      });\n      spy.called.should.be.true;\n    });\n    it('executes handled callback for given key event', function () {\n      var spy = sinon.spy(); // Register component\n\n      Foundation.Keyboard.register('MyComponent', {\n        'ESCAPE': 'close'\n      });\n      var event = createEvent(keyCodes['ESCAPE']);\n      Foundation.Keyboard.handleKey(event, 'MyComponent', {\n        close: function () {// stuff\n        },\n        handled: function () {\n          spy();\n        }\n      });\n      spy.called.should.be.true;\n    });\n    it('executes unhandled callback for given key event', function () {\n      var spy = sinon.spy(); // Register component\n\n      Foundation.Keyboard.register('MyComponent', {});\n      var event = createEvent(keyCodes['ESCAPE']);\n      Foundation.Keyboard.handleKey(event, 'MyComponent', {\n        unhandled: function () {\n          spy();\n        }\n      });\n      spy.called.should.be.true;\n    });\n  });\n  describe('findFocusable()', function () {\n    it('finds focusable elements inside a container', function () {\n      var $html = $(\"<div>\\n            <a href=\\\"#\\\">Link</a>\\n            <button>Button</button>\\n          </div>\").appendTo('body');\n      var $focusable = Foundation.Keyboard.findFocusable($html);\n      $focusable.length.should.be.equal(2);\n      $html.remove();\n    });\n    it('does not find hidden focusable elements', function () {\n      var $html = $(\"<div>\\n            <a style=\\\"display: none;\\\" href=\\\"#\\\">Link</a>\\n            <button style=\\\"display: none;\\\">Button</button>\\n          </div>\").appendTo('body');\n      var $focusable = Foundation.Keyboard.findFocusable($html);\n      $focusable.length.should.be.equal(0);\n      $html.remove();\n    });\n    it('does not find disabled focusable elements', function () {\n      var $html = $(\"<div>\\n            <button disabled>Button</button>\\n          </div>\").appendTo('body');\n      var $focusable = Foundation.Keyboard.findFocusable($html);\n      $focusable.length.should.be.equal(0);\n      $html.remove();\n    });\n    it('does not find focusable elements with negative tabindex', function () {\n      var $html = $(\"<div>\\n            <button tabindex=\\\"-1\\\">Button</button>\\n          </div>\").appendTo('body');\n      var $focusable = Foundation.Keyboard.findFocusable($html);\n      $focusable.length.should.be.equal(0);\n      $html.remove();\n    });\n  });\n  describe('trapFocus()', function () {\n    it('moves the focus to the first focusable element', function () {\n      var $html = $(\"<div>\\n            <a href=\\\"#\\\">Link1</a>\\n            <a href=\\\"#\\\">Link2</a>\\n            <a href=\\\"#\\\">Link3</a>\\n          </div>\").appendTo('body');\n      Foundation.Keyboard.trapFocus($html);\n      $html.find('a').last().focus();\n      var event = createEvent(keyCodes['TAB']);\n      $(document.activeElement).trigger(event);\n      document.activeElement.should.be.equal($html.find('a').eq(0)[0]);\n      $html.remove();\n    });\n    it('moves the focus to the last focusable element', function () {\n      var $html = $(\"<div>\\n            <a href=\\\"#\\\">Link1</a>\\n            <a href=\\\"#\\\">Link2</a>\\n            <a href=\\\"#\\\">Link3</a>\\n          </div>\").appendTo('body');\n      Foundation.Keyboard.trapFocus($html);\n      $html.find('a').first().focus();\n      var event = createEvent(keyCodes['TAB'], {\n        shift: true\n      });\n      $(document.activeElement).trigger(event);\n      document.activeElement.should.be.equal($html.find('a').eq(2)[0]);\n      $html.remove();\n    });\n  });\n  describe('releaseFocus()', function () {\n    it('stops trapping the focus at the end', function () {\n      var $html = $(\"<div>\\n            <a href=\\\"#\\\">Link1</a>\\n            <a href=\\\"#\\\">Link2</a>\\n            <a href=\\\"#\\\">Link3</a>\\n          </div>\").appendTo('body');\n      Foundation.Keyboard.trapFocus($html);\n      $html.find('a').last().focus();\n      Foundation.Keyboard.releaseFocus($html);\n      var event = createEvent(keyCodes['TAB']);\n      $(document.activeElement).trigger(event);\n      document.activeElement.should.not.be.equal($html.find('a').eq(0)[0]);\n      $html.remove();\n    });\n    it('stops trapping the focus at the top', function () {\n      var $html = $(\"<div>\\n            <a href=\\\"#\\\">Link1</a>\\n            <a href=\\\"#\\\">Link2</a>\\n            <a href=\\\"#\\\">Link3</a>\\n          </div>\").appendTo('body');\n      Foundation.Keyboard.trapFocus($html);\n      $html.find('a').first().focus();\n      Foundation.Keyboard.releaseFocus($html);\n      var event = createEvent(createEvent(keyCodes['TAB'], {\n        shift: true\n      }));\n      $(document.activeElement).trigger(event);\n      document.activeElement.should.not.be.equal($html.find('a').eq(2)[0]);\n      $html.remove();\n    });\n  });\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/test/javascript/util/keyboard.js"],"names":["describe","createEvent","window","mockKeyboardEvent","keyCodes","it","Foundation","Keyboard","should","be","an","event","parsedKey","parseKey","equal","key","keyCode","ctrl","alt","shift","spy","sinon","register","handleKey","close","called","true","handled","unhandled","$html","$","appendTo","$focusable","findFocusable","length","remove","trapFocus","find","last","focus","document","activeElement","trigger","eq","first","releaseFocus","not"],"mappings":"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","file":"packages/zurb:foundation-sites/test/javascript/util/keyboard.js.map","sourcesContent":["describe('Keyboard util', function() {\n  /**\n   * Creates a dummy event to parse.\n   * Uses jQuery Event class constructor.\n   * @param  {number} keyCode Key code of the key that is simulated.\n   * @param  {object} opts    Options that say if modifiers are pressed.\n   * @return {Event}          Event to use.\n   */\n  const createEvent = window.mockKeyboardEvent;\n  const keyCodes = {\n    'A': 65,\n    'TAB': 9,\n    'ENTER': 13,\n    'ESCAPE': 27,\n    'SPACE': 32,\n    'ARROW_LEFT': 37,\n    'ARROW_UP': 38,\n    'ARROW_RIGHT': 39,\n    'ARROW_DOWN': 40\n  };\n\n  it('exists on the Foundation API', function() {\n    (window.Foundation.Keyboard).should.be.an('object');\n  });\n\n  describe('parseKey()', function() {\n    it('returns the character pressed for a normal key', function() {\n      let event = createEvent(keyCodes['A']),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n\n      parsedKey.should.be.equal('A');\n    });\n    it('returns the character pressed for special keys', function() {\n      for (let key in keyCodes) {\n        let keyCode = keyCodes[key];\n        let event = createEvent(keyCode),\n            parsedKey = Foundation.Keyboard.parseKey(event);\n\n        parsedKey.should.be.equal(key);\n      }\n    });\n    it('recognizes if CTRL was pressed', function() {\n      let event = createEvent(keyCodes['A'], {ctrl: true}),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n\n      parsedKey.should.be.equal('CTRL_A');\n    });\n    it('recognizes if ALT was pressed', function() {\n      let event = createEvent(keyCodes['A'], {alt: true}),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n\n      parsedKey.should.be.equal('ALT_A');\n    });\n    it('recognizes if SHIFT was pressed', function() {\n      let event = createEvent(keyCodes['A'], {shift: true}),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n\n      parsedKey.should.be.equal('SHIFT_A');\n    });\n    it('recognizes if multiple modifiers were pressed', function() {\n      let event = createEvent(keyCodes['A'], {shift: true, alt: true, ctrl: true}),\n          parsedKey = Foundation.Keyboard.parseKey(event);\n\n      parsedKey.should.be.equal('ALT_CTRL_SHIFT_A');\n    });\n  });\n  describe('handleKey()', function() {\n    it('executes callback for given key event', function() {\n      let spy = sinon.spy();\n\n      // Register component\n      Foundation.Keyboard.register('MyComponent', {\n        'ESCAPE': 'close'\n      });\n\n      let event = createEvent(keyCodes['ESCAPE']);\n\n      Foundation.Keyboard.handleKey(event, 'MyComponent', {\n        close: () => {\n          spy();\n        }\n      });\n\n      spy.called.should.be.true;\n    });\n    it('executes handled callback for given key event', function() {\n      let spy = sinon.spy();\n\n      // Register component\n      Foundation.Keyboard.register('MyComponent', {\n        'ESCAPE': 'close'\n      });\n\n      let event = createEvent(keyCodes['ESCAPE']);\n\n      Foundation.Keyboard.handleKey(event, 'MyComponent', {\n        close: () => {\n          // stuff\n        },\n        handled: () => {\n          spy();\n        }\n      });\n\n      spy.called.should.be.true;\n    });\n    it('executes unhandled callback for given key event', function() {\n      let spy = sinon.spy();\n\n      // Register component\n      Foundation.Keyboard.register('MyComponent', {\n      });\n\n      let event = createEvent(keyCodes['ESCAPE']);\n\n      Foundation.Keyboard.handleKey(event, 'MyComponent', {\n        unhandled: () => {\n          spy();\n        }\n      });\n\n      spy.called.should.be.true;\n    });\n  });\n\n  describe('findFocusable()', function() {\n    it('finds focusable elements inside a container', function() {\n      let $html = $(`<div>\n            <a href=\"#\">Link</a>\n            <button>Button</button>\n          </div>`).appendTo('body');\n\n      let $focusable = Foundation.Keyboard.findFocusable($html);\n\n      $focusable.length.should.be.equal(2);\n\n      $html.remove();\n    });\n\n    it('does not find hidden focusable elements', function() {\n      let $html = $(`<div>\n            <a style=\"display: none;\" href=\"#\">Link</a>\n            <button style=\"display: none;\">Button</button>\n          </div>`).appendTo('body');\n\n      let $focusable = Foundation.Keyboard.findFocusable($html);\n\n      $focusable.length.should.be.equal(0);\n\n      $html.remove();\n    });\n\n    it('does not find disabled focusable elements', function() {\n      let $html = $(`<div>\n            <button disabled>Button</button>\n          </div>`).appendTo('body');\n\n      let $focusable = Foundation.Keyboard.findFocusable($html);\n\n      $focusable.length.should.be.equal(0);\n\n      $html.remove();\n    });\n\n    it('does not find focusable elements with negative tabindex', function() {\n      let $html = $(`<div>\n            <button tabindex=\"-1\">Button</button>\n          </div>`).appendTo('body');\n\n      let $focusable = Foundation.Keyboard.findFocusable($html);\n\n      $focusable.length.should.be.equal(0);\n\n      $html.remove();\n    });\n  });\n\n  describe('trapFocus()', function() {\n    it('moves the focus to the first focusable element', function() {\n      let $html = $(`<div>\n            <a href=\"#\">Link1</a>\n            <a href=\"#\">Link2</a>\n            <a href=\"#\">Link3</a>\n          </div>`).appendTo('body');\n\n      Foundation.Keyboard.trapFocus($html);\n      $html.find('a').last().focus();\n\n      let event = createEvent(keyCodes['TAB']);\n      $(document.activeElement).trigger(event);\n\n      document.activeElement.should.be.equal($html.find('a').eq(0)[0]);\n\n      $html.remove();\n    });\n\n    it('moves the focus to the last focusable element', function() {\n      let $html = $(`<div>\n            <a href=\"#\">Link1</a>\n            <a href=\"#\">Link2</a>\n            <a href=\"#\">Link3</a>\n          </div>`).appendTo('body');\n\n      Foundation.Keyboard.trapFocus($html);\n      $html.find('a').first().focus();\n\n      let event = createEvent(keyCodes['TAB'], {shift: true});\n      $(document.activeElement).trigger(event);\n\n      document.activeElement.should.be.equal($html.find('a').eq(2)[0]);\n\n      $html.remove();\n    });\n  });\n\n  describe('releaseFocus()', function() {\n    it('stops trapping the focus at the end', function() {\n      let $html = $(`<div>\n            <a href=\"#\">Link1</a>\n            <a href=\"#\">Link2</a>\n            <a href=\"#\">Link3</a>\n          </div>`).appendTo('body');\n\n      Foundation.Keyboard.trapFocus($html);\n      $html.find('a').last().focus();\n\n      Foundation.Keyboard.releaseFocus($html);\n\n      let event = createEvent(keyCodes['TAB']);\n      $(document.activeElement).trigger(event);\n\n      document.activeElement.should.not.be.equal($html.find('a').eq(0)[0]);\n\n      $html.remove();\n    });\n\n    it('stops trapping the focus at the top', function() {\n      let $html = $(`<div>\n            <a href=\"#\">Link1</a>\n            <a href=\"#\">Link2</a>\n            <a href=\"#\">Link3</a>\n          </div>`).appendTo('body');\n\n      Foundation.Keyboard.trapFocus($html);\n      $html.find('a').first().focus();\n\n      Foundation.Keyboard.releaseFocus($html);\n\n\n      let event = createEvent(createEvent(keyCodes['TAB'], {shift: true}));\n      $(document.activeElement).trigger(event);\n\n      document.activeElement.should.not.be.equal($html.find('a').eq(2)[0]);\n\n      $html.remove();\n    });\n  });\n});\n"]},"hash":"3df002e8fcad25370cbc0168b00b92c8a9d1f52c"}
