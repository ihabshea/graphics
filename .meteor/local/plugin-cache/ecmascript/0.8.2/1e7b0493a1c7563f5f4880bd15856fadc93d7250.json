{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/webgl-extensions.js","filenameRelative":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/webgl-extensions.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/webgl-extensions.js.map","sourceFileName":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/webgl-extensions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"webgl-extensions"},"ignored":false,"code":"// Grab the WebGL extensions currently supported and add to the Modernizr.webgl object\n// spec: www.khronos.org/registry/webgl/specs/latest/#5.13.14\n// based on code from ilmari heikkinen\n// code.google.com/p/graphics-detect/source/browse/js/detect.js\n(function () {\n    if (!Modernizr.webgl) return;\n    var canvas, ctx, exts;\n\n    try {\n        canvas = document.createElement('canvas');\n        ctx = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n        exts = ctx.getSupportedExtensions();\n    } catch (e) {\n        return;\n    }\n\n    if (ctx === undefined) {\n        Modernizr.webgl = new Boolean(false);\n    } else {\n        Modernizr.webgl = new Boolean(true);\n    }\n\n    for (var i = -1, len = exts.length; ++i < len;) {\n        Modernizr.webgl[exts[i]] = true;\n    } // hack for addressing modernizr testsuite failures. sorry.\n\n\n    if (window.TEST && TEST.audvid) {\n        TEST.audvid.push('webgl');\n    }\n\n    canvas = undefined;\n})();","map":{"version":3,"sources":["packages/zurb:foundation-sites/vendor/modernizr/feature-detects/webgl-extensions.js"],"names":["Modernizr","webgl","canvas","ctx","exts","document","createElement","getContext","getSupportedExtensions","e","undefined","Boolean","i","len","length","window","TEST","audvid","push"],"mappings":"AACA;AACA;AAEA;AACA;AAGA,CAAC,YAAU;AAEP,QAAI,CAACA,UAAUC,KAAf,EAAsB;AAEtB,QAAIC,MAAJ,EAAYC,GAAZ,EAAiBC,IAAjB;;AAEA,QAAI;AACAF,iBAAUG,SAASC,aAAT,CAAuB,QAAvB,CAAV;AACAH,cAAUD,OAAOK,UAAP,CAAkB,OAAlB,KAA8BL,OAAOK,UAAP,CAAkB,oBAAlB,CAAxC;AACAH,eAAUD,IAAIK,sBAAJ,EAAV;AACH,KAJD,CAKA,OAAOC,CAAP,EAAU;AACN;AACH;;AAED,QAAIN,QAAQO,SAAZ,EAAuB;AACnBV,kBAAUC,KAAV,GAAkB,IAAIU,OAAJ,CAAY,KAAZ,CAAlB;AACH,KAFD,MAGK;AACDX,kBAAUC,KAAV,GAAkB,IAAIU,OAAJ,CAAY,IAAZ,CAAlB;AACH;;AAGD,SAAK,IAAIC,IAAI,CAAC,CAAT,EAAYC,MAAMT,KAAKU,MAA5B,EAAoC,EAAEF,CAAF,GAAMC,GAA1C,GAAgD;AAC5Cb,kBAAUC,KAAV,CAAgBG,KAAKQ,CAAL,CAAhB,IAA2B,IAA3B;AACH,KAzBM,CA2BP;;;AACA,QAAIG,OAAOC,IAAP,IAAeA,KAAKC,MAAxB,EAA+B;AAC3BD,aAAKC,MAAL,CAAYC,IAAZ,CAAiB,OAAjB;AACH;;AAEDhB,aAASQ,SAAT;AACH,CAjCD","file":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/webgl-extensions.js.map","sourcesContent":["\n// Grab the WebGL extensions currently supported and add to the Modernizr.webgl object\n// spec: www.khronos.org/registry/webgl/specs/latest/#5.13.14\n\n// based on code from ilmari heikkinen\n// code.google.com/p/graphics-detect/source/browse/js/detect.js\n\n\n(function(){\n\n    if (!Modernizr.webgl) return;\n\n    var canvas, ctx, exts;\n\n    try {\n        canvas  = document.createElement('canvas');\n        ctx     = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n        exts    = ctx.getSupportedExtensions();\n    }\n    catch (e) {\n        return;\n    }\n\n    if (ctx === undefined) {\n        Modernizr.webgl = new Boolean(false);\n    }\n    else {\n        Modernizr.webgl = new Boolean(true);\n    }\n\n\n    for (var i = -1, len = exts.length; ++i < len; ){\n        Modernizr.webgl[exts[i]] = true;\n    }\n\n    // hack for addressing modernizr testsuite failures. sorry.\n    if (window.TEST && TEST.audvid){\n        TEST.audvid.push('webgl');\n    }\n\n    canvas = undefined;\n})();"]},"hash":"1e7b0493a1c7563f5f4880bd15856fadc93d7250"}
