{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/gulp/tasks/customizer.js","filenameRelative":"packages/zurb:foundation-sites/gulp/tasks/customizer.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/gulp/tasks/customizer.js.map","sourceFileName":"packages/zurb:foundation-sites/gulp/tasks/customizer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"customizer"},"ignored":false,"code":"var addSrc = require('gulp-add-src');\n\nvar babel = require('gulp-babel');\n\nvar concat = require('gulp-concat');\n\nvar cleancss = require('gulp-clean-css');\n\nvar customizer = require('../../customizer/lib');\n\nvar Vinyl = require('vinyl');\n\nvar fs = require('fs');\n\nvar gulp = require('gulp');\n\nvar If = require('gulp-if');\n\nvar path = require('path');\n\nvar Readable = require('stream').Readable;\n\nvar replace = require('gulp-replace');\n\nvar rename = require('gulp-rename');\n\nvar rimraf = require('rimraf');\n\nvar sass = require('gulp-sass');\n\nvar source = require('vinyl-source-stream');\n\nvar touch = require('touch');\n\nvar uglify = require('gulp-uglify');\n\nvar yaml = require('js-yaml').safeLoad;\n\nvar yargs = require('yargs');\n\nvar zip = require('gulp-zip');\n\nvar postcss = require('gulp-postcss');\n\nvar autoprefixer = require('autoprefixer');\n\nvar webpackStream = require('webpack-stream');\n\nvar webpack2 = require('webpack');\n\nvar named = require('vinyl-named');\n\nvar ARGS = yargs.argv;\n\nvar FOUNDATION_VERSION = require('../../package.json').version;\n\nvar OUTPUT_DIR = ARGS.output || 'custom-build';\nvar COMPATIBILITY = ['last 2 versions', 'ie >= 9', 'and_chr >= 2.3'];\nvar CUSTOMIZER_CONFIG;\nvar MODULE_LIST;\nvar VARIABLE_LIST;\nvar WEBPACK_MODULE_CONFIG = {\n  rules: [{\n    test: /.js$/,\n    use: [{\n      loader: 'babel-loader'\n    }]\n  }] // Load the configuration file for the customizer. It's a list of modules to load and Sass variables to override\n\n};\ngulp.task('customizer:loadConfig', function (done) {\n  fs.readFile('customizer/config.yml', function (err, data) {\n    var moduleListPath = ARGS.modules || '../../customizer/complete';\n\n    var moduleList = require(moduleListPath);\n\n    CUSTOMIZER_CONFIG = yaml(data.toString());\n    MODULE_LIST = moduleList.modules;\n    VARIABLE_LIST = moduleList.variables || {};\n    done();\n  });\n}); // Prepare dependencies\n\ngulp.task('customizer:prepareSassDeps', function () {\n  return gulp.src(['node_modules/@(normalize-scss)/sass/**/*.scss', 'node_modules/@(sassy-lists)/stylesheets/helpers/missing-dependencies', 'node_modules/@(sassy-lists)/stylesheets/helpers/true', 'node_modules/@(sassy-lists)/stylesheets/functions/purge', 'node_modules/@(sassy-lists)/stylesheets/functions/remove', 'node_modules/@(sassy-lists)/stylesheets/functions/replace', 'node_modules/@(sassy-lists)/stylesheets/functions/to-list']).pipe(gulp.dest('_vendor'));\n}); // Creates a Sass file from the module/variable list and creates foundation.css and foundation.min.css\n\ngulp.task('customizer:sass', ['customizer:loadConfig', 'customizer:prepareSassDeps'], function () {\n  var sassFile = customizer.sass(CUSTOMIZER_CONFIG, MODULE_LIST, VARIABLE_LIST);\n  var stream = createStream('foundation.scss', sassFile);\n  return stream.pipe(sass({\n    includePaths: ['scss', 'node_modules/motion-ui/src']\n  })).pipe(postcss([autoprefixer({\n    browsers: COMPATIBILITY\n  })])).pipe(gulp.dest(path.join(OUTPUT_DIR, 'css'))).pipe(cleancss({\n    compatibility: 'ie9'\n  })).pipe(rename('foundation.min.css')).pipe(gulp.dest(path.join(OUTPUT_DIR, 'css')));\n}); // Creates a Foundation JavaScript file from the module list, and also copies dependencies (jQuery, what-input)\n\ngulp.task('customizer:javascript-entry', ['customizer:loadConfig'], function () {\n  var entryFile = customizer.js(CUSTOMIZER_CONFIG, MODULE_LIST); // Create a stream with our entry file\n\n  var stream = createStream('foundation.js', entryFile);\n  return stream.pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor')));\n});\ngulp.task('customizer:javascript', ['customizer:javascript-entry'], function () {\n  return gulp.src(path.join(OUTPUT_DIR, 'js/vendor/foundation.js')).pipe(webpackStream({\n    externals: {\n      jquery: 'jQuery'\n    },\n    module: WEBPACK_MODULE_CONFIG\n  }, webpack2)).pipe(rename('foundation.js')).pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor'))).pipe(uglify()).pipe(rename('foundation.min.js')).pipe(addSrc(['node_modules/jquery/dist/jquery.js', 'node_modules/what-input/dist/what-input.js'])).pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor')));\n}); // Copies the boilerplate index.html to the custom download folder\n\ngulp.task('customizer:html', ['customizer:loadConfig'], function () {\n  var rtlEnabled = VARIABLE_LIST['global-text-direction'] && VARIABLE_LIST['global-text-direction'] === 'rtl';\n  return gulp.src('customizer/index.html').pipe(If(rtlEnabled, replace('ltr', 'rtl'))).pipe(gulp.dest(OUTPUT_DIR));\n}); // Creates a custom build by:\n//   - Generating a CSS file\n//   - Generating a JS file\n//   - Copying the index.html file\n//   - Creating a blank app.css file\n//   - Creating an app.js file with Foundation initialization code\n\ngulp.task('customizer', ['customizer:sass', 'customizer:javascript', 'customizer:html'], function (done) {\n  var outputFolder = path.dirname(OUTPUT_DIR);\n  var outputFileName = path.basename(OUTPUT_DIR);\n  touch(path.join(OUTPUT_DIR, 'css/app.css'));\n  touch(path.join(OUTPUT_DIR, 'js/app.js'));\n  fs.writeFileSync(path.join(OUTPUT_DIR, 'js/app.js'), '$(document).foundation()\\n');\n  gulp.src(path.join(OUTPUT_DIR, '/**/*')).pipe(zip(path.basename(outputFileName) + '.zip')).pipe(gulp.dest(outputFolder)).on('finish', function () {\n    rimraf(OUTPUT_DIR, done);\n  });\n});\n\nfunction createStream(name, content) {\n  // Create a stream with our entry file\n  var stream = new Readable({\n    objectMode: true\n  });\n\n  stream._read = function () {};\n\n  stream.push(new Vinyl({\n    path: name,\n    contents: new Buffer(content)\n  }));\n  stream.push(null);\n  return stream;\n}","map":{"version":3,"sources":["packages/zurb:foundation-sites/gulp/tasks/customizer.js"],"names":["addSrc","require","babel","concat","cleancss","customizer","Vinyl","fs","gulp","If","path","Readable","replace","rename","rimraf","sass","source","touch","uglify","yaml","safeLoad","yargs","zip","postcss","autoprefixer","webpackStream","webpack2","named","ARGS","argv","FOUNDATION_VERSION","version","OUTPUT_DIR","output","COMPATIBILITY","CUSTOMIZER_CONFIG","MODULE_LIST","VARIABLE_LIST","WEBPACK_MODULE_CONFIG","rules","test","use","loader","task","done","readFile","err","data","moduleListPath","modules","moduleList","toString","variables","src","pipe","dest","sassFile","stream","createStream","includePaths","browsers","join","compatibility","entryFile","js","externals","jquery","module","rtlEnabled","outputFolder","dirname","outputFileName","basename","writeFileSync","on","name","content","objectMode","_read","push","contents","Buffer"],"mappings":"AAAA,IAAIA,SAASC,QAAQ,cAAR,CAAb;;AACA,IAAIC,QAAQD,QAAQ,YAAR,CAAZ;;AACA,IAAIE,SAASF,QAAQ,aAAR,CAAb;;AACA,IAAIG,WAAWH,QAAQ,gBAAR,CAAf;;AACA,IAAII,aAAaJ,QAAQ,sBAAR,CAAjB;;AACA,IAAIK,QAAQL,QAAQ,OAAR,CAAZ;;AACA,IAAIM,KAAKN,QAAQ,IAAR,CAAT;;AACA,IAAIO,OAAOP,QAAQ,MAAR,CAAX;;AACA,IAAIQ,KAAKR,QAAQ,SAAR,CAAT;;AACA,IAAIS,OAAOT,QAAQ,MAAR,CAAX;;AACA,IAAIU,WAAWV,QAAQ,QAAR,EAAkBU,QAAjC;;AACA,IAAIC,UAAUX,QAAQ,cAAR,CAAd;;AACA,IAAIY,SAASZ,QAAQ,aAAR,CAAb;;AACA,IAAIa,SAASb,QAAQ,QAAR,CAAb;;AACA,IAAIc,OAAOd,QAAQ,WAAR,CAAX;;AACA,IAAIe,SAASf,QAAQ,qBAAR,CAAb;;AACA,IAAIgB,QAAQhB,QAAQ,OAAR,CAAZ;;AACA,IAAIiB,SAASjB,QAAQ,aAAR,CAAb;;AACA,IAAIkB,OAAOlB,QAAQ,SAAR,EAAmBmB,QAA9B;;AACA,IAAIC,QAAQpB,QAAQ,OAAR,CAAZ;;AACA,IAAIqB,MAAMrB,QAAQ,UAAR,CAAV;;AACA,IAAIsB,UAAUtB,QAAQ,cAAR,CAAd;;AACA,IAAIuB,eAAevB,QAAQ,cAAR,CAAnB;;AACA,IAAIwB,gBAAgBxB,QAAQ,gBAAR,CAApB;;AACA,IAAIyB,WAAWzB,QAAQ,SAAR,CAAf;;AACA,IAAI0B,QAAQ1B,QAAQ,aAAR,CAAZ;;AAGA,IAAI2B,OAAOP,MAAMQ,IAAjB;;AACA,IAAIC,qBAAqB7B,QAAQ,oBAAR,EAA8B8B,OAAvD;;AACA,IAAIC,aAAaJ,KAAKK,MAAL,IAAe,cAAhC;AACA,IAAIC,gBAAgB,CAClB,iBADkB,EAElB,SAFkB,EAGlB,gBAHkB,CAApB;AAKA,IAAIC,iBAAJ;AACA,IAAIC,WAAJ;AACA,IAAIC,aAAJ;AAEA,IAAIC,wBAAwB;AAC1BC,SAAO,CACL;AACEC,UAAM,MADR;AAEEC,SAAK,CACH;AACEC,cAAQ;AADV,KADG;AAFP,GADK,CADmB,CAa5B;;AAb4B,CAA5B;AAcAlC,KAAKmC,IAAL,CAAU,uBAAV,EAAmC,UAASC,IAAT,EAAe;AAChDrC,KAAGsC,QAAH,CAAY,uBAAZ,EAAqC,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACvD,QAAIC,iBAAiBpB,KAAKqB,OAAL,IAAgB,2BAArC;;AACA,QAAIC,aAAajD,QAAQ+C,cAAR,CAAjB;;AAEAb,wBAAoBhB,KAAK4B,KAAKI,QAAL,EAAL,CAApB;AACAf,kBAAcc,WAAWD,OAAzB;AACAZ,oBAAgBa,WAAWE,SAAX,IAAwB,EAAxC;AACAR;AACD,GARD;AASD,CAVD,E,CAYA;;AACApC,KAAKmC,IAAL,CAAU,4BAAV,EAAwC,YAAW;AACjD,SAAOnC,KAAK6C,GAAL,CAAS,CACZ,+CADY,EAEZ,sEAFY,EAGZ,sDAHY,EAIZ,yDAJY,EAKZ,0DALY,EAMZ,2DANY,EAOZ,2DAPY,CAAT,EASJC,IATI,CASC9C,KAAK+C,IAAL,CAAU,SAAV,CATD,CAAP;AAUD,CAXD,E,CAaA;;AACA/C,KAAKmC,IAAL,CAAU,iBAAV,EAA6B,CAAC,uBAAD,EAA0B,4BAA1B,CAA7B,EAAsF,YAAW;AAC/F,MAAIa,WAAWnD,WAAWU,IAAX,CAAgBoB,iBAAhB,EAAmCC,WAAnC,EAAgDC,aAAhD,CAAf;AAEA,MAAIoB,SAASC,aAAa,iBAAb,EAAgCF,QAAhC,CAAb;AAEA,SAAOC,OACJH,IADI,CACCvC,KAAK;AACT4C,kBAAc,CACZ,MADY,EAEZ,4BAFY;AADL,GAAL,CADD,EAOJL,IAPI,CAOC/B,QAAQ,CAACC,aAAa;AAC1BoC,cAAU1B;AADgB,GAAb,CAAD,CAAR,CAPD,EAUJoB,IAVI,CAUC9C,KAAK+C,IAAL,CAAU7C,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,KAAtB,CAAV,CAVD,EAWJsB,IAXI,CAWClD,SAAS;AAAE0D,mBAAe;AAAjB,GAAT,CAXD,EAYJR,IAZI,CAYCzC,OAAO,oBAAP,CAZD,EAaJyC,IAbI,CAaC9C,KAAK+C,IAAL,CAAU7C,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,KAAtB,CAAV,CAbD,CAAP;AAcD,CAnBD,E,CAqBA;;AACAxB,KAAKmC,IAAL,CAAU,6BAAV,EAAyC,CAAC,uBAAD,CAAzC,EAAoE,YAAW;AAC7E,MAAIoB,YAAY1D,WAAW2D,EAAX,CAAc7B,iBAAd,EAAiCC,WAAjC,CAAhB,CAD6E,CAE7E;;AACA,MAAIqB,SAASC,aAAa,eAAb,EAA8BK,SAA9B,CAAb;AAEA,SAAON,OACJH,IADI,CACC9C,KAAK+C,IAAL,CAAU7C,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,WAAtB,CAAV,CADD,CAAP;AAED,CAPD;AASAxB,KAAKmC,IAAL,CAAU,uBAAV,EAAmC,CAAC,6BAAD,CAAnC,EAAoE,YAAW;AAC7E,SAAOnC,KAAK6C,GAAL,CAAS3C,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,yBAAtB,CAAT,EACJsB,IADI,CACC7B,cAAc;AAACwC,eAAW;AAACC,cAAQ;AAAT,KAAZ;AAAgCC,YAAQ7B;AAAxC,GAAd,EAA8EZ,QAA9E,CADD,EAEJ4B,IAFI,CAECzC,OAAO,eAAP,CAFD,EAGJyC,IAHI,CAGC9C,KAAK+C,IAAL,CAAU7C,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,WAAtB,CAAV,CAHD,EAIJsB,IAJI,CAICpC,QAJD,EAKJoC,IALI,CAKCzC,OAAO,mBAAP,CALD,EAMJyC,IANI,CAMCtD,OAAO,CACX,oCADW,EAEX,4CAFW,CAAP,CAND,EAUJsD,IAVI,CAUC9C,KAAK+C,IAAL,CAAU7C,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,WAAtB,CAAV,CAVD,CAAP;AAWD,CAZD,E,CAcA;;AACAxB,KAAKmC,IAAL,CAAU,iBAAV,EAA6B,CAAC,uBAAD,CAA7B,EAAwD,YAAW;AACjE,MAAIyB,aAAa/B,cAAc,uBAAd,KAA0CA,cAAc,uBAAd,MAA2C,KAAtG;AAEA,SAAO7B,KAAK6C,GAAL,CAAS,uBAAT,EACJC,IADI,CACC7C,GAAG2D,UAAH,EAAexD,QAAQ,KAAR,EAAe,KAAf,CAAf,CADD,EAEJ0C,IAFI,CAEC9C,KAAK+C,IAAL,CAAUvB,UAAV,CAFD,CAAP;AAGD,CAND,E,CAQA;AACA;AACA;AACA;AACA;AACA;;AACAxB,KAAKmC,IAAL,CAAU,YAAV,EAAwB,CAAC,iBAAD,EAAoB,uBAApB,EAA6C,iBAA7C,CAAxB,EAAyF,UAASC,IAAT,EAAe;AACtG,MAAIyB,eAAe3D,KAAK4D,OAAL,CAAatC,UAAb,CAAnB;AACA,MAAIuC,iBAAiB7D,KAAK8D,QAAL,CAAcxC,UAAd,CAArB;AAEAf,QAAMP,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,aAAtB,CAAN;AACAf,QAAMP,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,WAAtB,CAAN;AACAzB,KAAGkE,aAAH,CAAiB/D,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,WAAtB,CAAjB,EAAqD,4BAArD;AAEAxB,OAAK6C,GAAL,CAAS3C,KAAKmD,IAAL,CAAU7B,UAAV,EAAsB,OAAtB,CAAT,EACGsB,IADH,CACQhC,IAAIZ,KAAK8D,QAAL,CAAcD,cAAd,IAAgC,MAApC,CADR,EAEGjB,IAFH,CAEQ9C,KAAK+C,IAAL,CAAUc,YAAV,CAFR,EAGGK,EAHH,CAGM,QAHN,EAGgB,YAAW;AACvB5D,WAAOkB,UAAP,EAAmBY,IAAnB;AACD,GALH;AAMC,CAdH;;AAgBA,SAASc,YAAT,CAAsBiB,IAAtB,EAA4BC,OAA5B,EAAqC;AACnC;AACA,MAAInB,SAAS,IAAI9C,QAAJ,CAAa;AAAEkE,gBAAY;AAAd,GAAb,CAAb;;AACApB,SAAOqB,KAAP,GAAe,YAAW,CAAE,CAA5B;;AACArB,SAAOsB,IAAP,CAAY,IAAIzE,KAAJ,CAAU;AACpBI,UAAMiE,IADc;AAEpBK,cAAU,IAAIC,MAAJ,CAAWL,OAAX;AAFU,GAAV,CAAZ;AAIAnB,SAAOsB,IAAP,CAAY,IAAZ;AACA,SAAOtB,MAAP;AACD","file":"packages/zurb:foundation-sites/gulp/tasks/customizer.js.map","sourcesContent":["var addSrc = require('gulp-add-src');\nvar babel = require('gulp-babel');\nvar concat = require('gulp-concat');\nvar cleancss = require('gulp-clean-css');\nvar customizer = require('../../customizer/lib');\nvar Vinyl = require('vinyl');\nvar fs = require('fs');\nvar gulp = require('gulp');\nvar If = require('gulp-if');\nvar path = require('path');\nvar Readable = require('stream').Readable;\nvar replace = require('gulp-replace');\nvar rename = require('gulp-rename');\nvar rimraf = require('rimraf');\nvar sass = require('gulp-sass');\nvar source = require('vinyl-source-stream');\nvar touch = require('touch');\nvar uglify = require('gulp-uglify');\nvar yaml = require('js-yaml').safeLoad;\nvar yargs = require('yargs');\nvar zip = require('gulp-zip');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar webpackStream = require('webpack-stream');\nvar webpack2 = require('webpack');\nvar named = require('vinyl-named');\n\n\nvar ARGS = yargs.argv;\nvar FOUNDATION_VERSION = require('../../package.json').version;\nvar OUTPUT_DIR = ARGS.output || 'custom-build';\nvar COMPATIBILITY = [\n  'last 2 versions',\n  'ie >= 9',\n  'and_chr >= 2.3'\n];\nvar CUSTOMIZER_CONFIG;\nvar MODULE_LIST;\nvar VARIABLE_LIST;\n\nvar WEBPACK_MODULE_CONFIG = {\n  rules: [\n    {\n      test: /.js$/,\n      use: [\n        {\n          loader: 'babel-loader'\n        }\n      ]\n    }\n  ]\n}\n\n// Load the configuration file for the customizer. It's a list of modules to load and Sass variables to override\ngulp.task('customizer:loadConfig', function(done) {\n  fs.readFile('customizer/config.yml', function(err, data) {\n    var moduleListPath = ARGS.modules || '../../customizer/complete';\n    var moduleList = require(moduleListPath);\n\n    CUSTOMIZER_CONFIG = yaml(data.toString());\n    MODULE_LIST = moduleList.modules;\n    VARIABLE_LIST = moduleList.variables || {};\n    done();\n  });\n});\n\n// Prepare dependencies\ngulp.task('customizer:prepareSassDeps', function() {\n  return gulp.src([\n      'node_modules/@(normalize-scss)/sass/**/*.scss',\n      'node_modules/@(sassy-lists)/stylesheets/helpers/missing-dependencies',\n      'node_modules/@(sassy-lists)/stylesheets/helpers/true',\n      'node_modules/@(sassy-lists)/stylesheets/functions/purge',\n      'node_modules/@(sassy-lists)/stylesheets/functions/remove',\n      'node_modules/@(sassy-lists)/stylesheets/functions/replace',\n      'node_modules/@(sassy-lists)/stylesheets/functions/to-list'\n    ])\n    .pipe(gulp.dest('_vendor'));\n});\n\n// Creates a Sass file from the module/variable list and creates foundation.css and foundation.min.css\ngulp.task('customizer:sass', ['customizer:loadConfig', 'customizer:prepareSassDeps'], function() {\n  var sassFile = customizer.sass(CUSTOMIZER_CONFIG, MODULE_LIST, VARIABLE_LIST);\n\n  var stream = createStream('foundation.scss', sassFile);\n\n  return stream\n    .pipe(sass({\n      includePaths: [\n        'scss',\n        'node_modules/motion-ui/src'\n      ]\n    }))\n    .pipe(postcss([autoprefixer({\n      browsers: COMPATIBILITY\n    })]))\n    .pipe(gulp.dest(path.join(OUTPUT_DIR, 'css')))\n    .pipe(cleancss({ compatibility: 'ie9' }))\n    .pipe(rename('foundation.min.css'))\n    .pipe(gulp.dest(path.join(OUTPUT_DIR, 'css')));\n});\n\n// Creates a Foundation JavaScript file from the module list, and also copies dependencies (jQuery, what-input)\ngulp.task('customizer:javascript-entry', ['customizer:loadConfig'], function() {\n  var entryFile = customizer.js(CUSTOMIZER_CONFIG, MODULE_LIST);\n  // Create a stream with our entry file\n  var stream = createStream('foundation.js', entryFile);\n\n  return stream\n    .pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor')));\n});\n\ngulp.task('customizer:javascript', ['customizer:javascript-entry'], function() {\n  return gulp.src(path.join(OUTPUT_DIR, 'js/vendor/foundation.js'))\n    .pipe(webpackStream({externals: {jquery: 'jQuery'}, module: WEBPACK_MODULE_CONFIG}, webpack2))\n    .pipe(rename('foundation.js'))\n    .pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor')))\n    .pipe(uglify())\n    .pipe(rename('foundation.min.js'))\n    .pipe(addSrc([\n      'node_modules/jquery/dist/jquery.js',\n      'node_modules/what-input/dist/what-input.js'\n    ]))\n    .pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor')));\n});\n\n// Copies the boilerplate index.html to the custom download folder\ngulp.task('customizer:html', ['customizer:loadConfig'], function() {\n  var rtlEnabled = VARIABLE_LIST['global-text-direction'] && VARIABLE_LIST['global-text-direction'] === 'rtl';\n\n  return gulp.src('customizer/index.html')\n    .pipe(If(rtlEnabled, replace('ltr', 'rtl')))\n    .pipe(gulp.dest(OUTPUT_DIR));\n});\n\n// Creates a custom build by:\n//   - Generating a CSS file\n//   - Generating a JS file\n//   - Copying the index.html file\n//   - Creating a blank app.css file\n//   - Creating an app.js file with Foundation initialization code\ngulp.task('customizer', ['customizer:sass', 'customizer:javascript', 'customizer:html'], function(done) {\n  var outputFolder = path.dirname(OUTPUT_DIR);\n  var outputFileName = path.basename(OUTPUT_DIR);\n\n  touch(path.join(OUTPUT_DIR, 'css/app.css'));\n  touch(path.join(OUTPUT_DIR, 'js/app.js'));\n  fs.writeFileSync(path.join(OUTPUT_DIR, 'js/app.js'), '$(document).foundation()\\n');\n\n  gulp.src(path.join(OUTPUT_DIR, '/**/*'))\n    .pipe(zip(path.basename(outputFileName) + '.zip'))\n    .pipe(gulp.dest(outputFolder))\n    .on('finish', function() {\n      rimraf(OUTPUT_DIR, done);\n    });\n  });\n\nfunction createStream(name, content) {\n  // Create a stream with our entry file\n  var stream = new Readable({ objectMode: true });\n  stream._read = function() {};\n  stream.push(new Vinyl({\n    path: name,\n    contents: new Buffer(content)\n  }));\n  stream.push(null);\n  return stream;\n}\n"]},"hash":"a5c28e6e3dffb59d1da73e3eb54716844398caa5"}
