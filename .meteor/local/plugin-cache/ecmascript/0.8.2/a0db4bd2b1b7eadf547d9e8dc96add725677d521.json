{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/gulp/tasks/deploy.js","filenameRelative":"packages/zurb:foundation-sites/gulp/tasks/deploy.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/gulp/tasks/deploy.js.map","sourceFileName":"packages/zurb:foundation-sites/gulp/tasks/deploy.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"deploy"},"ignored":false,"code":"var gulp = require('gulp');\n\nvar filter = require('gulp-filter');\n\nvar cleancss = require('gulp-clean-css');\n\nvar rename = require('gulp-rename');\n\nvar uglify = require('gulp-uglify');\n\nvar confirm = require('gulp-prompt').confirm;\n\nvar rsync = require('gulp-rsync');\n\nvar replace = require('gulp-replace');\n\nvar octophant = require('octophant');\n\nvar sequence = require('run-sequence');\n\nvar inquirer = require('inquirer');\n\nvar exec = require('child_process').execSync;\n\nvar plumber = require('gulp-plumber');\n\nvar CONFIG = require('../config.js');\n\nvar CURRENT_VERSION = require('../../package.json').version;\n\nvar NEXT_VERSION;\ngulp.task('deploy', function (cb) {\n  sequence('deploy:prompt', 'deploy:version', 'deploy:dist', 'deploy:plugins', 'deploy:settings', 'deploy:commit', 'deploy:templates', cb);\n});\ngulp.task('deploy:prep', function (cb) {\n  sequence('deploy:prompt', 'deploy:version', 'deploy:dist', 'deploy:plugins', 'deploy:settings', cb);\n});\ngulp.task('deploy:prompt', function (cb) {\n  inquirer.prompt([{\n    type: 'input',\n    name: 'version',\n    message: 'What version are we moving to? (Current version is ' + CURRENT_VERSION + ')'\n  }]).then(function (res) {\n    NEXT_VERSION = res.version;\n    cb();\n  });\n}); // Bumps the version number in any file that has one\n\ngulp.task('deploy:version', function () {\n  return gulp.src(CONFIG.VERSIONED_FILES, {\n    base: process.cwd()\n  }).pipe(replace(CURRENT_VERSION, NEXT_VERSION)).pipe(gulp.dest('.'));\n}); // Generates compiled CSS and JS files and puts them in the dist/ folder\n\ngulp.task('deploy:dist', ['sass:foundation', 'javascript:foundation'], function () {\n  var cssFilter = filter(['**/*.css'], {\n    restore: true\n  });\n  var jsFilter = filter(['**/*.js'], {\n    restore: true\n  });\n  console.log(CONFIG.DIST_FILES);\n  return gulp.src(CONFIG.DIST_FILES).pipe(plumber()).pipe(cssFilter).pipe(gulp.dest('./dist/css')).pipe(cleancss({\n    compatibility: 'ie9'\n  })).pipe(rename({\n    suffix: '.min'\n  })).pipe(gulp.dest('./dist/css')).pipe(cssFilter.restore).pipe(jsFilter).pipe(gulp.dest('./dist/js')).pipe(uglify()).pipe(rename({\n    suffix: '.min'\n  })).pipe(gulp.dest('./dist/js'));\n}); // Copies standalone JavaScript plugins to dist/ folder\n\ngulp.task('deploy:plugins', function () {\n  gulp.src('_build/assets/js/plugins/*.js').pipe(gulp.dest('dist/js/plugins')).pipe(uglify()).pipe(rename({\n    suffix: '.min'\n  })).pipe(gulp.dest('dist/js/plugins'));\n}); // Generates a settings file\n\ngulp.task('deploy:settings', function (cb) {\n  var options = {\n    title: 'Foundation for Sites Settings',\n    output: './scss/settings/_settings.scss',\n    groups: {\n      'grid': 'The Grid',\n      'off-canvas': 'Off-canvas',\n      'typography-base': 'Base Typography'\n    },\n    sort: ['global', 'breakpoints', 'grid', 'typography-base', 'typography-helpers'],\n    imports: ['util/util'],\n    _foundationShim: true\n  };\n  octophant('./scss', options, cb);\n}); // Writes a commit with the changes to the version numbers\n\ngulp.task('deploy:commit', function (cb) {\n  exec('git commit -am \"Bump to version \"' + NEXT_VERSION);\n  exec('git tag v' + NEXT_VERSION);\n  exec('git push origin develop --follow-tags');\n  cb();\n}); // Uploads the documentation to the live server\n\ngulp.task('deploy:docs', ['build'], function () {\n  return gulp.src('./_build/**').pipe(confirm('Make sure everything looks right before you deploy.')).pipe(rsync({\n    root: './_build',\n    hostname: 'deployer@72.32.134.77',\n    destination: '/home/deployer/sites/foundation-sites-6-docs'\n  }));\n}); // Uploads the documentation to the live server in beta env\n\ngulp.task('deploy:beta', ['build'], function () {\n  return gulp.src('./_build/**').pipe(confirm('Make sure everything looks right before you deploy.')).pipe(rsync({\n    root: './_build',\n    hostname: 'deployer@72.32.134.77',\n    destination: '/home/deployer/sites/scalingsexiness/foundation-sites-6-docs'\n  }));\n}); // This part of the deploy process hasn't been tested! It should be done manually for now\n\ngulp.task('deploy:templates', function (done) {\n  // exec('git clone https://github.com/zurb/foundation-sites-template');\n  // exec('cp scss/settings/_settings.scss foundation-sites-template/scss/_settings.scss');\n  // exec('cd foundation-sites-template');\n  // exec('git commit -am \"Update settings file to match Foundation \"' + NEXT_VERSION);\n  // exec('git push origin master');\n  // exec('cd ..');\n  // exec('rm -rf foundation-sites-template');\n  //\n  // exec('git clone https://github.com/zurb/foundation-zurb-template');\n  // exec('cp scss/settings/_settings.scss foundation-zurb-template/src/assets/scss/_settings.scss');\n  // exec('cd foundation-zurb-template');\n  // exec('git commit -am \"Update settings file to match Foundation \"' + NEXT_VERSION);\n  // exec('git push origin master');\n  // exec('cd ..');\n  // exec('rm -rf foundation-zurb-template');\n  done();\n}); // The Customizer runs this function to generate files it needs\n\ngulp.task('deploy:custom', ['sass:foundation', 'javascript:foundation'], function () {\n  gulp.src('./_build/assets/css/foundation.css').pipe(cleancss({\n    compatibility: 'ie9'\n  })).pipe(rename('foundation.min.css')).pipe(gulp.dest('./_build/assets/css'));\n  return gulp.src('_build/assets/js/foundation.js').pipe(uglify()).pipe(rename('foundation.min.js')).pipe(gulp.dest('./_build/assets/js'));\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/gulp/tasks/deploy.js"],"names":["gulp","require","filter","cleancss","rename","uglify","confirm","rsync","replace","octophant","sequence","inquirer","exec","execSync","plumber","CONFIG","CURRENT_VERSION","version","NEXT_VERSION","task","cb","prompt","type","name","message","then","res","src","VERSIONED_FILES","base","process","cwd","pipe","dest","cssFilter","restore","jsFilter","console","log","DIST_FILES","compatibility","suffix","options","title","output","groups","sort","imports","_foundationShim","root","hostname","destination","done"],"mappings":"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","file":"packages/zurb:foundation-sites/gulp/tasks/deploy.js.map","sourcesContent":["var gulp = require('gulp');\nvar filter = require('gulp-filter');\nvar cleancss = require('gulp-clean-css');\nvar rename = require('gulp-rename');\nvar uglify = require('gulp-uglify');\nvar confirm = require('gulp-prompt').confirm;\nvar rsync = require('gulp-rsync');\nvar replace = require('gulp-replace');\nvar octophant = require('octophant');\nvar sequence = require('run-sequence');\nvar inquirer = require('inquirer');\nvar exec = require('child_process').execSync;\nvar plumber = require('gulp-plumber');\n\nvar CONFIG = require('../config.js');\nvar CURRENT_VERSION = require('../../package.json').version;\nvar NEXT_VERSION;\n\ngulp.task('deploy', function(cb) {\n  sequence('deploy:prompt', 'deploy:version', 'deploy:dist', 'deploy:plugins', 'deploy:settings', 'deploy:commit', 'deploy:templates', cb);\n});\n\ngulp.task('deploy:prep', function(cb) {\n  sequence('deploy:prompt', 'deploy:version', 'deploy:dist', 'deploy:plugins', 'deploy:settings', cb);\n});\n\n\ngulp.task('deploy:prompt', function(cb) {\n  inquirer.prompt([{\n    type: 'input',\n    name: 'version',\n    message: 'What version are we moving to? (Current version is ' + CURRENT_VERSION + ')'\n  }])\n  .then(function(res) {\n    NEXT_VERSION = res.version;\n    cb();\n  });\n});\n\n// Bumps the version number in any file that has one\ngulp.task('deploy:version', function() {\n  return gulp.src(CONFIG.VERSIONED_FILES, { base: process.cwd() })\n    .pipe(replace(CURRENT_VERSION, NEXT_VERSION))\n    .pipe(gulp.dest('.'));\n});\n\n// Generates compiled CSS and JS files and puts them in the dist/ folder\ngulp.task('deploy:dist', ['sass:foundation', 'javascript:foundation'], function() {\n  var cssFilter = filter(['**/*.css'], { restore: true });\n  var jsFilter  = filter(['**/*.js'], { restore: true });\n\n  console.log(CONFIG.DIST_FILES)\n  return gulp.src(CONFIG.DIST_FILES)\n    .pipe(plumber())\n    .pipe(cssFilter)\n      .pipe(gulp.dest('./dist/css'))\n      .pipe(cleancss({ compatibility: 'ie9' }))\n      .pipe(rename({ suffix: '.min' }))\n      .pipe(gulp.dest('./dist/css'))\n    .pipe(cssFilter.restore)\n    .pipe(jsFilter)\n      .pipe(gulp.dest('./dist/js'))\n      .pipe(uglify())\n      .pipe(rename({ suffix: '.min' }))\n      .pipe(gulp.dest('./dist/js'));\n});\n\n// Copies standalone JavaScript plugins to dist/ folder\ngulp.task('deploy:plugins', function() {\n  gulp.src('_build/assets/js/plugins/*.js')\n    .pipe(gulp.dest('dist/js/plugins'))\n    .pipe(uglify())\n    .pipe(rename({ suffix: '.min' }))\n    .pipe(gulp.dest('dist/js/plugins'));\n});\n\n// Generates a settings file\ngulp.task('deploy:settings', function(cb) {\n  var options = {\n    title: 'Foundation for Sites Settings',\n    output: './scss/settings/_settings.scss',\n    groups: {\n      'grid': 'The Grid',\n      'off-canvas': 'Off-canvas',\n      'typography-base': 'Base Typography'\n    },\n    sort: [\n      'global',\n      'breakpoints',\n      'grid',\n      'typography-base',\n      'typography-helpers'\n    ],\n    imports: ['util/util'],\n    _foundationShim: true\n  }\n\n  octophant('./scss', options, cb);\n});\n\n// Writes a commit with the changes to the version numbers\ngulp.task('deploy:commit', function(cb) {\n  exec('git commit -am \"Bump to version \"' + NEXT_VERSION);\n  exec('git tag v' + NEXT_VERSION);\n  exec('git push origin develop --follow-tags');\n  cb();\n});\n\n// Uploads the documentation to the live server\ngulp.task('deploy:docs', ['build'], function() {\n  return gulp.src('./_build/**')\n    .pipe(confirm('Make sure everything looks right before you deploy.'))\n    .pipe(rsync({\n      root: './_build',\n      hostname: 'deployer@72.32.134.77',\n      destination: '/home/deployer/sites/foundation-sites-6-docs'\n    }));\n  });\n\n// Uploads the documentation to the live server in beta env\ngulp.task('deploy:beta', ['build'], function() {\n  return gulp.src('./_build/**')\n    .pipe(confirm('Make sure everything looks right before you deploy.'))\n    .pipe(rsync({\n      root: './_build',\n      hostname: 'deployer@72.32.134.77',\n      destination: '/home/deployer/sites/scalingsexiness/foundation-sites-6-docs'\n    }));\n});\n\n\n\n// This part of the deploy process hasn't been tested! It should be done manually for now\ngulp.task('deploy:templates', function(done) {\n  // exec('git clone https://github.com/zurb/foundation-sites-template');\n  // exec('cp scss/settings/_settings.scss foundation-sites-template/scss/_settings.scss');\n  // exec('cd foundation-sites-template');\n  // exec('git commit -am \"Update settings file to match Foundation \"' + NEXT_VERSION);\n  // exec('git push origin master');\n  // exec('cd ..');\n  // exec('rm -rf foundation-sites-template');\n  //\n  // exec('git clone https://github.com/zurb/foundation-zurb-template');\n  // exec('cp scss/settings/_settings.scss foundation-zurb-template/src/assets/scss/_settings.scss');\n  // exec('cd foundation-zurb-template');\n  // exec('git commit -am \"Update settings file to match Foundation \"' + NEXT_VERSION);\n  // exec('git push origin master');\n  // exec('cd ..');\n  // exec('rm -rf foundation-zurb-template');\n  done();\n});\n\n// The Customizer runs this function to generate files it needs\ngulp.task('deploy:custom', ['sass:foundation', 'javascript:foundation'], function() {\n  gulp.src('./_build/assets/css/foundation.css')\n      .pipe(cleancss({ compatibility: 'ie9' }))\n      .pipe(rename('foundation.min.css'))\n      .pipe(gulp.dest('./_build/assets/css'));\n\n  return gulp.src('_build/assets/js/foundation.js')\n      .pipe(uglify())\n      .pipe(rename('foundation.min.js'))\n      .pipe(gulp.dest('./_build/assets/js'));\n});\n"]},"hash":"a0db4bd2b1b7eadf547d9e8dc96add725677d521"}
