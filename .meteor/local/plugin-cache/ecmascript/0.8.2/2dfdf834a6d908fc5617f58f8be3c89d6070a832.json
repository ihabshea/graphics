{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"jquery","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"$"}]}],"exports":{"exported":["onImagesLoaded"],"specifiers":[{"kind":"local","local":"onImagesLoaded","exported":"onImagesLoaded"}]}}},"options":{"filename":"packages/zurb:foundation-sites/js/foundation.util.imageLoader.js","filenameRelative":"packages/zurb:foundation-sites/js/foundation.util.imageLoader.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/js/foundation.util.imageLoader.js.map","sourceFileName":"packages/zurb:foundation-sites/js/foundation.util.imageLoader.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.util.imageLoader"},"ignored":false,"code":"'use strict';\n\nmodule.export({\n  onImagesLoaded: function () {\n    return onImagesLoaded;\n  }\n});\nvar $ = void 0;\nmodule.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 0);\n\n/**\n * Runs a callback function when images are fully loaded.\n * @param {Object} images - Image(s) to check if loaded.\n * @param {Func} callback - Function to execute when image is fully loaded.\n */function onImagesLoaded(images, callback) {\n  var self = this,\n      unloaded = images.length;\n\n  if (unloaded === 0) {\n    callback();\n  }\n\n  images.each(function () {\n    // Check if image is loaded\n    if (this.complete && this.naturalWidth !== undefined) {\n      singleImageLoaded();\n    } else {\n      // If the above check failed, simulate loading on detached element.\n      var image = new Image(); // Still count image as loaded if it finalizes with an error.\n\n      var events = \"load.zf.images error.zf.images\";\n      $(image).one(events, function () {\n        function me(event) {\n          // Unbind the event listeners. We're using 'one' but only one of the two events will have fired.\n          $(this).off(events, me);\n          singleImageLoaded();\n        }\n\n        return me;\n      }());\n      image.src = $(this).attr('src');\n    }\n  });\n\n  function singleImageLoaded() {\n    unloaded--;\n\n    if (unloaded === 0) {\n      callback();\n    }\n  }\n}","map":{"version":3,"sources":["packages/zurb:foundation-sites/js/foundation.util.imageLoader.js"],"names":["module","export","onImagesLoaded","$","watch","require","v","images","callback","self","unloaded","length","each","complete","naturalWidth","undefined","singleImageLoaded","image","Image","events","one","me","event","off","src","attr"],"mappings":"AAAA;;AAAAA,OAAOC,MAAP,CAAc;AAACC,kBAAe;AAAA,WAAIA,cAAJ;AAAA;AAAhB,CAAd;AAAmD,IAAIC,UAAJ;AAAMH,OAAOI,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAAA,uBAASC,CAAT,EAAW;AAACH,QAAEG,CAAF;AAAI;AAAhB,CAA/B,EAAiD,CAAjD;;AAIzD;;;;GAKA,SAASJ,cAAT,CAAwBK,MAAxB,EAAgCC,QAAhC,EAAyC;AACvC,MAAIC,OAAO,IAAX;AAAA,MACIC,WAAWH,OAAOI,MADtB;;AAGA,MAAID,aAAa,CAAjB,EAAoB;AAClBF;AACD;;AAEDD,SAAOK,IAAP,CAAY,YAAU;AACpB;AACA,QAAI,KAAKC,QAAL,IAAiB,KAAKC,YAAL,KAAsBC,SAA3C,EAAsD;AACpDC;AACD,KAFD,MAGK;AACH;AACA,UAAIC,QAAQ,IAAIC,KAAJ,EAAZ,CAFG,CAGH;;AACA,UAAIC,SAAS,gCAAb;AACAhB,QAAEc,KAAF,EAASG,GAAT,CAAaD,MAAb;AAAqB,iBAASE,EAAT,CAAYC,KAAZ,EAAkB;AACrC;AACAnB,YAAE,IAAF,EAAQoB,GAAR,CAAYJ,MAAZ,EAAoBE,EAApB;AACAL;AACD;;AAJD,eAA8BK,EAA9B;AAAA;AAKAJ,YAAMO,GAAN,GAAYrB,EAAE,IAAF,EAAQsB,IAAR,CAAa,KAAb,CAAZ;AACD;AACF,GAjBD;;AAmBA,WAAST,iBAAT,GAA6B;AAC3BN;;AACA,QAAIA,aAAa,CAAjB,EAAoB;AAClBF;AACD;AACF;AACF","file":"packages/zurb:foundation-sites/js/foundation.util.imageLoader.js.map","sourcesContent":["'use strict';\n\nimport $ from 'jquery';\n\n/**\n * Runs a callback function when images are fully loaded.\n * @param {Object} images - Image(s) to check if loaded.\n * @param {Func} callback - Function to execute when image is fully loaded.\n */\nfunction onImagesLoaded(images, callback){\n  var self = this,\n      unloaded = images.length;\n\n  if (unloaded === 0) {\n    callback();\n  }\n\n  images.each(function(){\n    // Check if image is loaded\n    if (this.complete && this.naturalWidth !== undefined) {\n      singleImageLoaded();\n    }\n    else {\n      // If the above check failed, simulate loading on detached element.\n      var image = new Image();\n      // Still count image as loaded if it finalizes with an error.\n      var events = \"load.zf.images error.zf.images\";\n      $(image).one(events, function me(event){\n        // Unbind the event listeners. We're using 'one' but only one of the two events will have fired.\n        $(this).off(events, me);\n        singleImageLoaded();\n      });\n      image.src = $(this).attr('src');\n    }\n  });\n\n  function singleImageLoaded() {\n    unloaded--;\n    if (unloaded === 0) {\n      callback();\n    }\n  }\n}\n\nexport { onImagesLoaded };\n"]},"hash":"2dfdf834a6d908fc5617f58f8be3c89d6070a832"}
