{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/dist/js/plugins/foundation.util.timerAndImageLoader.js","filenameRelative":"packages/zurb:foundation-sites/dist/js/plugins/foundation.util.timerAndImageLoader.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/dist/js/plugins/foundation.util.timerAndImageLoader.js.map","sourceFileName":"packages/zurb:foundation-sites/dist/js/plugins/foundation.util.timerAndImageLoader.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.util.timerAndImageLoader"},"ignored":false,"code":"'use strict';\n\n!function ($) {\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false; // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n\n        }\n\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true; //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  } /**\n     * Runs a callback function when images are fully loaded.\n     * @param {Object} images - Image(s) to check if loaded.\n     * @param {Func} callback - Function to execute when image is fully loaded.\n     */\n\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      // Check if image is loaded\n      if (this.complete || this.readyState === 4 || this.readyState === 'complete') {\n        singleImageLoaded();\n      } // Force load the image\n      else {\n          // fix for IE. See https://css-tricks.com/snippets/jquery/fixing-load-in-ie-for-cached-images/\n          var src = $(this).attr('src');\n          $(this).attr('src', src + (src.indexOf('?') >= 0 ? '&' : '?') + new Date().getTime());\n          $(this).one('load', function () {\n            singleImageLoaded();\n          });\n        }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);","map":{"version":3,"sources":["packages/zurb:foundation-sites/dist/js/plugins/foundation.util.timerAndImageLoader.js"],"names":["$","Timer","elem","options","cb","_this","duration","nameSpace","Object","keys","data","remain","start","timer","isPaused","restart","clearTimeout","Date","now","setTimeout","infinite","trigger","pause","end","onImagesLoaded","images","callback","self","unloaded","length","each","complete","readyState","singleImageLoaded","src","attr","indexOf","getTime","one","Foundation","jQuery"],"mappings":"AAAA;;AAEA,CAAC,UAAUA,CAAV,EAAa;AAEZ,WAASC,KAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8BC,EAA9B,EAAkC;AAChC,QAAIC,QAAQ,IAAZ;AAAA,QACIC,WAAWH,QAAQG,QADvB;AAAA,QAEI;AACJC,gBAAYC,OAAOC,IAAP,CAAYP,KAAKQ,IAAL,EAAZ,EAAyB,CAAzB,KAA+B,OAH3C;AAAA,QAIIC,SAAS,CAAC,CAJd;AAAA,QAKIC,KALJ;AAAA,QAMIC,KANJ;;AAQA,SAAKC,QAAL,GAAgB,KAAhB;;AAEA,SAAKC,OAAL,GAAe,YAAY;AACzBJ,eAAS,CAAC,CAAV;AACAK,mBAAaH,KAAb;AACA,WAAKD,KAAL;AACD,KAJD;;AAMA,SAAKA,KAAL,GAAa,YAAY;AACvB,WAAKE,QAAL,GAAgB,KAAhB,CADuB,CAEvB;;AACAE,mBAAaH,KAAb;AACAF,eAASA,UAAU,CAAV,GAAcL,QAAd,GAAyBK,MAAlC;AACAT,WAAKQ,IAAL,CAAU,QAAV,EAAoB,KAApB;AACAE,cAAQK,KAAKC,GAAL,EAAR;AACAL,cAAQM,WAAW,YAAY;AAC7B,YAAIhB,QAAQiB,QAAZ,EAAsB;AACpBf,gBAAMU,OAAN,GADoB,CACH;;AAClB;;AACD,YAAIX,MAAM,OAAOA,EAAP,KAAc,UAAxB,EAAoC;AAClCA;AACD;AACF,OAPO,EAOLO,MAPK,CAAR;AAQAT,WAAKmB,OAAL,CAAa,mBAAmBd,SAAhC;AACD,KAhBD;;AAkBA,SAAKe,KAAL,GAAa,YAAY;AACvB,WAAKR,QAAL,GAAgB,IAAhB,CADuB,CAEvB;;AACAE,mBAAaH,KAAb;AACAX,WAAKQ,IAAL,CAAU,QAAV,EAAoB,IAApB;AACA,UAAIa,MAAMN,KAAKC,GAAL,EAAV;AACAP,eAASA,UAAUY,MAAMX,KAAhB,CAAT;AACAV,WAAKmB,OAAL,CAAa,oBAAoBd,SAAjC;AACD,KARD;AASD,GA9CW,CAgDZ;;;;;;AAKA,WAASiB,cAAT,CAAwBC,MAAxB,EAAgCC,QAAhC,EAA0C;AACxC,QAAIC,OAAO,IAAX;AAAA,QACIC,WAAWH,OAAOI,MADtB;;AAGA,QAAID,aAAa,CAAjB,EAAoB;AAClBF;AACD;;AAEDD,WAAOK,IAAP,CAAY,YAAY;AACtB;AACA,UAAI,KAAKC,QAAL,IAAiB,KAAKC,UAAL,KAAoB,CAArC,IAA0C,KAAKA,UAAL,KAAoB,UAAlE,EAA8E;AAC5EC;AACD,OAFD,CAGA;AAHA,WAIK;AACD;AACA,cAAIC,MAAMlC,EAAE,IAAF,EAAQmC,IAAR,CAAa,KAAb,CAAV;AACAnC,YAAE,IAAF,EAAQmC,IAAR,CAAa,KAAb,EAAoBD,OAAOA,IAAIE,OAAJ,CAAY,GAAZ,KAAoB,CAApB,GAAwB,GAAxB,GAA8B,GAArC,IAA4C,IAAInB,IAAJ,GAAWoB,OAAX,EAAhE;AACArC,YAAE,IAAF,EAAQsC,GAAR,CAAY,MAAZ,EAAoB,YAAY;AAC9BL;AACD,WAFD;AAGD;AACJ,KAdD;;AAgBA,aAASA,iBAAT,GAA6B;AAC3BL;;AACA,UAAIA,aAAa,CAAjB,EAAoB;AAClBF;AACD;AACF;AACF;;AAEDa,aAAWtC,KAAX,GAAmBA,KAAnB;AACAsC,aAAWf,cAAX,GAA4BA,cAA5B;AACD,CAvFA,CAuFCgB,MAvFD,CAAD","file":"packages/zurb:foundation-sites/dist/js/plugins/foundation.util.timerAndImageLoader.js.map","sourcesContent":["'use strict';\n\n!function ($) {\n\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false;\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true;\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  }\n\n  /**\n   * Runs a callback function when images are fully loaded.\n   * @param {Object} images - Image(s) to check if loaded.\n   * @param {Func} callback - Function to execute when image is fully loaded.\n   */\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      // Check if image is loaded\n      if (this.complete || this.readyState === 4 || this.readyState === 'complete') {\n        singleImageLoaded();\n      }\n      // Force load the image\n      else {\n          // fix for IE. See https://css-tricks.com/snippets/jquery/fixing-load-in-ie-for-cached-images/\n          var src = $(this).attr('src');\n          $(this).attr('src', src + (src.indexOf('?') >= 0 ? '&' : '?') + new Date().getTime());\n          $(this).one('load', function () {\n            singleImageLoaded();\n          });\n        }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);"]},"hash":"a9231efd65c32fe557f81afcb47cbbe6d36ed311"}
