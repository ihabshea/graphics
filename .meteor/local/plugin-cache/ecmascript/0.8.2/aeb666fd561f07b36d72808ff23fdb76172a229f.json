{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"jquery","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"$"}]},{"source":"./foundation.util.keyboard","imported":["Keyboard"],"specifiers":[{"kind":"named","imported":"Keyboard","local":"Keyboard"}]},{"source":"./foundation.util.mediaQuery","imported":["MediaQuery"],"specifiers":[{"kind":"named","imported":"MediaQuery","local":"MediaQuery"}]},{"source":"./foundation.util.motion","imported":["Motion"],"specifiers":[{"kind":"named","imported":"Motion","local":"Motion"}]},{"source":"./foundation.plugin","imported":["Plugin"],"specifiers":[{"kind":"named","imported":"Plugin","local":"Plugin"}]},{"source":"./foundation.util.triggers","imported":["Triggers"],"specifiers":[{"kind":"named","imported":"Triggers","local":"Triggers"}]}],"exports":{"exported":["Reveal"],"specifiers":[{"kind":"local","local":"Reveal","exported":"Reveal"}]}}},"options":{"filename":"packages/zurb:foundation-sites/js/foundation.reveal.js","filenameRelative":"packages/zurb:foundation-sites/js/foundation.reveal.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/js/foundation.reveal.js.map","sourceFileName":"packages/zurb:foundation-sites/js/foundation.reveal.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.reveal"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar module1 = module;\nmodule1.export({\n  Reveal: function () {\n    return Reveal;\n  }\n});\nvar $ = void 0;\nmodule1.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 0);\nvar Keyboard = void 0;\nmodule1.watch(require(\"./foundation.util.keyboard\"), {\n  Keyboard: function (v) {\n    Keyboard = v;\n  }\n}, 1);\nvar MediaQuery = void 0;\nmodule1.watch(require(\"./foundation.util.mediaQuery\"), {\n  MediaQuery: function (v) {\n    MediaQuery = v;\n  }\n}, 2);\nvar Motion = void 0;\nmodule1.watch(require(\"./foundation.util.motion\"), {\n  Motion: function (v) {\n    Motion = v;\n  }\n}, 3);\nvar Plugin = void 0;\nmodule1.watch(require(\"./foundation.plugin\"), {\n  Plugin: function (v) {\n    Plugin = v;\n  }\n}, 4);\nvar Triggers = void 0;\nmodule1.watch(require(\"./foundation.util.triggers\"), {\n  Triggers: function (v) {\n    Triggers = v;\n  }\n}, 5);\n\n/**\n * Reveal module.\n * @module foundation.reveal\n * @requires foundation.util.keyboard\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion if using animations\n */var Reveal = function (_Plugin) {\n  (0, _inherits3.default)(Reveal, _Plugin);\n\n  function Reveal() {\n    (0, _classCallCheck3.default)(this, Reveal);\n    return (0, _possibleConstructorReturn3.default)(this, _Plugin.apply(this, arguments));\n  }\n\n  /**\n   * Creates a new instance of Reveal.\n   * @class\n   * @name Reveal\n   * @param {jQuery} element - jQuery object to use for the modal.\n   * @param {Object} options - optional parameters.\n   */Reveal.prototype._setup = function () {\n    function _setup(element, options) {\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this.className = 'Reveal'; // ie9 back compat\n\n      this._init(); // Triggers init is idempotent, just need to make sure it is initialized\n\n\n      Triggers.init($);\n      Keyboard.register('Reveal', {\n        'ESCAPE': 'close'\n      });\n    }\n\n    return _setup;\n  }(); /**\n        * Initializes the modal by adding the overlay and close buttons, (if selected).\n        * @private\n        */\n\n  Reveal.prototype._init = function () {\n    function _init() {\n      MediaQuery._init();\n\n      this.id = this.$element.attr('id');\n      this.isActive = false;\n      this.cached = {\n        mq: MediaQuery.current\n      };\n      this.isMobile = mobileSniff();\n      this.$anchor = $(\"[data-open=\\\"\" + this.id + \"\\\"]\").length ? $(\"[data-open=\\\"\" + this.id + \"\\\"]\") : $(\"[data-toggle=\\\"\" + this.id + \"\\\"]\");\n      this.$anchor.attr({\n        'aria-controls': this.id,\n        'aria-haspopup': true,\n        'tabindex': 0\n      });\n\n      if (this.options.fullScreen || this.$element.hasClass('full')) {\n        this.options.fullScreen = true;\n        this.options.overlay = false;\n      }\n\n      if (this.options.overlay && !this.$overlay) {\n        this.$overlay = this._makeOverlay(this.id);\n      }\n\n      this.$element.attr({\n        'role': 'dialog',\n        'aria-hidden': true,\n        'data-yeti-box': this.id,\n        'data-resize': this.id\n      });\n\n      if (this.$overlay) {\n        this.$element.detach().appendTo(this.$overlay);\n      } else {\n        this.$element.detach().appendTo($(this.options.appendTo));\n        this.$element.addClass('without-overlay');\n      }\n\n      this._events();\n\n      if (this.options.deepLink && window.location.hash === \"#\" + this.id) {\n        $(window).one('load.zf.reveal', this.open.bind(this));\n      }\n    }\n\n    return _init;\n  }(); /**\n        * Creates an overlay div to display behind the modal.\n        * @private\n        */\n\n  Reveal.prototype._makeOverlay = function () {\n    function _makeOverlay() {\n      var additionalOverlayClasses = '';\n\n      if (this.options.additionalOverlayClasses) {\n        additionalOverlayClasses = ' ' + this.options.additionalOverlayClasses;\n      }\n\n      return $('<div></div>').addClass('reveal-overlay' + additionalOverlayClasses).appendTo(this.options.appendTo);\n    }\n\n    return _makeOverlay;\n  }(); /**\n        * Updates position of modal\n        * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n        * @private\n        */\n\n  Reveal.prototype._updatePosition = function () {\n    function _updatePosition() {\n      var width = this.$element.outerWidth();\n      var outerWidth = $(window).width();\n      var height = this.$element.outerHeight();\n      var outerHeight = $(window).height();\n      var left, top;\n\n      if (this.options.hOffset === 'auto') {\n        left = parseInt((outerWidth - width) / 2, 10);\n      } else {\n        left = parseInt(this.options.hOffset, 10);\n      }\n\n      if (this.options.vOffset === 'auto') {\n        if (height > outerHeight) {\n          top = parseInt(Math.min(100, outerHeight / 10), 10);\n        } else {\n          top = parseInt((outerHeight - height) / 4, 10);\n        }\n      } else {\n        top = parseInt(this.options.vOffset, 10);\n      }\n\n      this.$element.css({\n        top: top + 'px'\n      }); // only worry about left if we don't have an overlay or we havea  horizontal offset,\n      // otherwise we're perfectly in the middle\n\n      if (!this.$overlay || this.options.hOffset !== 'auto') {\n        this.$element.css({\n          left: left + 'px'\n        });\n        this.$element.css({\n          margin: '0px'\n        });\n      }\n    }\n\n    return _updatePosition;\n  }(); /**\n        * Adds event handlers for the modal.\n        * @private\n        */\n\n  Reveal.prototype._events = function () {\n    function _events() {\n      var _this3 = this;\n\n      var _this = this;\n\n      this.$element.on({\n        'open.zf.trigger': this.open.bind(this),\n        'close.zf.trigger': function (event, $element) {\n          if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\n            // only close reveal when it's explicitly called\n            return _this3.close.apply(_this3);\n          }\n        },\n        'toggle.zf.trigger': this.toggle.bind(this),\n        'resizeme.zf.trigger': function () {\n          _this._updatePosition();\n        }\n      });\n\n      if (this.options.closeOnClick && this.options.overlay) {\n        this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n          if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n            return;\n          }\n\n          _this.close();\n        });\n      }\n\n      if (this.options.deepLink) {\n        $(window).on(\"popstate.zf.reveal:\" + this.id, this._handleState.bind(this));\n      }\n    }\n\n    return _events;\n  }(); /**\n        * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n        * @private\n        */\n\n  Reveal.prototype._handleState = function () {\n    function _handleState(e) {\n      if (window.location.hash === '#' + this.id && !this.isActive) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n\n    return _handleState;\n  }(); /**\n        * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n        * @function\n        * @fires Reveal#closeme\n        * @fires Reveal#open\n        */\n\n  Reveal.prototype.open = function () {\n    function open() {\n      var _this4 = this;\n\n      // either update or replace browser history\n      if (this.options.deepLink) {\n        var hash = \"#\" + this.id;\n\n        if (window.history.pushState) {\n          if (this.options.updateHistory) {\n            window.history.pushState({}, '', hash);\n          } else {\n            window.history.replaceState({}, '', hash);\n          }\n        } else {\n          window.location.hash = hash;\n        }\n      }\n\n      this.isActive = true; // Make elements invisible, but remove display: none so we can get size and positioning\n\n      this.$element.css({\n        'visibility': 'hidden'\n      }).show().scrollTop(0);\n\n      if (this.options.overlay) {\n        this.$overlay.css({\n          'visibility': 'hidden'\n        }).show();\n      }\n\n      this._updatePosition();\n\n      this.$element.hide().css({\n        'visibility': ''\n      });\n\n      if (this.$overlay) {\n        this.$overlay.css({\n          'visibility': ''\n        }).hide();\n\n        if (this.$element.hasClass('fast')) {\n          this.$overlay.addClass('fast');\n        } else if (this.$element.hasClass('slow')) {\n          this.$overlay.addClass('slow');\n        }\n      }\n\n      if (!this.options.multipleOpened) {\n        /**\n         * Fires immediately before the modal opens.\n         * Closes any other modals that are currently open\n         * @event Reveal#closeme\n         */this.$element.trigger('closeme.zf.reveal', this.id);\n      }\n\n      var _this = this;\n\n      function addRevealOpenClasses() {\n        if (_this.isMobile) {\n          if (!_this.originalScrollPos) {\n            _this.originalScrollPos = window.pageYOffset;\n          }\n\n          $('html, body').addClass('is-reveal-open');\n        } else {\n          $('body').addClass('is-reveal-open');\n        }\n      } // Motion UI method of reveal\n\n\n      if (this.options.animationIn) {\n        var afterAnimation = function () {\n          _this.$element.attr({\n            'aria-hidden': false,\n            'tabindex': -1\n          }).focus();\n\n          addRevealOpenClasses();\n          Keyboard.trapFocus(_this.$element);\n        };\n\n        if (this.options.overlay) {\n          Motion.animateIn(this.$overlay, 'fade-in');\n        }\n\n        Motion.animateIn(this.$element, this.options.animationIn, function () {\n          if (_this4.$element) {\n            // protect against object having been removed\n            _this4.focusableElements = Keyboard.findFocusable(_this4.$element);\n            afterAnimation();\n          }\n        });\n      } // jQuery method of reveal\n      else {\n          if (this.options.overlay) {\n            this.$overlay.show(0);\n          }\n\n          this.$element.show(this.options.showDelay);\n        } // handle accessibility\n\n\n      this.$element.attr({\n        'aria-hidden': false,\n        'tabindex': -1\n      }).focus();\n      Keyboard.trapFocus(this.$element);\n      addRevealOpenClasses();\n\n      this._extraHandlers(); /**\n                              * Fires when the modal has successfully opened.\n                              * @event Reveal#open\n                              */\n\n      this.$element.trigger('open.zf.reveal');\n    }\n\n    return open;\n  }(); /**\n        * Adds extra event handlers for the body and window if necessary.\n        * @private\n        */\n\n  Reveal.prototype._extraHandlers = function () {\n    function _extraHandlers() {\n      var _this = this;\n\n      if (!this.$element) {\n        return;\n      } // If we're in the middle of cleanup, don't freak out\n\n\n      this.focusableElements = Keyboard.findFocusable(this.$element);\n\n      if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n        $('body').on('click.zf.reveal', function (e) {\n          if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n            return;\n          }\n\n          _this.close();\n        });\n      }\n\n      if (this.options.closeOnEsc) {\n        $(window).on('keydown.zf.reveal', function (e) {\n          Keyboard.handleKey(e, 'Reveal', {\n            close: function () {\n              if (_this.options.closeOnEsc) {\n                _this.close();\n              }\n            }\n          });\n        });\n      }\n    }\n\n    return _extraHandlers;\n  }(); /**\n        * Closes the modal.\n        * @function\n        * @fires Reveal#closed\n        */\n\n  Reveal.prototype.close = function () {\n    function close() {\n      if (!this.isActive || !this.$element.is(':visible')) {\n        return false;\n      }\n\n      var _this = this; // Motion UI method of hiding\n\n\n      if (this.options.animationOut) {\n        if (this.options.overlay) {\n          Motion.animateOut(this.$overlay, 'fade-out');\n        }\n\n        Motion.animateOut(this.$element, this.options.animationOut, finishUp);\n      } // jQuery method of hiding\n      else {\n          this.$element.hide(this.options.hideDelay);\n\n          if (this.options.overlay) {\n            this.$overlay.hide(0, finishUp);\n          } else {\n            finishUp();\n          }\n        } // Conditionals to remove extra event listeners added on open\n\n\n      if (this.options.closeOnEsc) {\n        $(window).off('keydown.zf.reveal');\n      }\n\n      if (!this.options.overlay && this.options.closeOnClick) {\n        $('body').off('click.zf.reveal');\n      }\n\n      this.$element.off('keydown.zf.reveal');\n\n      function finishUp() {\n        if (_this.isMobile) {\n          if ($('.reveal:visible').length === 0) {\n            $('html, body').removeClass('is-reveal-open');\n          }\n\n          if (_this.originalScrollPos) {\n            $('body').scrollTop(_this.originalScrollPos);\n            _this.originalScrollPos = null;\n          }\n        } else {\n          if ($('.reveal:visible').length === 0) {\n            $('body').removeClass('is-reveal-open');\n          }\n        }\n\n        Keyboard.releaseFocus(_this.$element);\n\n        _this.$element.attr('aria-hidden', true); /**\n                                                  * Fires when the modal is done closing.\n                                                  * @event Reveal#closed\n                                                  */\n\n        _this.$element.trigger('closed.zf.reveal');\n      } /**\n        * Resets the modal content\n        * This prevents a running video to keep going in the background\n        */\n\n      if (this.options.resetOnClose) {\n        this.$element.html(this.$element.html());\n      }\n\n      this.isActive = false;\n\n      if (_this.options.deepLink) {\n        if (window.history.replaceState) {\n          window.history.replaceState('', document.title, window.location.href.replace(\"#\" + this.id, ''));\n        } else {\n          window.location.hash = '';\n        }\n      }\n\n      this.$anchor.focus();\n    }\n\n    return close;\n  }(); /**\n        * Toggles the open/closed state of a modal.\n        * @function\n        */\n\n  Reveal.prototype.toggle = function () {\n    function toggle() {\n      if (this.isActive) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n\n    return toggle;\n  }();\n\n  /**\n   * Destroys an instance of a modal.\n   * @function\n   */Reveal.prototype._destroy = function () {\n    function _destroy() {\n      if (this.options.overlay) {\n        this.$element.appendTo($(this.options.appendTo)); // move $element outside of $overlay to prevent error unregisterPlugin()\n\n        this.$overlay.hide().off().remove();\n      }\n\n      this.$element.hide().off();\n      this.$anchor.off('.zf');\n      $(window).off(\".zf.reveal:\" + this.id);\n    }\n\n    return _destroy;\n  }();\n\n  return Reveal;\n}(Plugin);\n\nReveal.defaults = {\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @type {string}\n   * @default ''\n   */animationIn: '',\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @type {string}\n   * @default ''\n   */animationOut: '',\n  /**\n   * Time, in ms, to delay the opening of a modal after a click if no animation used.\n   * @option\n   * @type {number}\n   * @default 0\n   */showDelay: 0,\n  /**\n   * Time, in ms, to delay the closing of a modal after a click if no animation used.\n   * @option\n   * @type {number}\n   * @default 0\n   */hideDelay: 0,\n  /**\n   * Allows a click on the body/overlay to close the modal.\n   * @option\n   * @type {boolean}\n   * @default true\n   */closeOnClick: true,\n  /**\n   * Allows the modal to close if the user presses the `ESCAPE` key.\n   * @option\n   * @type {boolean}\n   * @default true\n   */closeOnEsc: true,\n  /**\n   * If true, allows multiple modals to be displayed at once.\n   * @option\n   * @type {boolean}\n   * @default false\n   */multipleOpened: false,\n  /**\n   * Distance, in pixels, the modal should push down from the top of the screen.\n   * @option\n   * @type {number|string}\n   * @default auto\n   */vOffset: 'auto',\n  /**\n   * Distance, in pixels, the modal should push in from the side of the screen.\n   * @option\n   * @type {number|string}\n   * @default auto\n   */hOffset: 'auto',\n  /**\n   * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n   * @option\n   * @type {boolean}\n   * @default false\n   */fullScreen: false,\n  /**\n   * Percentage of screen height the modal should push up from the bottom of the view.\n   * @option\n   * @type {number}\n   * @default 10\n   */btmOffsetPct: 10,\n  /**\n   * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n   * @option\n   * @type {boolean}\n   * @default true\n   */overlay: true,\n  /**\n   * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n   * @option\n   * @type {boolean}\n   * @default false\n   */resetOnClose: false,\n  /**\n   * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n   * @option\n   * @type {boolean}\n   * @default false\n   */deepLink: false,\n  /**\n   * Update the browser history with the open modal\n   * @option\n   * @default false\n   */updateHistory: false,\n  /**\n  * Allows the modal to append to custom div.\n  * @option\n  * @type {string}\n  * @default \"body\"\n  */appendTo: \"body\",\n  /**\n   * Allows adding additional class names to the reveal overlay.\n   * @option\n   * @type {string}\n   * @default ''\n   */additionalOverlayClasses: ''\n};\n\nfunction iPhoneSniff() {\n  return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n  );\n}\n\nfunction androidSniff() {\n  return (/Android/.test(window.navigator.userAgent)\n  );\n}\n\nfunction mobileSniff() {\n  return iPhoneSniff() || androidSniff();\n}","map":{"version":3,"sources":["packages/zurb:foundation-sites/js/foundation.reveal.js"],"names":["module1","module","export","Reveal","$","watch","require","v","Keyboard","MediaQuery","Motion","Plugin","Triggers","_setup","element","options","$element","extend","defaults","data","className","_init","init","register","id","attr","isActive","cached","mq","current","isMobile","mobileSniff","$anchor","length","fullScreen","hasClass","overlay","$overlay","_makeOverlay","detach","appendTo","addClass","_events","deepLink","window","location","hash","one","open","bind","additionalOverlayClasses","_updatePosition","width","outerWidth","height","outerHeight","left","top","hOffset","parseInt","vOffset","Math","min","css","margin","_this","on","event","target","parents","close","apply","toggle","closeOnClick","off","e","contains","document","_handleState","history","pushState","updateHistory","replaceState","show","scrollTop","hide","multipleOpened","trigger","addRevealOpenClasses","originalScrollPos","pageYOffset","animationIn","afterAnimation","focus","trapFocus","animateIn","focusableElements","findFocusable","showDelay","_extraHandlers","closeOnEsc","handleKey","is","animationOut","animateOut","finishUp","hideDelay","removeClass","releaseFocus","resetOnClose","html","title","href","replace","_destroy","remove","btmOffsetPct","iPhoneSniff","test","navigator","userAgent","androidSniff"],"mappings":"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","file":"packages/zurb:foundation-sites/js/foundation.reveal.js.map","sourcesContent":["'use strict';\n\nimport $ from 'jquery';\nimport { Keyboard } from './foundation.util.keyboard';\nimport { MediaQuery } from './foundation.util.mediaQuery';\nimport { Motion } from './foundation.util.motion';\nimport { Plugin } from './foundation.plugin';\nimport { Triggers } from './foundation.util.triggers';\n\n/**\n * Reveal module.\n * @module foundation.reveal\n * @requires foundation.util.keyboard\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion if using animations\n */\n\nclass Reveal extends Plugin {\n  /**\n   * Creates a new instance of Reveal.\n   * @class\n   * @name Reveal\n   * @param {jQuery} element - jQuery object to use for the modal.\n   * @param {Object} options - optional parameters.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n    this.className = 'Reveal'; // ie9 back compat\n    this._init();\n\n    // Triggers init is idempotent, just need to make sure it is initialized\n    Triggers.init($);\n\n    Keyboard.register('Reveal', {\n      'ESCAPE': 'close',\n    });\n  }\n\n  /**\n   * Initializes the modal by adding the overlay and close buttons, (if selected).\n   * @private\n   */\n  _init() {\n    MediaQuery._init();\n    this.id = this.$element.attr('id');\n    this.isActive = false;\n    this.cached = {mq: MediaQuery.current};\n    this.isMobile = mobileSniff();\n\n    this.$anchor = $(`[data-open=\"${this.id}\"]`).length ? $(`[data-open=\"${this.id}\"]`) : $(`[data-toggle=\"${this.id}\"]`);\n    this.$anchor.attr({\n      'aria-controls': this.id,\n      'aria-haspopup': true,\n      'tabindex': 0\n    });\n\n    if (this.options.fullScreen || this.$element.hasClass('full')) {\n      this.options.fullScreen = true;\n      this.options.overlay = false;\n    }\n    if (this.options.overlay && !this.$overlay) {\n      this.$overlay = this._makeOverlay(this.id);\n    }\n\n    this.$element.attr({\n        'role': 'dialog',\n        'aria-hidden': true,\n        'data-yeti-box': this.id,\n        'data-resize': this.id\n    });\n\n    if(this.$overlay) {\n      this.$element.detach().appendTo(this.$overlay);\n    } else {\n      this.$element.detach().appendTo($(this.options.appendTo));\n      this.$element.addClass('without-overlay');\n    }\n    this._events();\n    if (this.options.deepLink && window.location.hash === ( `#${this.id}`)) {\n      $(window).one('load.zf.reveal', this.open.bind(this));\n    }\n  }\n\n  /**\n   * Creates an overlay div to display behind the modal.\n   * @private\n   */\n  _makeOverlay() {\n    var additionalOverlayClasses = '';\n\n    if (this.options.additionalOverlayClasses) {\n      additionalOverlayClasses = ' ' + this.options.additionalOverlayClasses;\n    }\n\n    return $('<div></div>')\n      .addClass('reveal-overlay' + additionalOverlayClasses)\n      .appendTo(this.options.appendTo);\n  }\n\n  /**\n   * Updates position of modal\n   * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n   * @private\n   */\n  _updatePosition() {\n    var width = this.$element.outerWidth();\n    var outerWidth = $(window).width();\n    var height = this.$element.outerHeight();\n    var outerHeight = $(window).height();\n    var left, top;\n    if (this.options.hOffset === 'auto') {\n      left = parseInt((outerWidth - width) / 2, 10);\n    } else {\n      left = parseInt(this.options.hOffset, 10);\n    }\n    if (this.options.vOffset === 'auto') {\n      if (height > outerHeight) {\n        top = parseInt(Math.min(100, outerHeight / 10), 10);\n      } else {\n        top = parseInt((outerHeight - height) / 4, 10);\n      }\n    } else {\n      top = parseInt(this.options.vOffset, 10);\n    }\n    this.$element.css({top: top + 'px'});\n    // only worry about left if we don't have an overlay or we havea  horizontal offset,\n    // otherwise we're perfectly in the middle\n    if(!this.$overlay || (this.options.hOffset !== 'auto')) {\n      this.$element.css({left: left + 'px'});\n      this.$element.css({margin: '0px'});\n    }\n\n  }\n\n  /**\n   * Adds event handlers for the modal.\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': (event, $element) => {\n        if ((event.target === _this.$element[0]) ||\n            ($(event.target).parents('[data-closable]')[0] === $element)) { // only close reveal when it's explicitly called\n          return this.close.apply(this);\n        }\n      },\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': function() {\n        _this._updatePosition();\n      }\n    });\n\n    if (this.options.closeOnClick && this.options.overlay) {\n      this.$overlay.off('.zf.reveal').on('click.zf.reveal', function(e) {\n        if (e.target === _this.$element[0] ||\n          $.contains(_this.$element[0], e.target) ||\n            !$.contains(document, e.target)) {\n              return;\n        }\n        _this.close();\n      });\n    }\n    if (this.options.deepLink) {\n      $(window).on(`popstate.zf.reveal:${this.id}`, this._handleState.bind(this));\n    }\n  }\n\n  /**\n   * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n   * @private\n   */\n  _handleState(e) {\n    if(window.location.hash === ( '#' + this.id) && !this.isActive){ this.open(); }\n    else{ this.close(); }\n  }\n\n\n  /**\n   * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n   * @function\n   * @fires Reveal#closeme\n   * @fires Reveal#open\n   */\n  open() {\n    // either update or replace browser history\n    if (this.options.deepLink) {\n      var hash = `#${this.id}`;\n\n      if (window.history.pushState) {\n        if (this.options.updateHistory) {\n          window.history.pushState({}, '', hash);\n        } else {\n          window.history.replaceState({}, '', hash);\n        }\n      } else {\n        window.location.hash = hash;\n      }\n    }\n\n    this.isActive = true;\n\n    // Make elements invisible, but remove display: none so we can get size and positioning\n    this.$element\n        .css({ 'visibility': 'hidden' })\n        .show()\n        .scrollTop(0);\n    if (this.options.overlay) {\n      this.$overlay.css({'visibility': 'hidden'}).show();\n    }\n\n    this._updatePosition();\n\n    this.$element\n      .hide()\n      .css({ 'visibility': '' });\n\n    if(this.$overlay) {\n      this.$overlay.css({'visibility': ''}).hide();\n      if(this.$element.hasClass('fast')) {\n        this.$overlay.addClass('fast');\n      } else if (this.$element.hasClass('slow')) {\n        this.$overlay.addClass('slow');\n      }\n    }\n\n\n    if (!this.options.multipleOpened) {\n      /**\n       * Fires immediately before the modal opens.\n       * Closes any other modals that are currently open\n       * @event Reveal#closeme\n       */\n      this.$element.trigger('closeme.zf.reveal', this.id);\n    }\n\n    var _this = this;\n\n    function addRevealOpenClasses() {\n      if (_this.isMobile) {\n        if(!_this.originalScrollPos) {\n          _this.originalScrollPos = window.pageYOffset;\n        }\n        $('html, body').addClass('is-reveal-open');\n      }\n      else {\n        $('body').addClass('is-reveal-open');\n      }\n    }\n    // Motion UI method of reveal\n    if (this.options.animationIn) {\n      function afterAnimation(){\n        _this.$element\n          .attr({\n            'aria-hidden': false,\n            'tabindex': -1\n          })\n          .focus();\n        addRevealOpenClasses();\n        Keyboard.trapFocus(_this.$element);\n      }\n      if (this.options.overlay) {\n        Motion.animateIn(this.$overlay, 'fade-in');\n      }\n      Motion.animateIn(this.$element, this.options.animationIn, () => {\n        if(this.$element) { // protect against object having been removed\n          this.focusableElements = Keyboard.findFocusable(this.$element);\n          afterAnimation();\n        }\n      });\n    }\n    // jQuery method of reveal\n    else {\n      if (this.options.overlay) {\n        this.$overlay.show(0);\n      }\n      this.$element.show(this.options.showDelay);\n    }\n\n    // handle accessibility\n    this.$element\n      .attr({\n        'aria-hidden': false,\n        'tabindex': -1\n      })\n      .focus();\n    Keyboard.trapFocus(this.$element);\n\n    addRevealOpenClasses();\n\n    this._extraHandlers();\n\n    /**\n     * Fires when the modal has successfully opened.\n     * @event Reveal#open\n     */\n    this.$element.trigger('open.zf.reveal');\n  }\n\n  /**\n   * Adds extra event handlers for the body and window if necessary.\n   * @private\n   */\n  _extraHandlers() {\n    var _this = this;\n    if(!this.$element) { return; } // If we're in the middle of cleanup, don't freak out\n    this.focusableElements = Keyboard.findFocusable(this.$element);\n\n    if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n      $('body').on('click.zf.reveal', function(e) {\n        if (e.target === _this.$element[0] ||\n          $.contains(_this.$element[0], e.target) ||\n            !$.contains(document, e.target)) { return; }\n        _this.close();\n      });\n    }\n\n    if (this.options.closeOnEsc) {\n      $(window).on('keydown.zf.reveal', function(e) {\n        Keyboard.handleKey(e, 'Reveal', {\n          close: function() {\n            if (_this.options.closeOnEsc) {\n              _this.close();\n            }\n          }\n        });\n      });\n    }\n  }\n\n  /**\n   * Closes the modal.\n   * @function\n   * @fires Reveal#closed\n   */\n  close() {\n    if (!this.isActive || !this.$element.is(':visible')) {\n      return false;\n    }\n    var _this = this;\n\n    // Motion UI method of hiding\n    if (this.options.animationOut) {\n      if (this.options.overlay) {\n        Motion.animateOut(this.$overlay, 'fade-out');\n      }\n\n      Motion.animateOut(this.$element, this.options.animationOut, finishUp);\n    }\n    // jQuery method of hiding\n    else {\n      this.$element.hide(this.options.hideDelay);\n\n      if (this.options.overlay) {\n        this.$overlay.hide(0, finishUp);\n      }\n      else {\n        finishUp();\n      }\n    }\n\n    // Conditionals to remove extra event listeners added on open\n    if (this.options.closeOnEsc) {\n      $(window).off('keydown.zf.reveal');\n    }\n\n    if (!this.options.overlay && this.options.closeOnClick) {\n      $('body').off('click.zf.reveal');\n    }\n\n    this.$element.off('keydown.zf.reveal');\n\n    function finishUp() {\n      if (_this.isMobile) {\n        if ($('.reveal:visible').length === 0) {\n          $('html, body').removeClass('is-reveal-open');\n        }\n        if(_this.originalScrollPos) {\n          $('body').scrollTop(_this.originalScrollPos);\n          _this.originalScrollPos = null;\n        }\n      }\n      else {\n        if ($('.reveal:visible').length  === 0) {\n          $('body').removeClass('is-reveal-open');\n        }\n      }\n\n\n      Keyboard.releaseFocus(_this.$element);\n\n      _this.$element.attr('aria-hidden', true);\n\n      /**\n      * Fires when the modal is done closing.\n      * @event Reveal#closed\n      */\n      _this.$element.trigger('closed.zf.reveal');\n    }\n\n    /**\n    * Resets the modal content\n    * This prevents a running video to keep going in the background\n    */\n    if (this.options.resetOnClose) {\n      this.$element.html(this.$element.html());\n    }\n\n    this.isActive = false;\n     if (_this.options.deepLink) {\n       if (window.history.replaceState) {\n         window.history.replaceState('', document.title, window.location.href.replace(`#${this.id}`, ''));\n       } else {\n         window.location.hash = '';\n       }\n     }\n\n    this.$anchor.focus();\n  }\n\n  /**\n   * Toggles the open/closed state of a modal.\n   * @function\n   */\n  toggle() {\n    if (this.isActive) {\n      this.close();\n    } else {\n      this.open();\n    }\n  };\n\n  /**\n   * Destroys an instance of a modal.\n   * @function\n   */\n  _destroy() {\n    if (this.options.overlay) {\n      this.$element.appendTo($(this.options.appendTo)); // move $element outside of $overlay to prevent error unregisterPlugin()\n      this.$overlay.hide().off().remove();\n    }\n    this.$element.hide().off();\n    this.$anchor.off('.zf');\n    $(window).off(`.zf.reveal:${this.id}`);\n  };\n}\n\nReveal.defaults = {\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  animationIn: '',\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  animationOut: '',\n  /**\n   * Time, in ms, to delay the opening of a modal after a click if no animation used.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  showDelay: 0,\n  /**\n   * Time, in ms, to delay the closing of a modal after a click if no animation used.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  hideDelay: 0,\n  /**\n   * Allows a click on the body/overlay to close the modal.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  closeOnClick: true,\n  /**\n   * Allows the modal to close if the user presses the `ESCAPE` key.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  closeOnEsc: true,\n  /**\n   * If true, allows multiple modals to be displayed at once.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  multipleOpened: false,\n  /**\n   * Distance, in pixels, the modal should push down from the top of the screen.\n   * @option\n   * @type {number|string}\n   * @default auto\n   */\n  vOffset: 'auto',\n  /**\n   * Distance, in pixels, the modal should push in from the side of the screen.\n   * @option\n   * @type {number|string}\n   * @default auto\n   */\n  hOffset: 'auto',\n  /**\n   * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  fullScreen: false,\n  /**\n   * Percentage of screen height the modal should push up from the bottom of the view.\n   * @option\n   * @type {number}\n   * @default 10\n   */\n  btmOffsetPct: 10,\n  /**\n   * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  overlay: true,\n  /**\n   * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  resetOnClose: false,\n  /**\n   * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  deepLink: false,\n  /**\n   * Update the browser history with the open modal\n   * @option\n   * @default false\n   */\n  updateHistory: false,\n    /**\n   * Allows the modal to append to custom div.\n   * @option\n   * @type {string}\n   * @default \"body\"\n   */\n  appendTo: \"body\",\n  /**\n   * Allows adding additional class names to the reveal overlay.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  additionalOverlayClasses: ''\n};\n\nfunction iPhoneSniff() {\n  return /iP(ad|hone|od).*OS/.test(window.navigator.userAgent);\n}\n\nfunction androidSniff() {\n  return /Android/.test(window.navigator.userAgent);\n}\n\nfunction mobileSniff() {\n  return iPhoneSniff() || androidSniff();\n}\n\nexport {Reveal};\n"]},"hash":"aeb666fd561f07b36d72808ff23fdb76172a229f"}
