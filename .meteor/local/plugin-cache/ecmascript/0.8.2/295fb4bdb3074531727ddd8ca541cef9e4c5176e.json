{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/bower_components/jquery/src/ajax/load.js","filenameRelative":"packages/zurb:foundation-sites/bower_components/jquery/src/ajax/load.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/bower_components/jquery/src/ajax/load.js.map","sourceFileName":"packages/zurb:foundation-sites/bower_components/jquery/src/ajax/load.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"load"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndefine([\"../core\", \"../core/parseHTML\", \"../ajax\", \"../traversing\", \"../manipulation\", \"../selector\", // Optional event/alias dependency\n\"../event/alias\"], function (jQuery) {\n\t// Keep a copy of the old load method\n\tvar _load = jQuery.fn.load; /**\n                              * Load a url into a page\n                              */\n\n\tjQuery.fn.load = function (url, params, callback) {\n\t\tif (typeof url !== \"string\" && _load) {\n\t\t\treturn _load.apply(this, arguments);\n\t\t}\n\n\t\tvar selector,\n\t\t    type,\n\t\t    response,\n\t\t    self = this,\n\t\t    off = url.indexOf(\" \");\n\n\t\tif (off > -1) {\n\t\t\tselector = jQuery.trim(url.slice(off));\n\t\t\turl = url.slice(0, off);\n\t\t} // If it's a function\n\n\n\t\tif (jQuery.isFunction(params)) {\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = undefined; // Otherwise, build a param string\n\t\t} else if (params && (typeof params === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(params)) === \"object\") {\n\t\t\ttype = \"POST\";\n\t\t} // If we have elements to modify, make the request\n\n\n\t\tif (self.length > 0) {\n\t\t\tjQuery.ajax({\n\t\t\t\turl: url,\n\t\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t\t// Make value of this field explicit since\n\t\t\t\t// user can override it through ajaxSetup method\n\t\t\t\ttype: type || \"GET\",\n\t\t\t\tdataType: \"html\",\n\t\t\t\tdata: params\n\t\t\t}).done(function (responseText) {\n\t\t\t\t// Save response for use in complete callback\n\t\t\t\tresponse = arguments;\n\t\t\t\tself.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n\t\t\t\tresponseText); // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t\t\t// but they are ignored because response was set above.\n\t\t\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t\t}).always(callback && function (jqXHR, status) {\n\t\t\t\tself.each(function () {\n\t\t\t\t\tcallback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t};\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/bower_components/jquery/src/ajax/load.js"],"names":["define","jQuery","_load","fn","load","url","params","callback","apply","arguments","selector","type","response","self","off","indexOf","trim","slice","isFunction","undefined","length","ajax","dataType","data","done","responseText","html","append","parseHTML","find","always","jqXHR","status","each"],"mappings":";;;;;;AAAAA,OAAQ,CACP,SADO,EAEP,mBAFO,EAGP,SAHO,EAIP,eAJO,EAKP,iBALO,EAMP,aANO,EAQP;AACA,gBATO,CAAR,EAUG,UAAUC,MAAV,EAAmB;AAEtB;AACA,KAAIC,QAAQD,OAAOE,EAAP,CAAUC,IAAtB,CAHsB,CAKtB;;;;AAGAH,QAAOE,EAAP,CAAUC,IAAV,GAAiB,UAAUC,GAAV,EAAeC,MAAf,EAAuBC,QAAvB,EAAkC;AAClD,MAAK,OAAOF,GAAP,KAAe,QAAf,IAA2BH,KAAhC,EAAwC;AACvC,UAAOA,MAAMM,KAAN,CAAa,IAAb,EAAmBC,SAAnB,CAAP;AACA;;AAED,MAAIC,QAAJ;AAAA,MAAcC,IAAd;AAAA,MAAoBC,QAApB;AAAA,MACCC,OAAO,IADR;AAAA,MAECC,MAAMT,IAAIU,OAAJ,CAAa,GAAb,CAFP;;AAIA,MAAKD,MAAM,CAAC,CAAZ,EAAgB;AACfJ,cAAWT,OAAOe,IAAP,CAAaX,IAAIY,KAAJ,CAAWH,GAAX,CAAb,CAAX;AACAT,SAAMA,IAAIY,KAAJ,CAAW,CAAX,EAAcH,GAAd,CAAN;AACA,GAZiD,CAclD;;;AACA,MAAKb,OAAOiB,UAAP,CAAmBZ,MAAnB,CAAL,EAAmC;AAElC;AACAC,cAAWD,MAAX;AACAA,YAASa,SAAT,CAJkC,CAMnC;AACC,GAPD,MAOO,IAAKb,UAAU,QAAOA,MAAP,uDAAOA,MAAP,OAAkB,QAAjC,EAA4C;AAClDK,UAAO,MAAP;AACA,GAxBiD,CA0BlD;;;AACA,MAAKE,KAAKO,MAAL,GAAc,CAAnB,EAAuB;AACtBnB,UAAOoB,IAAP,CAAa;AACZhB,SAAKA,GADO;AAGZ;AACA;AACA;AACAM,UAAMA,QAAQ,KANF;AAOZW,cAAU,MAPE;AAQZC,UAAMjB;AARM,IAAb,EASIkB,IATJ,CASU,UAAUC,YAAV,EAAyB;AAElC;AACAb,eAAWH,SAAX;AAEAI,SAAKa,IAAL,CAAWhB,WAEV;AACA;AACAT,WAAQ,OAAR,EAAkB0B,MAAlB,CAA0B1B,OAAO2B,SAAP,CAAkBH,YAAlB,CAA1B,EAA6DI,IAA7D,CAAmEnB,QAAnE,CAJU,GAMV;AACAe,gBAPD,EALkC,CAcnC;AACA;AACA;AACC,IA1BD,EA0BIK,MA1BJ,CA0BYvB,YAAY,UAAUwB,KAAV,EAAiBC,MAAjB,EAA0B;AACjDnB,SAAKoB,IAAL,CAAW,YAAW;AACrB1B,cAASC,KAAT,CAAgB,IAAhB,EAAsBI,YAAY,CAAEmB,MAAMN,YAAR,EAAsBO,MAAtB,EAA8BD,KAA9B,CAAlC;AACA,KAFD;AAGA,IA9BD;AA+BA;;AAED,SAAO,IAAP;AACA,EA9DD;AAgEC,CAlFD","file":"packages/zurb:foundation-sites/bower_components/jquery/src/ajax/load.js.map","sourcesContent":["define( [\n\t\"../core\",\n\t\"../core/parseHTML\",\n\t\"../ajax\",\n\t\"../traversing\",\n\t\"../manipulation\",\n\t\"../selector\",\n\n\t// Optional event/alias dependency\n\t\"../event/alias\"\n], function( jQuery ) {\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n} );\n"]},"hash":"295fb4bdb3074531727ddd8ca541cef9e4c5176e"}
