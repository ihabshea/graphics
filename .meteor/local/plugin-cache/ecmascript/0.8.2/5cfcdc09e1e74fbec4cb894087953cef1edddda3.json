{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"jquery","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"$"}]},{"source":"./foundation.util.core","imported":["GetYoDigits"],"specifiers":[{"kind":"named","imported":"GetYoDigits","local":"GetYoDigits"}]},{"source":"./foundation.util.mediaQuery","imported":["MediaQuery"],"specifiers":[{"kind":"named","imported":"MediaQuery","local":"MediaQuery"}]}],"exports":{"exported":["Foundation"],"specifiers":[{"kind":"local","local":"Foundation","exported":"Foundation"}]}}},"options":{"filename":"packages/zurb:foundation-sites/js/foundation.core.js","filenameRelative":"packages/zurb:foundation-sites/js/foundation.core.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/js/foundation.core.js.map","sourceFileName":"packages/zurb:foundation-sites/js/foundation.core.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.core"},"ignored":false,"code":"\"use strict\";\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar module1 = module;\nmodule1.export({\n  Foundation: function () {\n    return Foundation;\n  }\n});\nvar $ = void 0;\nmodule1.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 0);\nvar GetYoDigits = void 0;\nmodule1.watch(require(\"./foundation.util.core\"), {\n  GetYoDigits: function (v) {\n    GetYoDigits = v;\n  }\n}, 1);\nvar MediaQuery = void 0;\nmodule1.watch(require(\"./foundation.util.mediaQuery\"), {\n  MediaQuery: function (v) {\n    MediaQuery = v;\n  }\n}, 2);\nvar FOUNDATION_VERSION = '6.4.1'; // Global Foundation object\n// This is attached to the window, or used as a module for AMD/Browserify\n\nvar Foundation = {\n  version: FOUNDATION_VERSION,\n  /**\n   * Stores initialized plugins.\n   */_plugins: {},\n  /**\n   * Stores generated unique ids for plugin instances\n   */_uuids: [],\n  /**\n   * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n   * @param {Object} plugin - The constructor of the plugin.\n   */plugin: function (plugin, name) {\n    // Object key to use when adding to global Foundation object\n    // Examples: Foundation.Reveal, Foundation.OffCanvas\n    var className = name || functionName(plugin); // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n    // Examples: data-reveal, data-off-canvas\n\n    var attrName = hyphenate(className); // Add to the Foundation object and the plugins list (for reflowing)\n\n    this._plugins[attrName] = this[className] = plugin;\n  },\n  /**\n   * @function\n   * Populates the _uuids array with pointers to each individual plugin instance.\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n   * Also fires the initialization event for each plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\n   * @fires Plugin#init\n   */registerPlugin: function (plugin, name) {\n    var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n    plugin.uuid = GetYoDigits(6, pluginName);\n\n    if (!plugin.$element.attr(\"data-\" + pluginName)) {\n      plugin.$element.attr(\"data-\" + pluginName, plugin.uuid);\n    }\n\n    if (!plugin.$element.data('zfPlugin')) {\n      plugin.$element.data('zfPlugin', plugin);\n    } /**\n       * Fires when the plugin has initialized.\n       * @event Plugin#init\n       */\n\n    plugin.$element.trigger(\"init.zf.\" + pluginName);\n\n    this._uuids.push(plugin.uuid);\n\n    return;\n  },\n  /**\n   * @function\n   * Removes the plugins uuid from the _uuids array.\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n   * Also fires the destroyed event for the plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @fires Plugin#destroyed\n   */unregisterPlugin: function (plugin) {\n    var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n    this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n\n    plugin.$element.removeAttr(\"data-\" + pluginName).removeData('zfPlugin') /**\n                                                                             * Fires when the plugin has been destroyed.\n                                                                             * @event Plugin#destroyed\n                                                                             */.trigger(\"destroyed.zf.\" + pluginName);\n\n    for (var prop in meteorBabelHelpers.sanitizeForInObject(plugin)) {\n      plugin[prop] = null; //clean up script to prep for garbage collection.\n    }\n\n    return;\n  },\n  /**\n   * @function\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n   * @default If no argument is passed, reflow all currently active plugins.\n   */reInit: function (plugins) {\n    var isJQ = plugins instanceof $;\n\n    try {\n      if (isJQ) {\n        plugins.each(function () {\n          $(this).data('zfPlugin')._init();\n        });\n      } else {\n        var type = typeof plugins === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(plugins),\n            _this = this,\n            fns = {\n          'object': function (plgs) {\n            plgs.forEach(function (p) {\n              p = hyphenate(p);\n              $('[data-' + p + ']').foundation('_init');\n            });\n          },\n          'string': function () {\n            plugins = hyphenate(plugins);\n            $('[data-' + plugins + ']').foundation('_init');\n          },\n          'undefined': function () {\n            this['object'](Object.keys(_this._plugins));\n          }\n        };\n\n        fns[type](plugins);\n      }\n    } catch (err) {\n      console.error(err);\n    } finally {\n      return plugins;\n    }\n  },\n  /**\n   * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n   */reflow: function (elem, plugins) {\n    // If plugins is undefined, just grab everything\n    if (typeof plugins === 'undefined') {\n      plugins = Object.keys(this._plugins);\n    } // If plugins is a string, convert it to an array with one item\n    else if (typeof plugins === 'string') {\n        plugins = [plugins];\n      }\n\n    var _this = this; // Iterate through each plugin\n\n\n    $.each(plugins, function (i, name) {\n      // Get the current plugin\n      var plugin = _this._plugins[name]; // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n\n      var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']'); // For each plugin found, initialize it\n\n      $elem.each(function () {\n        var $el = $(this),\n            opts = {}; // Don't double-dip on plugins\n\n        if ($el.data('zfPlugin')) {\n          console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n          return;\n        }\n\n        if ($el.attr('data-options')) {\n          var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n            var opt = e.split(':').map(function (el) {\n              return el.trim();\n            });\n            if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n          });\n        }\n\n        try {\n          $el.data('zfPlugin', new plugin($(this), opts));\n        } catch (er) {\n          console.error(er);\n        } finally {\n          return;\n        }\n      });\n    });\n  },\n  getFnName: functionName,\n  addToJquery: function ($) {\n    // TODO: consider not making this a jQuery function\n    // TODO: need way to reflow vs. re-initialize\n    /**\n     * The Foundation jQuery method.\n     * @param {String|Array} method - An action to perform on the current jQuery object.\n     */var foundation = function (method) {\n      var type = typeof method === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(method),\n          $noJS = $('.no-js');\n\n      if ($noJS.length) {\n        $noJS.removeClass('no-js');\n      }\n\n      if (type === 'undefined') {\n        //needs to initialize the Foundation object, or an individual plugin.\n        MediaQuery._init();\n\n        Foundation.reflow(this);\n      } else if (type === 'string') {\n        //an individual method to invoke on a plugin or group of plugins\n        var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n\n        var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n        if (plugClass !== undefined && plugClass[method] !== undefined) {\n          //make sure both the class and method exist\n          if (this.length === 1) {\n            //if there's only one, call it directly.\n            plugClass[method].apply(plugClass, args);\n          } else {\n            this.each(function (i, el) {\n              //otherwise loop through the jQuery collection and invoke the method on each\n              plugClass[method].apply($(el).data('zfPlugin'), args);\n            });\n          }\n        } else {\n          //error for no class or no method\n          throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n        }\n      } else {\n        //error for invalid argument type\n        throw new TypeError(\"We're sorry, \" + type + \" is not a valid parameter. You must use a string representing the method you wish to invoke.\");\n      }\n\n      return this;\n    };\n\n    $.fn.foundation = foundation;\n    return $;\n  }\n};\nFoundation.util = {\n  /**\n   * Function for applying a debounce effect to a function call.\n   * @function\n   * @param {Function} func - Function to be called at end of timeout.\n   * @param {Number} delay - Time in ms to delay the call of `func`.\n   * @returns function\n   */throttle: function (func, delay) {\n    var timer = null;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          func.apply(context, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  }\n};\nwindow.Foundation = Foundation; // Polyfill for requestAnimationFrame\n\n(function () {\n  if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n    return new Date().getTime();\n  };\n  var vendors = ['webkit', 'moz'];\n\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n  }\n\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n\n    window.requestAnimationFrame = function (callback) {\n      var now = Date.now();\n      var nextTime = Math.max(lastTime + 16, now);\n      return setTimeout(function () {\n        callback(lastTime = nextTime);\n      }, nextTime - now);\n    };\n\n    window.cancelAnimationFrame = clearTimeout;\n  } /**\n     * Polyfill for performance.now, required by rAF\n     */\n\n  if (!window.performance || !window.performance.now) {\n    window.performance = {\n      start: Date.now(),\n      now: function () {\n        return Date.now() - this.start;\n      }\n    };\n  }\n})();\n\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function (oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP = function () {},\n        fBound = function () {\n      return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n    };\n\n    if (this.prototype) {\n      // native functions don't have a prototype\n      fNOP.prototype = this.prototype;\n    }\n\n    fBound.prototype = new fNOP();\n    return fBound;\n  };\n} // Polyfill to get the name of a function in IE9\n\n\nfunction functionName(fn) {\n  if (Function.prototype.name === undefined) {\n    var funcNameRegex = /function\\s([^(]{1,})\\(/;\n    var results = funcNameRegex.exec(fn.toString());\n    return results && results.length > 1 ? results[1].trim() : \"\";\n  } else if (fn.prototype === undefined) {\n    return fn.constructor.name;\n  } else {\n    return fn.prototype.constructor.name;\n  }\n}\n\nfunction parseValue(str) {\n  if ('true' === str) return true;else if ('false' === str) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n  return str;\n} // Convert PascalCase to kebab-case\n// Thank you: http://stackoverflow.com/a/8955580\n\n\nfunction hyphenate(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}","map":{"version":3,"sources":["packages/zurb:foundation-sites/js/foundation.core.js"],"names":["module1","module","export","Foundation","$","watch","require","v","GetYoDigits","MediaQuery","FOUNDATION_VERSION","version","_plugins","_uuids","plugin","name","className","functionName","attrName","hyphenate","registerPlugin","pluginName","constructor","toLowerCase","uuid","$element","attr","data","trigger","push","unregisterPlugin","splice","indexOf","removeAttr","removeData","prop","reInit","plugins","isJQ","each","_init","type","_this","fns","plgs","forEach","p","foundation","Object","keys","err","console","error","reflow","elem","i","$elem","find","addBack","$el","opts","warn","thing","split","e","opt","map","el","trim","parseValue","er","getFnName","addToJquery","method","$noJS","length","removeClass","args","Array","prototype","slice","call","arguments","plugClass","undefined","apply","ReferenceError","TypeError","fn","util","throttle","func","delay","timer","context","setTimeout","window","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","callback","nextTime","Math","max","clearTimeout","performance","start","Function","bind","oThis","aArgs","fToBind","fNOP","fBound","concat","funcNameRegex","results","exec","toString","str","isNaN","parseFloat","replace"],"mappings":"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","file":"packages/zurb:foundation-sites/js/foundation.core.js.map","sourcesContent":["\"use strict\";\n\nimport $ from 'jquery';\nimport { GetYoDigits } from './foundation.util.core';\nimport { MediaQuery } from './foundation.util.mediaQuery';\n\nvar FOUNDATION_VERSION = '6.4.1';\n\n// Global Foundation object\n// This is attached to the window, or used as a module for AMD/Browserify\nvar Foundation = {\n  version: FOUNDATION_VERSION,\n\n  /**\n   * Stores initialized plugins.\n   */\n  _plugins: {},\n\n  /**\n   * Stores generated unique ids for plugin instances\n   */\n  _uuids: [],\n\n  /**\n   * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n   * @param {Object} plugin - The constructor of the plugin.\n   */\n  plugin: function(plugin, name) {\n    // Object key to use when adding to global Foundation object\n    // Examples: Foundation.Reveal, Foundation.OffCanvas\n    var className = (name || functionName(plugin));\n    // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n    // Examples: data-reveal, data-off-canvas\n    var attrName  = hyphenate(className);\n\n    // Add to the Foundation object and the plugins list (for reflowing)\n    this._plugins[attrName] = this[className] = plugin;\n  },\n  /**\n   * @function\n   * Populates the _uuids array with pointers to each individual plugin instance.\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n   * Also fires the initialization event for each plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\n   * @fires Plugin#init\n   */\n  registerPlugin: function(plugin, name){\n    var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n    plugin.uuid = GetYoDigits(6, pluginName);\n\n    if(!plugin.$element.attr(`data-${pluginName}`)){ plugin.$element.attr(`data-${pluginName}`, plugin.uuid); }\n    if(!plugin.$element.data('zfPlugin')){ plugin.$element.data('zfPlugin', plugin); }\n          /**\n           * Fires when the plugin has initialized.\n           * @event Plugin#init\n           */\n    plugin.$element.trigger(`init.zf.${pluginName}`);\n\n    this._uuids.push(plugin.uuid);\n\n    return;\n  },\n  /**\n   * @function\n   * Removes the plugins uuid from the _uuids array.\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n   * Also fires the destroyed event for the plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @fires Plugin#destroyed\n   */\n  unregisterPlugin: function(plugin){\n    var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n    this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n    plugin.$element.removeAttr(`data-${pluginName}`).removeData('zfPlugin')\n          /**\n           * Fires when the plugin has been destroyed.\n           * @event Plugin#destroyed\n           */\n          .trigger(`destroyed.zf.${pluginName}`);\n    for(var prop in plugin){\n      plugin[prop] = null;//clean up script to prep for garbage collection.\n    }\n    return;\n  },\n\n  /**\n   * @function\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n   * @default If no argument is passed, reflow all currently active plugins.\n   */\n   reInit: function(plugins){\n     var isJQ = plugins instanceof $;\n     try{\n       if(isJQ){\n         plugins.each(function(){\n           $(this).data('zfPlugin')._init();\n         });\n       }else{\n         var type = typeof plugins,\n         _this = this,\n         fns = {\n           'object': function(plgs){\n             plgs.forEach(function(p){\n               p = hyphenate(p);\n               $('[data-'+ p +']').foundation('_init');\n             });\n           },\n           'string': function(){\n             plugins = hyphenate(plugins);\n             $('[data-'+ plugins +']').foundation('_init');\n           },\n           'undefined': function(){\n             this['object'](Object.keys(_this._plugins));\n           }\n         };\n         fns[type](plugins);\n       }\n     }catch(err){\n       console.error(err);\n     }finally{\n       return plugins;\n     }\n   },\n\n  /**\n   * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n   */\n  reflow: function(elem, plugins) {\n\n    // If plugins is undefined, just grab everything\n    if (typeof plugins === 'undefined') {\n      plugins = Object.keys(this._plugins);\n    }\n    // If plugins is a string, convert it to an array with one item\n    else if (typeof plugins === 'string') {\n      plugins = [plugins];\n    }\n\n    var _this = this;\n\n    // Iterate through each plugin\n    $.each(plugins, function(i, name) {\n      // Get the current plugin\n      var plugin = _this._plugins[name];\n\n      // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n      var $elem = $(elem).find('[data-'+name+']').addBack('[data-'+name+']');\n\n      // For each plugin found, initialize it\n      $elem.each(function() {\n        var $el = $(this),\n            opts = {};\n        // Don't double-dip on plugins\n        if ($el.data('zfPlugin')) {\n          console.warn(\"Tried to initialize \"+name+\" on an element that already has a Foundation plugin.\");\n          return;\n        }\n\n        if($el.attr('data-options')){\n          var thing = $el.attr('data-options').split(';').forEach(function(e, i){\n            var opt = e.split(':').map(function(el){ return el.trim(); });\n            if(opt[0]) opts[opt[0]] = parseValue(opt[1]);\n          });\n        }\n        try{\n          $el.data('zfPlugin', new plugin($(this), opts));\n        }catch(er){\n          console.error(er);\n        }finally{\n          return;\n        }\n      });\n    });\n  },\n  getFnName: functionName,\n\n  addToJquery: function($) {\n    // TODO: consider not making this a jQuery function\n    // TODO: need way to reflow vs. re-initialize\n    /**\n     * The Foundation jQuery method.\n     * @param {String|Array} method - An action to perform on the current jQuery object.\n     */\n    var foundation = function(method) {\n      var type = typeof method,\n          $noJS = $('.no-js');\n\n      if($noJS.length){\n        $noJS.removeClass('no-js');\n      }\n\n      if(type === 'undefined'){//needs to initialize the Foundation object, or an individual plugin.\n        MediaQuery._init();\n        Foundation.reflow(this);\n      }else if(type === 'string'){//an individual method to invoke on a plugin or group of plugins\n        var args = Array.prototype.slice.call(arguments, 1);//collect all the arguments, if necessary\n        var plugClass = this.data('zfPlugin');//determine the class of plugin\n\n        if(plugClass !== undefined && plugClass[method] !== undefined){//make sure both the class and method exist\n          if(this.length === 1){//if there's only one, call it directly.\n              plugClass[method].apply(plugClass, args);\n          }else{\n            this.each(function(i, el){//otherwise loop through the jQuery collection and invoke the method on each\n              plugClass[method].apply($(el).data('zfPlugin'), args);\n            });\n          }\n        }else{//error for no class or no method\n          throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n        }\n      }else{//error for invalid argument type\n        throw new TypeError(`We're sorry, ${type} is not a valid parameter. You must use a string representing the method you wish to invoke.`);\n      }\n      return this;\n    };\n    $.fn.foundation = foundation;\n    return $;\n  }\n};\n\nFoundation.util = {\n  /**\n   * Function for applying a debounce effect to a function call.\n   * @function\n   * @param {Function} func - Function to be called at end of timeout.\n   * @param {Number} delay - Time in ms to delay the call of `func`.\n   * @returns function\n   */\n  throttle: function (func, delay) {\n    var timer = null;\n\n    return function () {\n      var context = this, args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          func.apply(context, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  }\n};\n\nwindow.Foundation = Foundation;\n\n// Polyfill for requestAnimationFrame\n(function() {\n  if (!Date.now || !window.Date.now)\n    window.Date.now = Date.now = function() { return new Date().getTime(); };\n\n  var vendors = ['webkit', 'moz'];\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n      window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\n                                 || window[vp+'CancelRequestAnimationFrame']);\n  }\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)\n    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function(callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function() { callback(lastTime = nextTime); },\n                          nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n  }\n  /**\n   * Polyfill for performance.now, required by rAF\n   */\n  if(!window.performance || !window.performance.now){\n    window.performance = {\n      start: Date.now(),\n      now: function(){ return Date.now() - this.start; }\n    };\n  }\n})();\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    if (this.prototype) {\n      // native functions don't have a prototype\n      fNOP.prototype = this.prototype;\n    }\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n// Polyfill to get the name of a function in IE9\nfunction functionName(fn) {\n  if (Function.prototype.name === undefined) {\n    var funcNameRegex = /function\\s([^(]{1,})\\(/;\n    var results = (funcNameRegex).exec((fn).toString());\n    return (results && results.length > 1) ? results[1].trim() : \"\";\n  }\n  else if (fn.prototype === undefined) {\n    return fn.constructor.name;\n  }\n  else {\n    return fn.prototype.constructor.name;\n  }\n}\nfunction parseValue(str){\n  if ('true' === str) return true;\n  else if ('false' === str) return false;\n  else if (!isNaN(str * 1)) return parseFloat(str);\n  return str;\n}\n// Convert PascalCase to kebab-case\n// Thank you: http://stackoverflow.com/a/8955580\nfunction hyphenate(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nexport {Foundation};\n"]},"hash":"5cfcdc09e1e74fbec4cb894087953cef1edddda3"}
