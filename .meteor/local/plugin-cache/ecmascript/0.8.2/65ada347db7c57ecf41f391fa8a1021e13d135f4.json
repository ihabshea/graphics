{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/test/javascript/components/reveal.js","filenameRelative":"packages/zurb:foundation-sites/test/javascript/components/reveal.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/test/javascript/components/reveal.js.map","sourceFileName":"packages/zurb:foundation-sites/test/javascript/components/reveal.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"reveal"},"ignored":false,"code":"describe('Reveal', function () {\n  var plugin;\n  var $html;\n  var template = \"<div class=\\\"reveal\\\" id=\\\"exampleModal1\\\" data-reveal>\\n\\t  Modal content\\n\\t  <button class=\\\"close-button\\\" data-close aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\n\\t    <span aria-hidden=\\\"true\\\">&times;</span>\\n\\t  </button>\\n\\t</div>\";\n  afterEach(function () {\n    plugin.destroy();\n    $html.remove();\n  });\n  describe('constructor()', function () {\n    it('stores the element and plugin options', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n  describe('init()', function () {\n    it('sets ARIA attributes for modal', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n      $html.should.have.attr('aria-hidden', 'true');\n      $html.should.have.attr('role', 'dialog');\n    });\n    it('detects anchor if one exists', function () {\n      $html = $(template).appendTo('body');\n      var $anchor = $('<button data-open=\"exampleModal1\">Open</button>').appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n      plugin.$anchor[0].should.be.equal($anchor[0]);\n      $anchor.remove();\n    });\n    it('sets ARIA attributes for anchor if one exists', function () {\n      $html = $(template).appendTo('body');\n      var $anchor = $('<button data-open=\"exampleModal1\">Open</button>').appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n      $anchor.should.have.attr('aria-haspopup', 'true');\n      $anchor.should.have.attr('aria-controls', $html.attr('id'));\n      $anchor.remove();\n    });\n  });\n  describe('makeOverlay()', function () {\n    it('creates an overlay if overlay option is true', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        overlay: true\n      });\n      plugin.$overlay.should.be.an('object');\n      plugin.$overlay.should.have.class('reveal-overlay');\n      $.contains(document.body, plugin.$overlay[0]).should.be.true;\n    });\n  });\n  describe('open()', function () {\n    it('opens the modal', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n      $html.on('open.zf.reveal', function () {\n        $html.should.be.visible;\n        done();\n      });\n      plugin.open();\n    });\n    it('opens the overlay', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        overlay: true\n      });\n      $html.on('open.zf.reveal', function () {\n        plugin.$overlay.should.be.visible;\n        done();\n      });\n      plugin.open();\n    });\n    it('toggles ARIA attributes', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n      $html.on('open.zf.reveal', function () {\n        $html.should.have.attr('aria-hidden', 'false');\n        $html.should.have.attr('tabindex', '-1');\n        done();\n      });\n      plugin.open();\n    });\n    it('adds class to body', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n      $html.on('open.zf.reveal', function () {\n        $('body').should.have.class('is-reveal-open');\n        done();\n      });\n      plugin.open();\n    });\n    it('adds optional overlay classes overlay element', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        additionalOverlayClasses: 'default'\n      });\n      $html.on('open.zf.reveal', function () {\n        $('.reveal-overlay').should.have.class('default');\n        done();\n      });\n      plugin.open();\n    }); // TODO: Check if  this.$element.trigger('closeme.zf.reveal', this.id) is correctly used.\n    // it('closes previously opened modal if multipleOpened option is false', function(done) {\n    //   $html = $(template).appendTo('body');\n    //   $html2 = $(template).attr('id', 'exampleModal2').appendTo('body');\n    //   plugin = new Foundation.Reveal($html, {multipleOpened: false});\n    //   plugin2 = new Foundation.Reveal($html2, {multipleOpened: false});\n    //   plugin.open();\n    //   plugin2.open();\n    //   $html.should.be.hidden;\n    //   plugin2.destroy();\n    //   $html2.remove();\n    // });\n\n    it('fires open.zf.reveal event', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n      $html.on('open.zf.reveal', function () {\n        $html.should.be.visible;\n        done();\n      });\n      plugin.open();\n    });\n    it('traps focus if trapFocus option is true', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        trapFocus: true\n      });\n      var spy = sinon.spy(Foundation.Keyboard, 'trapFocus');\n      $html.on('open.zf.reveal', function () {\n        sinon.assert.called(spy);\n        Foundation.Keyboard.trapFocus.restore();\n        done();\n      });\n      plugin.open();\n    });\n  });\n  describe('close()', function () {\n    it('closes the modal', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {}); // Open it first\n\n      plugin.open();\n      $html.on('closed.zf.reveal', function () {\n        $html.should.be.hidden;\n        done();\n      });\n      plugin.close();\n    });\n    it('closes the overlay', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        overlay: true\n      }); // Open it first\n\n      plugin.open();\n      $html.on('closed.zf.reveal', function () {\n        plugin.$overlay.should.be.hidden;\n        done();\n      });\n      plugin.close();\n    });\n    it('toggles ARIA attributes', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {}); // Open it first\n\n      plugin.open();\n      $html.on('closed.zf.reveal', function () {\n        $html.should.have.attr('aria-hidden', 'true');\n        done();\n      });\n      plugin.close();\n    });\n    it('removes class from body', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {}); // Open it first\n\n      plugin.open();\n      $html.on('closed.zf.reveal', function () {\n        $('body').should.not.have.class('is-reveal-open');\n        done();\n      });\n      plugin.close();\n    });\n    it('does not remove class from body if another reveal is open', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        multipleOpened: true\n      });\n      var $html2 = $(template).attr('id', 'exampleModal2').appendTo('body');\n      var plugin2 = new Foundation.Reveal($html2, {\n        multipleOpened: true,\n        vOffset: 10\n      }); // Open both first\n\n      plugin.open();\n      plugin2.open();\n      $html.on('closed.zf.reveal', function () {\n        $('body').should.have.class('is-reveal-open');\n        plugin2.destroy();\n        $html2.remove();\n        done();\n      });\n      plugin.close();\n    });\n    it('fires closed.zf.reveal event', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {}); // Open it first\n\n      plugin.open();\n      $html.on('closed.zf.reveal', function () {\n        $html.should.be.hidden;\n        done();\n      });\n      plugin.close();\n    });\n    it('releases focus if trapFocus option is true', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        trapFocus: true\n      }); // Open it first\n\n      plugin.open();\n      var spy = sinon.spy(Foundation.Keyboard, 'releaseFocus');\n      $html.on('closed.zf.reveal', function () {\n        sinon.assert.called(spy);\n        Foundation.Keyboard.releaseFocus.restore();\n        done();\n      });\n      plugin.close();\n    });\n    it('sets focus to anchor', function (done) {\n      $html = $(template).appendTo('body');\n      var $anchor = $('<button data-open=\"exampleModal1\">Open</button>').appendTo('body');\n      plugin = new Foundation.Reveal($html, {}); // Open it first\n\n      plugin.open();\n      $html.on('closed.zf.reveal', function () {\n        setTimeout(function () {\n          $anchor[0].should.be.equal(document.activeElement);\n          $anchor.remove();\n          done();\n        }, 0);\n      });\n      plugin.close();\n    });\n  });\n  describe('toggle()', function () {\n    it('opens a closed modal', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        overlay: true\n      });\n      $html.on('open.zf.reveal', function () {\n        plugin.$overlay.should.be.visible;\n        done();\n      });\n      plugin.open();\n    });\n    it('closes an open modal', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {}); // Open it first\n\n      plugin.open();\n      $html.on('closed.zf.reveal', function () {\n        $html.should.be.hidden;\n        done();\n      });\n      plugin.close();\n    });\n  });\n  describe('events()', function () {\n    it('opens the modal on anchor click', function (done) {\n      $html = $(template).appendTo('body');\n      var $anchor = $('<button data-open=\"exampleModal1\">Open</button>').appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n      $html.on('open.zf.reveal', function () {\n        plugin.$overlay.should.be.visible;\n        $anchor.remove();\n        done();\n      });\n      $anchor.trigger('click');\n    });\n    it('closes a modal on overlay click if closeOnClick option is true', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        overlay: true,\n        closeOnClick: true\n      }); // Open it first\n\n      plugin.open();\n      $html.on('closed.zf.reveal', function () {\n        $html.should.be.hidden;\n        done();\n      });\n      plugin.$overlay.trigger('click');\n    });\n    it('not closes a modal on overlay click if closeOnClick option is true', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {\n        overlay: true,\n        closeOnClick: false\n      }); // Open it first\n\n      plugin.open();\n      plugin.$overlay.trigger('click'); // Add timeout to make sure it does not close\n      // Timeout is required because closed event will not be fired\n\n      setTimeout(function () {\n        $html.should.be.visible;\n        done();\n      }, 10);\n    });\n    it('closes Reveal with click on close button', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {}); // Open it first\n\n      plugin.open();\n      $html.on('closed.zf.reveal', function () {\n        $html.should.be.hidden;\n        done();\n      });\n      $html.find('[data-close]').focus().trigger('click');\n    });\n  });\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/test/javascript/components/reveal.js"],"names":["describe","plugin","$html","template","afterEach","destroy","remove","it","$","appendTo","Foundation","Reveal","$element","should","be","an","options","have","attr","$anchor","equal","overlay","$overlay","class","contains","document","body","true","done","on","visible","open","additionalOverlayClasses","trapFocus","spy","sinon","Keyboard","assert","called","restore","hidden","close","not","multipleOpened","$html2","plugin2","vOffset","releaseFocus","setTimeout","activeElement","trigger","closeOnClick","find","focus"],"mappings":"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","file":"packages/zurb:foundation-sites/test/javascript/components/reveal.js.map","sourcesContent":["describe('Reveal', function() {\n\tvar plugin;\n\tvar $html;\n\tvar template = `<div class=\"reveal\" id=\"exampleModal1\" data-reveal>\n\t  Modal content\n\t  <button class=\"close-button\" data-close aria-label=\"Close modal\" type=\"button\">\n\t    <span aria-hidden=\"true\">&times;</span>\n\t  </button>\n\t</div>`;\n\n  afterEach(function() {\n    plugin.destroy();\n    $html.remove();\n  });\n\n  describe('constructor()', function() {\n    it('stores the element and plugin options', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n\n  describe('init()', function() {\n    it('sets ARIA attributes for modal', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      $html.should.have.attr('aria-hidden', 'true');\n      $html.should.have.attr('role', 'dialog');\n    });\n\n    it('detects anchor if one exists', function() {\n      $html = $(template).appendTo('body');\n      var $anchor = $('<button data-open=\"exampleModal1\">Open</button>').appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      plugin.$anchor[0].should.be.equal($anchor[0]);\n\n      $anchor.remove();\n    });\n\n    it('sets ARIA attributes for anchor if one exists', function() {\n      $html = $(template).appendTo('body');\n      var $anchor = $('<button data-open=\"exampleModal1\">Open</button>').appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      $anchor.should.have.attr('aria-haspopup', 'true');\n      $anchor.should.have.attr('aria-controls', $html.attr('id'));\n\n      $anchor.remove();\n    });\n  });\n\n  describe('makeOverlay()', function() {\n\t\tit('creates an overlay if overlay option is true', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {overlay: true});\n\n      plugin.$overlay.should.be.an('object');\n      plugin.$overlay.should.have.class('reveal-overlay');\n      $.contains(document.body, plugin.$overlay[0]).should.be.true;\n    });\n  });\n\n  describe('open()', function() {\n\t\tit('opens the modal', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      $html.on('open.zf.reveal', function() {\n        $html.should.be.visible;\n        done();\n      });\n\n      plugin.open();\n    });\n    it('opens the overlay', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {overlay: true});\n\n      $html.on('open.zf.reveal', function() {\n        plugin.$overlay.should.be.visible;\n        done();\n      });\n\n      plugin.open();\n    });\n    it('toggles ARIA attributes', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      $html.on('open.zf.reveal', function() {\n        $html.should.have.attr('aria-hidden', 'false');\n        $html.should.have.attr('tabindex', '-1');\n        done();\n      });\n\n      plugin.open();\n    });\n    it('adds class to body', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      $html.on('open.zf.reveal', function() {\n        $('body').should.have.class('is-reveal-open');\n        done();\n      });\n\n      plugin.open();\n    });\n    it('adds optional overlay classes overlay element', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {additionalOverlayClasses: 'default'});\n\n      $html.on('open.zf.reveal', function() {\n        $('.reveal-overlay').should.have.class('default');\n        done();\n      });\n\n      plugin.open();\n    });\n    // TODO: Check if  this.$element.trigger('closeme.zf.reveal', this.id) is correctly used.\n\n    // it('closes previously opened modal if multipleOpened option is false', function(done) {\n    //   $html = $(template).appendTo('body');\n    //   $html2 = $(template).attr('id', 'exampleModal2').appendTo('body');\n\n    //   plugin = new Foundation.Reveal($html, {multipleOpened: false});\n    //   plugin2 = new Foundation.Reveal($html2, {multipleOpened: false});\n\n    //   plugin.open();\n\n    //   plugin2.open();\n\n    //   $html.should.be.hidden;\n\n    //   plugin2.destroy();\n    //   $html2.remove();\n    // });\n    it('fires open.zf.reveal event', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      $html.on('open.zf.reveal', function() {\n      \t$html.should.be.visible;\n      \tdone();\n      });\n\n      plugin.open();\n    });\n\n    it('traps focus if trapFocus option is true', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {trapFocus: true});\n\n      let spy = sinon.spy(Foundation.Keyboard, 'trapFocus');\n\n      $html.on('open.zf.reveal', function() {\n        sinon.assert.called(spy);\n        Foundation.Keyboard.trapFocus.restore();\n      \tdone();\n      });\n\n      plugin.open();\n    });\n  });\n\n\tdescribe('close()', function() {\n\t\tit('closes the modal', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      // Open it first\n      plugin.open();\n\n      $html.on('closed.zf.reveal', function() {\n        $html.should.be.hidden;\n      \tdone();\n      });\n\n      plugin.close();\n    });\n    it('closes the overlay', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {overlay: true});\n\n      // Open it first\n      plugin.open();\n\n      $html.on('closed.zf.reveal', function() {\n        plugin.$overlay.should.be.hidden;\n      \tdone();\n      });\n\n      plugin.close();\n    });\n    it('toggles ARIA attributes', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      // Open it first\n      plugin.open();\n\n      $html.on('closed.zf.reveal', function() {\n        $html.should.have.attr('aria-hidden', 'true');\n      \tdone();\n      });\n\n      plugin.close();\n    });\n    it('removes class from body', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      // Open it first\n      plugin.open();\n\n\n      $html.on('closed.zf.reveal', function() {\n        $('body').should.not.have.class('is-reveal-open');\n        done();\n      });\n\n      plugin.close();\n    });\n    it('does not remove class from body if another reveal is open', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {multipleOpened: true});\n\n      let $html2 = $(template).attr('id', 'exampleModal2').appendTo('body');\n      let plugin2 = new Foundation.Reveal($html2, {multipleOpened: true, vOffset: 10});\n\n      // Open both first\n      plugin.open();\n      plugin2.open();\n\n\n      $html.on('closed.zf.reveal', function() {\n\n        $('body').should.have.class('is-reveal-open');\n        plugin2.destroy();\n        $html2.remove();\n        done();\n      });\n\n      plugin.close();\n    });\n    it('fires closed.zf.reveal event', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      // Open it first\n      plugin.open();\n\n      $html.on('closed.zf.reveal', function() {\n      \t$html.should.be.hidden;\n      \tdone();\n      });\n\n      plugin.close();\n    });\n\n    it('releases focus if trapFocus option is true', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {trapFocus: true});\n\n      // Open it first\n      plugin.open();\n\n      let spy = sinon.spy(Foundation.Keyboard, 'releaseFocus');\n\n      $html.on('closed.zf.reveal', function() {\n        sinon.assert.called(spy);\n        Foundation.Keyboard.releaseFocus.restore();\n        done();\n      });\n\n      plugin.close();\n    });\n    it('sets focus to anchor', function(done) {\n      $html = $(template).appendTo('body');\n      var $anchor = $('<button data-open=\"exampleModal1\">Open</button>').appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      // Open it first\n      plugin.open();\n\n      $html.on('closed.zf.reveal', function() {\n        setTimeout(function() {\n          $anchor[0].should.be.equal(document.activeElement);\n          $anchor.remove();\n          done();\n        }, 0);\n      });\n\n      plugin.close();\n    });\n  });\n\n\tdescribe('toggle()', function() {\n    it('opens a closed modal', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {overlay: true});\n\n      $html.on('open.zf.reveal', function() {\n        plugin.$overlay.should.be.visible;\n        done();\n      });\n\n      plugin.open();\n    });\n\t\tit('closes an open modal', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      // Open it first\n      plugin.open();\n\n      $html.on('closed.zf.reveal', function() {\n        $html.should.be.hidden;\n      \tdone();\n      });\n\n      plugin.close();\n    });\n  });\n\n  describe('events()', function() {\n    it('opens the modal on anchor click', function(done) {\n      $html = $(template).appendTo('body');\n      var $anchor = $('<button data-open=\"exampleModal1\">Open</button>').appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n\n      $html.on('open.zf.reveal', function() {\n        plugin.$overlay.should.be.visible;\n        $anchor.remove();\n      \tdone();\n      });\n\n      $anchor.trigger('click');\n    });\n\t\tit('closes a modal on overlay click if closeOnClick option is true', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {overlay: true, closeOnClick: true});\n\n      // Open it first\n      plugin.open();\n\n      $html.on('closed.zf.reveal', function() {\n        $html.should.be.hidden;\n      \tdone();\n      });\n\n      plugin.$overlay.trigger('click');\n    });\n    it('not closes a modal on overlay click if closeOnClick option is true', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {overlay: true, closeOnClick: false});\n\n      // Open it first\n      plugin.open();\n\n      plugin.$overlay.trigger('click');\n\n      // Add timeout to make sure it does not close\n      // Timeout is required because closed event will not be fired\n      setTimeout(function() {\n        $html.should.be.visible;\n        done();\n      }, 10);\n    });\n    it('closes Reveal with click on close button', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Reveal($html, {});\n\n      // Open it first\n      plugin.open();\n\n      $html.on('closed.zf.reveal', function() {\n        $html.should.be.hidden;\n      \tdone();\n      });\n\n      $html.find('[data-close]').focus()\n        .trigger('click');\n    });\n  });\n});\n"]},"hash":"65ada347db7c57ecf41f391fa8a1021e13d135f4"}
