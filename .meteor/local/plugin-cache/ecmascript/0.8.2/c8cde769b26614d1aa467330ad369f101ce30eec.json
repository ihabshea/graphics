{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/test/javascript/components/tooltip.js","filenameRelative":"packages/zurb:foundation-sites/test/javascript/components/tooltip.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/test/javascript/components/tooltip.js.map","sourceFileName":"packages/zurb:foundation-sites/test/javascript/components/tooltip.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"tooltip"},"ignored":false,"code":"describe('Tooltip', function () {\n  var plugin;\n  var $html;\n  var template = \"\\n    <span data-tooltip aria-haspopup=\\\"true\\\" class=\\\"has-tip\\\" tabindex=\\\"1\\\" title=\\\"TOOLTIP_CONTENT\\\">\\n      TEXT\\n    </span>\";\n  Foundation.Tooltip.defaults.showOn = 'all';\n  Foundation.Tooltip.defaults.fadeOutDuration = 0;\n  Foundation.Tooltip.defaults.fadeInDuration = 0;\n  afterEach(function () {\n    plugin.destroy();\n    $html.remove();\n  });\n  describe('constructor()', function () {\n    it('stores the element and plugin options', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n  describe('init()', function () {\n    it('has value of title attribute as content', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n      plugin.template.text().should.equal('TOOLTIP_CONTENT');\n    });\n    it('has value of tipText option as content', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {\n        tipText: 'TOOLTIP_CONTENT_OPTION'\n      });\n      plugin.template.text().should.equal('TOOLTIP_CONTENT_OPTION');\n    });\n    it('uses value of template option as template', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {\n        template: '<div class=\"TEMPLATE_OPTION\"></div>'\n      });\n      plugin.template.should.have.class('TEMPLATE_OPTION');\n    });\n    it('uses value of triggerClass option as trigger class', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {\n        triggerClass: 'TRIGGER_CLASS_OPTION'\n      });\n      plugin.$element.should.have.class('TRIGGER_CLASS_OPTION');\n    });\n    it('sets ARIA attributes', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n      plugin.$element.should.have.attr('aria-describedby', plugin.template.attr('id'));\n      plugin.template.should.have.attr('aria-hidden', 'true');\n      plugin.template.should.have.attr('role', 'tooltip');\n    });\n  });\n  describe('buildTemplate()', function () {\n    it('uses value of templateClasses option as template class', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {\n        templateClasses: 'TOOLTIP_CLASS_OPTION'\n      });\n      plugin.template.should.have.class('TOOLTIP_CLASS_OPTION');\n    });\n  });\n  describe('show()', function () {\n    it('shows the tooltip', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n      plugin.show();\n      plugin.template.should.be.visible;\n      plugin.template.should.have.attr('aria-hidden', 'false');\n    });\n    it('fires show.zf.tooltip event', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n      $html.on('show.zf.tooltip', function () {\n        plugin.template.should.be.visible;\n        done();\n      });\n      plugin.show();\n    });\n  });\n  describe('hide()', function () {\n    it('hides the tooltip', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {}); // Show first\n\n      plugin.show();\n      plugin.hide();\n      plugin.template.should.be.hidden;\n      plugin.template.should.have.attr('aria-hidden', 'true');\n    });\n    it('fires hide.zf.tooltip event', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {}); // Open it first\n\n      plugin.show();\n      $html.on('hide.zf.tooltip', function () {\n        plugin.template.should.be.hidden;\n        done();\n      });\n      plugin.hide();\n    });\n  });\n  describe('toggle()', function () {\n    it('shows a hidden tooltip', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n      plugin.toggle();\n      plugin.template.should.be.visible;\n      plugin.template.should.have.attr('aria-hidden', 'false');\n    });\n    it('hides a visible tooltip', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {}); // Show first\n\n      plugin.show();\n      plugin.toggle();\n      plugin.template.should.be.hidden;\n      plugin.template.should.have.attr('aria-hidden', 'true');\n    });\n  });\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/test/javascript/components/tooltip.js"],"names":["describe","plugin","$html","template","Foundation","Tooltip","defaults","showOn","fadeOutDuration","fadeInDuration","afterEach","destroy","remove","it","$","appendTo","$element","should","be","an","options","text","equal","tipText","have","class","triggerClass","attr","templateClasses","show","visible","done","on","hide","hidden","toggle"],"mappings":"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","file":"packages/zurb:foundation-sites/test/javascript/components/tooltip.js.map","sourcesContent":["describe('Tooltip', function() {\n  var plugin;\n  var $html;\n  var template = `\n    <span data-tooltip aria-haspopup=\"true\" class=\"has-tip\" tabindex=\"1\" title=\"TOOLTIP_CONTENT\">\n      TEXT\n    </span>`;\n  Foundation.Tooltip.defaults.showOn = 'all';\n  Foundation.Tooltip.defaults.fadeOutDuration = 0;\n  Foundation.Tooltip.defaults.fadeInDuration = 0;\n\n  afterEach(function() {\n    plugin.destroy();\n    $html.remove();\n  });\n\n  describe('constructor()', function() {\n    it('stores the element and plugin options', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n\n  describe('init()', function() {\n\n    it('has value of title attribute as content', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n\n      plugin.template.text().should.equal('TOOLTIP_CONTENT');\n    });\n\n    it('has value of tipText option as content', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {tipText: 'TOOLTIP_CONTENT_OPTION'});\n\n      plugin.template.text().should.equal('TOOLTIP_CONTENT_OPTION');\n    });\n\n    it('uses value of template option as template', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {template: '<div class=\"TEMPLATE_OPTION\"></div>'});\n\n      plugin.template.should.have.class('TEMPLATE_OPTION');\n    });\n\n    it('uses value of triggerClass option as trigger class', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {triggerClass: 'TRIGGER_CLASS_OPTION'});\n\n      plugin.$element.should.have.class('TRIGGER_CLASS_OPTION');\n    });\n\n    it('sets ARIA attributes', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n\n      plugin.$element.should.have.attr('aria-describedby', plugin.template.attr('id'));\n      plugin.template.should.have.attr('aria-hidden', 'true');\n      plugin.template.should.have.attr('role', 'tooltip');\n    });\n\n  });\n\n  describe('buildTemplate()', function() {\n    it('uses value of templateClasses option as template class', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {templateClasses: 'TOOLTIP_CLASS_OPTION'});\n\n      plugin.template.should.have.class('TOOLTIP_CLASS_OPTION');\n    });\n  });\n\n  describe('show()', function() {\n    it('shows the tooltip', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n\n      plugin.show();\n\n      plugin.template.should.be.visible;\n      plugin.template.should.have.attr('aria-hidden', 'false');\n    });\n\n    it('fires show.zf.tooltip event', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n\n      $html.on('show.zf.tooltip', function() {\n        plugin.template.should.be.visible;\n        done();\n      });\n\n      plugin.show();\n    });\n  });\n\n  describe('hide()', function() {\n    it('hides the tooltip', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n\n      // Show first\n      plugin.show();\n\n      plugin.hide();\n\n      plugin.template.should.be.hidden;\n      plugin.template.should.have.attr('aria-hidden', 'true');\n    });\n\n    it('fires hide.zf.tooltip event', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n\n      // Open it first\n      plugin.show();\n\n      $html.on('hide.zf.tooltip', function() {\n        plugin.template.should.be.hidden;\n        done();\n      });\n\n      plugin.hide();\n    });\n  });\n\n  describe('toggle()', function() {\n    it('shows a hidden tooltip', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n\n      plugin.toggle();\n      plugin.template.should.be.visible;\n      plugin.template.should.have.attr('aria-hidden', 'false');\n    });\n    it('hides a visible tooltip', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.Tooltip($html, {});\n\n      // Show first\n      plugin.show();\n\n      plugin.toggle();\n      plugin.template.should.be.hidden;\n      plugin.template.should.have.attr('aria-hidden', 'true');\n    });\n  });\n\n});"]},"hash":"c8cde769b26614d1aa467330ad369f101ce30eec"}
