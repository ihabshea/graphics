{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/test/javascript/components/abide.js","filenameRelative":"packages/zurb:foundation-sites/test/javascript/components/abide.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/test/javascript/components/abide.js.map","sourceFileName":"packages/zurb:foundation-sites/test/javascript/components/abide.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"abide"},"ignored":false,"code":"/* jslint mocha: true */ /*global describe, it, before, beforeEach, after, afterEach, $, Foundation */describe('Abide', function () {\n  var plugin;\n  var $html;\n  afterEach(function () {\n    plugin.destroy();\n    $html.remove();\n  });\n  describe('constructor()', function () {\n    it('stores the element & plugin options', function () {\n      $html = $('<form data-abide novalidate></form>').appendTo('body');\n      plugin = new Foundation.Abide($html, {});\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n  describe('validateInput()', function () {\n    it('returns true for hidden inputs', function () {\n      $html = $(\"<form data-abide novalidate><input type='hidden' required></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n    it('returns true for inputs with [data-abide-ignore]', function () {\n      $html = $(\"<form data-abide novalidate><input type='text' required data-abide-ignore></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n    it('returns true for checked checkboxes', function () {\n      $html = $(\"<form data-abide><input type='checkbox' required checked='checked'></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n    it('returns false for unchecked checkboxes', function () {\n      $html = $(\"<form data-abide><input type='checkbox' required></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n      plugin.validateInput($html.find(\"input\")).should.equal(false);\n    });\n    it('returns true for selected select option', function () {\n      $html = $(\"<form data-abide><select required><option value=''></option><option value='One'>One</option><option value='Two' selected='selected'>Two</option></select></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n      plugin.validateInput($html.find(\"select\")).should.equal(true);\n      $html.find(\"select\").val().should.equal(\"Two\");\n    });\n    it('returns false for unselected select option', function () {\n      $html = $(\"<form data-abide><select required><option value=''></option><option value='One'>One</option><option value='Two'>Two</option></select></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n      plugin.validateInput($html.find(\"select\")).should.equal(false);\n    });\n  });\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/test/javascript/components/abide.js"],"names":["describe","plugin","$html","afterEach","destroy","remove","it","$","appendTo","Foundation","Abide","$element","should","be","an","options","validateInput","find","equal","val"],"mappings":"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","file":"packages/zurb:foundation-sites/test/javascript/components/abide.js.map","sourcesContent":["/* jslint mocha: true */\n/*global describe, it, before, beforeEach, after, afterEach, $, Foundation */\n\ndescribe('Abide', function() {\n  var plugin;\n  var $html;\n\n  afterEach(function() {\n    plugin.destroy();\n    $html.remove();\n  });\n\n  describe('constructor()', function() {\n    it('stores the element & plugin options', function() {\n      $html = $('<form data-abide novalidate></form>').appendTo('body');\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n\n  describe('validateInput()', function() {\n    it('returns true for hidden inputs', function() {\n      $html = $(\"<form data-abide novalidate><input type='hidden' required></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n\n    it('returns true for inputs with [data-abide-ignore]', function() {\n      $html = $(\"<form data-abide novalidate><input type='text' required data-abide-ignore></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n\n    it('returns true for checked checkboxes', function() {\n      $html = $(\"<form data-abide><input type='checkbox' required checked='checked'></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n\n    it('returns false for unchecked checkboxes', function() {\n      $html = $(\"<form data-abide><input type='checkbox' required></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"input\")).should.equal(false);\n    });\n\n    it('returns true for selected select option', function() {\n      $html = $(\"<form data-abide><select required><option value=''></option><option value='One'>One</option><option value='Two' selected='selected'>Two</option></select></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"select\")).should.equal(true);\n      $html.find(\"select\").val().should.equal(\"Two\");\n    });\n\n    it('returns false for unselected select option', function() {\n      $html = $(\"<form data-abide><select required><option value=''></option><option value='One'>One</option><option value='Two'>Two</option></select></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"select\")).should.equal(false);\n    });\n  });\n});\n"]},"hash":"20a5891ce12cf769aa6ad5542194acaec2f7e513"}
