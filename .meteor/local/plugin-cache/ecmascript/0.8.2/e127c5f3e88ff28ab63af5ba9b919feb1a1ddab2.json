{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"jquery","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"$"}]},{"source":"./foundation.util.keyboard","imported":["Keyboard"],"specifiers":[{"kind":"named","imported":"Keyboard","local":"Keyboard"}]},{"source":"./foundation.util.core","imported":["GetYoDigits"],"specifiers":[{"kind":"named","imported":"GetYoDigits","local":"GetYoDigits"}]},{"source":"./foundation.positionable","imported":["Positionable"],"specifiers":[{"kind":"named","imported":"Positionable","local":"Positionable"}]},{"source":"./foundation.util.triggers","imported":["Triggers"],"specifiers":[{"kind":"named","imported":"Triggers","local":"Triggers"}]}],"exports":{"exported":["Dropdown"],"specifiers":[{"kind":"local","local":"Dropdown","exported":"Dropdown"}]}}},"options":{"filename":"packages/zurb:foundation-sites/js/foundation.dropdown.js","filenameRelative":"packages/zurb:foundation-sites/js/foundation.dropdown.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/js/foundation.dropdown.js.map","sourceFileName":"packages/zurb:foundation-sites/js/foundation.dropdown.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.dropdown"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar module1 = module;\nmodule1.export({\n  Dropdown: function () {\n    return Dropdown;\n  }\n});\nvar $ = void 0;\nmodule1.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 0);\nvar Keyboard = void 0;\nmodule1.watch(require(\"./foundation.util.keyboard\"), {\n  Keyboard: function (v) {\n    Keyboard = v;\n  }\n}, 1);\nvar GetYoDigits = void 0;\nmodule1.watch(require(\"./foundation.util.core\"), {\n  GetYoDigits: function (v) {\n    GetYoDigits = v;\n  }\n}, 2);\nvar Positionable = void 0;\nmodule1.watch(require(\"./foundation.positionable\"), {\n  Positionable: function (v) {\n    Positionable = v;\n  }\n}, 3);\nvar Triggers = void 0;\nmodule1.watch(require(\"./foundation.util.triggers\"), {\n  Triggers: function (v) {\n    Triggers = v;\n  }\n}, 4);\n\n/**\n * Dropdown module.\n * @module foundation.dropdown\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n */var Dropdown = function (_Positionable) {\n  (0, _inherits3.default)(Dropdown, _Positionable);\n\n  function Dropdown() {\n    (0, _classCallCheck3.default)(this, Dropdown);\n    return (0, _possibleConstructorReturn3.default)(this, _Positionable.apply(this, arguments));\n  }\n\n  /**\n   * Creates a new instance of a dropdown.\n   * @class\n   * @name Dropdown\n   * @param {jQuery} element - jQuery object to make into a dropdown.\n   *        Object should be of the dropdown panel, rather than its anchor.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */Dropdown.prototype._setup = function () {\n    function _setup(element, options) {\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this.className = 'Dropdown'; // ie9 back compat\n      // Triggers init is idempotent, just need to make sure it is initialized\n\n      Triggers.init($);\n\n      this._init();\n\n      Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close'\n      });\n    }\n\n    return _setup;\n  }(); /**\n        * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n        * @function\n        * @private\n        */\n\n  Dropdown.prototype._init = function () {\n    function _init() {\n      var $id = this.$element.attr('id');\n      this.$anchor = $(\"[data-toggle=\\\"\" + $id + \"\\\"]\").length ? $(\"[data-toggle=\\\"\" + $id + \"\\\"]\") : $(\"[data-open=\\\"\" + $id + \"\\\"]\");\n      this.$anchor.attr({\n        'aria-controls': $id,\n        'data-is-focus': false,\n        'data-yeti-box': $id,\n        'aria-haspopup': true,\n        'aria-expanded': false\n      });\n\n      if (this.options.parentClass) {\n        this.$parent = this.$element.parents('.' + this.options.parentClass);\n      } else {\n        this.$parent = null;\n      }\n\n      this.$element.attr({\n        'aria-hidden': 'true',\n        'data-yeti-box': $id,\n        'data-resize': $id,\n        'aria-labelledby': this.$anchor[0].id || GetYoDigits(6, 'dd-anchor')\n      });\n\n      _Positionable.prototype._init.call(this);\n\n      this._events();\n    }\n\n    return _init;\n  }();\n\n  Dropdown.prototype._getDefaultPosition = function () {\n    function _getDefaultPosition() {\n      // handle legacy classnames\n      var position = this.$element[0].className.match(/(top|left|right|bottom)/g);\n\n      if (position) {\n        return position[0];\n      } else {\n        return 'bottom';\n      }\n    }\n\n    return _getDefaultPosition;\n  }();\n\n  Dropdown.prototype._getDefaultAlignment = function () {\n    function _getDefaultAlignment() {\n      // handle legacy float approach\n      var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\n\n      if (horizontalPosition) {\n        return horizontalPosition[1];\n      }\n\n      return _Positionable.prototype._getDefaultAlignment.call(this);\n    }\n\n    return _getDefaultAlignment;\n  }(); /**\n        * Sets the position and orientation of the dropdown pane, checks for collisions if allow-overlap is not true.\n        * Recursively calls itself if a collision is detected, with a new position class.\n        * @function\n        * @private\n        */\n\n  Dropdown.prototype._setPosition = function () {\n    function _setPosition() {\n      _Positionable.prototype._setPosition.call(this, this.$anchor, this.$element, this.$parent);\n    }\n\n    return _setPosition;\n  }(); /**\n        * Adds event listeners to the element utilizing the triggers utility library.\n        * @function\n        * @private\n        */\n\n  Dropdown.prototype._events = function () {\n    function _events() {\n      var _this = this;\n\n      this.$element.on({\n        'open.zf.trigger': this.open.bind(this),\n        'close.zf.trigger': this.close.bind(this),\n        'toggle.zf.trigger': this.toggle.bind(this),\n        'resizeme.zf.trigger': this._setPosition.bind(this)\n      });\n\n      if (this.options.hover) {\n        this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n          var bodyData = $('body').data();\n\n          if (typeof bodyData.whatinput === 'undefined' || bodyData.whatinput === 'mouse') {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.open();\n\n              _this.$anchor.data('hover', true);\n            }, _this.options.hoverDelay);\n          }\n        }).on('mouseleave.zf.dropdown', function () {\n          clearTimeout(_this.timeout);\n          _this.timeout = setTimeout(function () {\n            _this.close();\n\n            _this.$anchor.data('hover', false);\n          }, _this.options.hoverDelay);\n        });\n\n        if (this.options.hoverPane) {\n          this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n        }\n      }\n\n      this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n        var $target = $(this),\n            visibleFocusableElements = Keyboard.findFocusable(_this.$element);\n        Keyboard.handleKey(e, 'Dropdown', {\n          open: function () {\n            if ($target.is(_this.$anchor)) {\n              _this.open();\n\n              _this.$element.attr('tabindex', -1).focus();\n\n              e.preventDefault();\n            }\n          },\n          close: function () {\n            _this.close();\n\n            _this.$anchor.focus();\n          }\n        });\n      });\n    }\n\n    return _events;\n  }(); /**\n        * Adds an event handler to the body to close any dropdowns on a click.\n        * @function\n        * @private\n        */\n\n  Dropdown.prototype._addBodyHandler = function () {\n    function _addBodyHandler() {\n      var $body = $(document.body).not(this.$element),\n          _this = this;\n\n      $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n        if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n          return;\n        }\n\n        if (_this.$element.find(e.target).length) {\n          return;\n        }\n\n        _this.close();\n\n        $body.off('click.zf.dropdown');\n      });\n    }\n\n    return _addBodyHandler;\n  }(); /**\n        * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n        * @function\n        * @fires Dropdown#closeme\n        * @fires Dropdown#show\n        */\n\n  Dropdown.prototype.open = function () {\n    function open() {\n      // var _this = this;\n      /**\n       * Fires to close other open dropdowns, typically when dropdown is opening\n       * @event Dropdown#closeme\n       */this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n      this.$anchor.addClass('hover').attr({\n        'aria-expanded': true\n      }); // this.$element/*.show()*/;\n\n      this.$element.addClass('is-opening');\n\n      this._setPosition();\n\n      this.$element.removeClass('is-opening').addClass('is-open').attr({\n        'aria-hidden': false\n      });\n\n      if (this.options.autoFocus) {\n        var $focusable = Keyboard.findFocusable(this.$element);\n\n        if ($focusable.length) {\n          $focusable.eq(0).focus();\n        }\n      }\n\n      if (this.options.closeOnClick) {\n        this._addBodyHandler();\n      }\n\n      if (this.options.trapFocus) {\n        Keyboard.trapFocus(this.$element);\n      } /**\n         * Fires once the dropdown is visible.\n         * @event Dropdown#show\n         */\n\n      this.$element.trigger('show.zf.dropdown', [this.$element]);\n    }\n\n    return open;\n  }(); /**\n        * Closes the open dropdown pane.\n        * @function\n        * @fires Dropdown#hide\n        */\n\n  Dropdown.prototype.close = function () {\n    function close() {\n      if (!this.$element.hasClass('is-open')) {\n        return false;\n      }\n\n      this.$element.removeClass('is-open').attr({\n        'aria-hidden': true\n      });\n      this.$anchor.removeClass('hover').attr('aria-expanded', false); /**\n                                                                       * Fires once the dropdown is no longer visible.\n                                                                       * @event Dropdown#hide\n                                                                       */\n      this.$element.trigger('hide.zf.dropdown', [this.$element]);\n\n      if (this.options.trapFocus) {\n        Keyboard.releaseFocus(this.$element);\n      }\n    }\n\n    return close;\n  }(); /**\n        * Toggles the dropdown pane's visibility.\n        * @function\n        */\n\n  Dropdown.prototype.toggle = function () {\n    function toggle() {\n      if (this.$element.hasClass('is-open')) {\n        if (this.$anchor.data('hover')) return;\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n\n    return toggle;\n  }(); /**\n        * Destroys the dropdown.\n        * @function\n        */\n\n  Dropdown.prototype._destroy = function () {\n    function _destroy() {\n      this.$element.off('.zf.trigger').hide();\n      this.$anchor.off('.zf.dropdown');\n      $(document.body).off('click.zf.dropdown');\n    }\n\n    return _destroy;\n  }();\n\n  return Dropdown;\n}(Positionable);\n\nDropdown.defaults = {\n  /**\n   * Class that designates bounding container of Dropdown (default: window)\n   * @option\n   * @type {?string}\n   * @default null\n   */parentClass: null,\n  /**\n   * Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @type {number}\n   * @default 250\n   */hoverDelay: 250,\n  /**\n   * Allow submenus to open on hover events\n   * @option\n   * @type {boolean}\n   * @default false\n   */hover: false,\n  /**\n   * Don't close dropdown when hovering over dropdown pane\n   * @option\n   * @type {boolean}\n   * @default false\n   */hoverPane: false,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @type {number}\n   * @default 0\n   */vOffset: 0,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @type {number}\n   * @default 0\n   */hOffset: 0,\n  /**\n   * DEPRECATED: Class applied to adjust open position.\n   * @option\n   * @type {string}\n   * @default ''\n   */positionClass: '',\n  /**\n   * Position of dropdown. Can be left, right, bottom, top, or auto.\n   * @option\n   * @type {string}\n   * @default 'auto'\n   */position: 'auto',\n  /**\n   * Alignment of dropdown relative to anchor. Can be left, right, bottom, top, center, or auto.\n   * @option\n   * @type {string}\n   * @default 'auto'\n   */alignment: 'auto',\n  /**\n   * Allow overlap of container/window. If false, dropdown will first try to position as defined by data-position and data-alignment, but reposition if it would cause an overflow.\n   * @option\n   * @type {boolean}\n   * @default false\n   */allowOverlap: false,\n  /**\n   * Allow overlap of only the bottom of the container. This is the most common\n   * behavior for dropdowns, allowing the dropdown to extend the bottom of the\n   * screen but not otherwise influence or break out of the container.\n   * @option\n   * @type {boolean}\n   * @default true\n   */allowBottomOverlap: true,\n  /**\n   * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n   * @option\n   * @type {boolean}\n   * @default false\n   */trapFocus: false,\n  /**\n   * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n   * @option\n   * @type {boolean}\n   * @default false\n   */autoFocus: false,\n  /**\n   * Allows a click on the body to close the dropdown.\n   * @option\n   * @type {boolean}\n   * @default false\n   */closeOnClick: false\n};","map":{"version":3,"sources":["packages/zurb:foundation-sites/js/foundation.dropdown.js"],"names":["module1","module","export","Dropdown","$","watch","require","v","Keyboard","GetYoDigits","Positionable","Triggers","_setup","element","options","$element","extend","defaults","data","className","init","_init","register","$id","attr","$anchor","length","parentClass","$parent","parents","id","_events","_getDefaultPosition","position","match","_getDefaultAlignment","horizontalPosition","exec","_setPosition","_this","on","open","bind","close","toggle","hover","off","bodyData","whatinput","clearTimeout","timeout","setTimeout","hoverDelay","hoverPane","add","e","$target","visibleFocusableElements","findFocusable","handleKey","is","focus","preventDefault","_addBodyHandler","$body","document","body","not","target","find","trigger","addClass","removeClass","autoFocus","$focusable","eq","closeOnClick","trapFocus","hasClass","releaseFocus","_destroy","hide","vOffset","hOffset","positionClass","alignment","allowOverlap","allowBottomOverlap"],"mappings":"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","file":"packages/zurb:foundation-sites/js/foundation.dropdown.js.map","sourcesContent":["'use strict';\n\nimport $ from 'jquery';\nimport { Keyboard } from './foundation.util.keyboard';\nimport { GetYoDigits } from './foundation.util.core';\nimport { Positionable } from './foundation.positionable';\n\nimport { Triggers } from './foundation.util.triggers';\n\n\n/**\n * Dropdown module.\n * @module foundation.dropdown\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n */\nclass Dropdown extends Positionable {\n  /**\n   * Creates a new instance of a dropdown.\n   * @class\n   * @name Dropdown\n   * @param {jQuery} element - jQuery object to make into a dropdown.\n   *        Object should be of the dropdown panel, rather than its anchor.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n    this.className = 'Dropdown'; // ie9 back compat\n\n    // Triggers init is idempotent, just need to make sure it is initialized\n    Triggers.init($);\n\n    this._init();\n\n    Keyboard.register('Dropdown', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ESCAPE': 'close'\n    });\n  }\n\n  /**\n   * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n   * @function\n   * @private\n   */\n  _init() {\n    var $id = this.$element.attr('id');\n\n    this.$anchor = $(`[data-toggle=\"${$id}\"]`).length ? $(`[data-toggle=\"${$id}\"]`) : $(`[data-open=\"${$id}\"]`);\n    this.$anchor.attr({\n      'aria-controls': $id,\n      'data-is-focus': false,\n      'data-yeti-box': $id,\n      'aria-haspopup': true,\n      'aria-expanded': false\n\n    });\n\n    if(this.options.parentClass){\n      this.$parent = this.$element.parents('.' + this.options.parentClass);\n    }else{\n      this.$parent = null;\n    }\n\n    this.$element.attr({\n      'aria-hidden': 'true',\n      'data-yeti-box': $id,\n      'data-resize': $id,\n      'aria-labelledby': this.$anchor[0].id || GetYoDigits(6, 'dd-anchor')\n    });\n    super._init();\n    this._events();\n  }\n\n  _getDefaultPosition() {\n    // handle legacy classnames\n    var position = this.$element[0].className.match(/(top|left|right|bottom)/g);\n    if(position) {\n      return position[0];\n    } else {\n      return 'bottom'\n    }\n  }\n\n  _getDefaultAlignment() {\n    // handle legacy float approach\n    var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\n    if(horizontalPosition) {\n      return horizontalPosition[1];\n    }\n\n    return super._getDefaultAlignment();\n  }\n\n\n\n  /**\n   * Sets the position and orientation of the dropdown pane, checks for collisions if allow-overlap is not true.\n   * Recursively calls itself if a collision is detected, with a new position class.\n   * @function\n   * @private\n   */\n  _setPosition() {\n    super._setPosition(this.$anchor, this.$element, this.$parent);\n  }\n\n  /**\n   * Adds event listeners to the element utilizing the triggers utility library.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': this._setPosition.bind(this)\n    });\n\n    if(this.options.hover){\n      this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\n      .on('mouseenter.zf.dropdown', function(){\n        var bodyData = $('body').data();\n        if(typeof(bodyData.whatinput) === 'undefined' || bodyData.whatinput === 'mouse') {\n          clearTimeout(_this.timeout);\n          _this.timeout = setTimeout(function(){\n            _this.open();\n            _this.$anchor.data('hover', true);\n          }, _this.options.hoverDelay);\n        }\n      }).on('mouseleave.zf.dropdown', function(){\n        clearTimeout(_this.timeout);\n        _this.timeout = setTimeout(function(){\n          _this.close();\n          _this.$anchor.data('hover', false);\n        }, _this.options.hoverDelay);\n      });\n      if(this.options.hoverPane){\n        this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\n            .on('mouseenter.zf.dropdown', function(){\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function(){\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function(){\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n      }\n    }\n    this.$anchor.add(this.$element).on('keydown.zf.dropdown', function(e) {\n\n      var $target = $(this),\n        visibleFocusableElements = Keyboard.findFocusable(_this.$element);\n\n      Keyboard.handleKey(e, 'Dropdown', {\n        open: function() {\n          if ($target.is(_this.$anchor)) {\n            _this.open();\n            _this.$element.attr('tabindex', -1).focus();\n            e.preventDefault();\n          }\n        },\n        close: function() {\n          _this.close();\n          _this.$anchor.focus();\n        }\n      });\n    });\n  }\n\n  /**\n   * Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private\n   */\n  _addBodyHandler() {\n     var $body = $(document.body).not(this.$element),\n         _this = this;\n     $body.off('click.zf.dropdown')\n          .on('click.zf.dropdown', function(e){\n            if(_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n              return;\n            }\n            if(_this.$element.find(e.target).length) {\n              return;\n            }\n            _this.close();\n            $body.off('click.zf.dropdown');\n          });\n  }\n\n  /**\n   * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n   * @function\n   * @fires Dropdown#closeme\n   * @fires Dropdown#show\n   */\n  open() {\n    // var _this = this;\n    /**\n     * Fires to close other open dropdowns, typically when dropdown is opening\n     * @event Dropdown#closeme\n     */\n    this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n    this.$anchor.addClass('hover')\n        .attr({'aria-expanded': true});\n    // this.$element/*.show()*/;\n\n    this.$element.addClass('is-opening');\n    this._setPosition();\n    this.$element.removeClass('is-opening').addClass('is-open')\n        .attr({'aria-hidden': false});\n\n    if(this.options.autoFocus){\n      var $focusable = Keyboard.findFocusable(this.$element);\n      if($focusable.length){\n        $focusable.eq(0).focus();\n      }\n    }\n\n    if(this.options.closeOnClick){ this._addBodyHandler(); }\n\n    if (this.options.trapFocus) {\n      Keyboard.trapFocus(this.$element);\n    }\n\n    /**\n     * Fires once the dropdown is visible.\n     * @event Dropdown#show\n     */\n    this.$element.trigger('show.zf.dropdown', [this.$element]);\n  }\n\n  /**\n   * Closes the open dropdown pane.\n   * @function\n   * @fires Dropdown#hide\n   */\n  close() {\n    if(!this.$element.hasClass('is-open')){\n      return false;\n    }\n    this.$element.removeClass('is-open')\n        .attr({'aria-hidden': true});\n\n    this.$anchor.removeClass('hover')\n        .attr('aria-expanded', false);\n\n    /**\n     * Fires once the dropdown is no longer visible.\n     * @event Dropdown#hide\n     */\n    this.$element.trigger('hide.zf.dropdown', [this.$element]);\n\n    if (this.options.trapFocus) {\n      Keyboard.releaseFocus(this.$element);\n    }\n  }\n\n  /**\n   * Toggles the dropdown pane's visibility.\n   * @function\n   */\n  toggle() {\n    if(this.$element.hasClass('is-open')){\n      if(this.$anchor.data('hover')) return;\n      this.close();\n    }else{\n      this.open();\n    }\n  }\n\n  /**\n   * Destroys the dropdown.\n   * @function\n   */\n  _destroy() {\n    this.$element.off('.zf.trigger').hide();\n    this.$anchor.off('.zf.dropdown');\n    $(document.body).off('click.zf.dropdown');\n\n  }\n}\n\nDropdown.defaults = {\n  /**\n   * Class that designates bounding container of Dropdown (default: window)\n   * @option\n   * @type {?string}\n   * @default null\n   */\n  parentClass: null,\n  /**\n   * Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @type {number}\n   * @default 250\n   */\n  hoverDelay: 250,\n  /**\n   * Allow submenus to open on hover events\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  hover: false,\n  /**\n   * Don't close dropdown when hovering over dropdown pane\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  hoverPane: false,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  vOffset: 0,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  hOffset: 0,\n  /**\n   * DEPRECATED: Class applied to adjust open position.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  positionClass: '',\n\n  /**\n   * Position of dropdown. Can be left, right, bottom, top, or auto.\n   * @option\n   * @type {string}\n   * @default 'auto'\n   */\n  position: 'auto',\n  /**\n   * Alignment of dropdown relative to anchor. Can be left, right, bottom, top, center, or auto.\n   * @option\n   * @type {string}\n   * @default 'auto'\n   */\n  alignment: 'auto',\n  /**\n   * Allow overlap of container/window. If false, dropdown will first try to position as defined by data-position and data-alignment, but reposition if it would cause an overflow.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  allowOverlap: false,\n  /**\n   * Allow overlap of only the bottom of the container. This is the most common\n   * behavior for dropdowns, allowing the dropdown to extend the bottom of the\n   * screen but not otherwise influence or break out of the container.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  allowBottomOverlap: true,\n  /**\n   * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  trapFocus: false,\n  /**\n   * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  autoFocus: false,\n  /**\n   * Allows a click on the body to close the dropdown.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  closeOnClick: false\n}\n\nexport {Dropdown};\n"]},"hash":"e127c5f3e88ff28ab63af5ba9b919feb1a1ddab2"}
