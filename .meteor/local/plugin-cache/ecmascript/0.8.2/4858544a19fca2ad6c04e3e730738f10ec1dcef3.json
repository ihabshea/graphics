{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/websockets-binary.js","filenameRelative":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/websockets-binary.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/websockets-binary.js.map","sourceFileName":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/websockets-binary.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"websockets-binary"},"ignored":false,"code":"// binaryType is truthy if there is support.. returns \"blob\" in new-ish chrome.\n// plus.google.com/115535723976198353696/posts/ERN6zYozENV\n// github.com/Modernizr/Modernizr/issues/370\nModernizr.addTest('websocketsbinary', function () {\n  var protocol = 'https:' == location.protocol ? 'wss' : 'ws',\n      protoBin;\n\n  if ('WebSocket' in window) {\n    if (protoBin = 'binaryType' in WebSocket.prototype) {\n      return protoBin;\n    }\n\n    try {\n      return !!new WebSocket(protocol + '://.').binaryType;\n    } catch (e) {}\n  }\n\n  return false;\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/vendor/modernizr/feature-detects/websockets-binary.js"],"names":["Modernizr","addTest","protocol","location","protoBin","window","WebSocket","prototype","binaryType","e"],"mappings":"AACA;AACA;AACA;AAEAA,UAAUC,OAAV,CAAkB,kBAAlB,EAAsC,YAAW;AAC/C,MAAIC,WAAW,YAAUC,SAASD,QAAnB,GAA4B,KAA5B,GAAkC,IAAjD;AAAA,MACAE,QADA;;AAGA,MAAG,eAAeC,MAAlB,EAA0B;AACxB,QAAID,WAAW,gBAAgBE,UAAUC,SAAzC,EAAqD;AACnD,aAAOH,QAAP;AACD;;AACD,QAAI;AACF,aAAO,CAAC,CAAE,IAAIE,SAAJ,CAAcJ,WAAS,MAAvB,EAA+BM,UAAzC;AACD,KAFD,CAEE,OAAOC,CAAP,EAAS,CAAE;AACd;;AAED,SAAO,KAAP;AACD,CAdD","file":"packages/zurb:foundation-sites/vendor/modernizr/feature-detects/websockets-binary.js.map","sourcesContent":["\n// binaryType is truthy if there is support.. returns \"blob\" in new-ish chrome.\n// plus.google.com/115535723976198353696/posts/ERN6zYozENV\n// github.com/Modernizr/Modernizr/issues/370\n\nModernizr.addTest('websocketsbinary', function() {\n  var protocol = 'https:'==location.protocol?'wss':'ws',\n  protoBin;\n\n  if('WebSocket' in window) {\n    if( protoBin = 'binaryType' in WebSocket.prototype ) {\n      return protoBin;\n    }\n    try {\n      return !!(new WebSocket(protocol+'://.').binaryType);\n    } catch (e){}\n  }\n\n  return false;\n});\n"]},"hash":"4858544a19fca2ad6c04e3e730738f10ec1dcef3"}
