{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/bower_components/jquery/src/css/adjustCSS.js","filenameRelative":"packages/zurb:foundation-sites/bower_components/jquery/src/css/adjustCSS.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/bower_components/jquery/src/css/adjustCSS.js.map","sourceFileName":"packages/zurb:foundation-sites/bower_components/jquery/src/css/adjustCSS.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"adjustCSS"},"ignored":false,"code":"define([\"../core\", \"../var/rcssNum\"], function (jQuery, rcssNum) {\n\tfunction adjustCSS(elem, prop, valueParts, tween) {\n\t\tvar adjusted,\n\t\t    scale = 1,\n\t\t    maxIterations = 20,\n\t\t    currentValue = tween ? function () {\n\t\t\treturn tween.cur();\n\t\t} : function () {\n\t\t\treturn jQuery.css(elem, prop, \"\");\n\t\t},\n\t\t    initial = currentValue(),\n\t\t    unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n\t\t    // Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n\t\tif (initialInUnit && initialInUnit[3] !== unit) {\n\t\t\t// Trust units reported by jQuery.css\n\t\t\tunit = unit || initialInUnit[3]; // Make sure we update the tween properties later on\n\n\t\t\tvalueParts = valueParts || []; // Iteratively approximate from a nonzero starting point\n\n\t\t\tinitialInUnit = +initial || 1;\n\n\t\t\tdo {\n\t\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\t\tscale = scale || \".5\"; // Adjust and apply\n\n\t\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\t\tjQuery.style(elem, prop, initialInUnit + unit); // Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t\t} while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);\n\t\t}\n\n\t\tif (valueParts) {\n\t\t\tinitialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n\t\t\tadjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n\t\t\tif (tween) {\n\t\t\t\ttween.unit = unit;\n\t\t\t\ttween.start = initialInUnit;\n\t\t\t\ttween.end = adjusted;\n\t\t\t}\n\t\t}\n\n\t\treturn adjusted;\n\t}\n\n\treturn adjustCSS;\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/bower_components/jquery/src/css/adjustCSS.js"],"names":["define","jQuery","rcssNum","adjustCSS","elem","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","cur","css","initial","unit","cssNumber","initialInUnit","exec","style","start","end"],"mappings":"AAAAA,OAAQ,CACP,SADO,EAEP,gBAFO,CAAR,EAGG,UAAUC,MAAV,EAAkBC,OAAlB,EAA4B;AAE/B,UAASC,SAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,UAAhC,EAA4CC,KAA5C,EAAoD;AACnD,MAAIC,QAAJ;AAAA,MACCC,QAAQ,CADT;AAAA,MAECC,gBAAgB,EAFjB;AAAA,MAGCC,eAAeJ,QACd,YAAW;AAAE,UAAOA,MAAMK,GAAN,EAAP;AAAqB,GADpB,GAEd,YAAW;AAAE,UAAOX,OAAOY,GAAP,CAAYT,IAAZ,EAAkBC,IAAlB,EAAwB,EAAxB,CAAP;AAAsC,GALrD;AAAA,MAMCS,UAAUH,cANX;AAAA,MAOCI,OAAOT,cAAcA,WAAY,CAAZ,CAAd,KAAmCL,OAAOe,SAAP,CAAkBX,IAAlB,IAA2B,EAA3B,GAAgC,IAAnE,CAPR;AAAA,MASC;AACAY,kBAAgB,CAAEhB,OAAOe,SAAP,CAAkBX,IAAlB,KAA4BU,SAAS,IAAT,IAAiB,CAACD,OAAhD,KACfZ,QAAQgB,IAAR,CAAcjB,OAAOY,GAAP,CAAYT,IAAZ,EAAkBC,IAAlB,CAAd,CAXF;;AAaA,MAAKY,iBAAiBA,cAAe,CAAf,MAAuBF,IAA7C,EAAoD;AAEnD;AACAA,UAAOA,QAAQE,cAAe,CAAf,CAAf,CAHmD,CAKnD;;AACAX,gBAAaA,cAAc,EAA3B,CANmD,CAQnD;;AACAW,mBAAgB,CAACH,OAAD,IAAY,CAA5B;;AAEA,MAAG;AAEF;AACA;AACAL,YAAQA,SAAS,IAAjB,CAJE,CAMF;;AACAQ,oBAAgBA,gBAAgBR,KAAhC;AACAR,WAAOkB,KAAP,CAAcf,IAAd,EAAoBC,IAApB,EAA0BY,gBAAgBF,IAA1C,EARE,CAUH;AACA;AACC,IAZD,QAaCN,WAAYA,QAAQE,iBAAiBG,OAArC,KAAkDL,UAAU,CAA5D,IAAiE,EAAEC,aAbpE;AAeA;;AAED,MAAKJ,UAAL,EAAkB;AACjBW,mBAAgB,CAACA,aAAD,IAAkB,CAACH,OAAnB,IAA8B,CAA9C,CADiB,CAGjB;;AACAN,cAAWF,WAAY,CAAZ,IACVW,gBAAgB,CAAEX,WAAY,CAAZ,IAAkB,CAApB,IAA0BA,WAAY,CAAZ,CADhC,GAEV,CAACA,WAAY,CAAZ,CAFF;;AAGA,OAAKC,KAAL,EAAa;AACZA,UAAMQ,IAAN,GAAaA,IAAb;AACAR,UAAMa,KAAN,GAAcH,aAAd;AACAV,UAAMc,GAAN,GAAYb,QAAZ;AACA;AACD;;AACD,SAAOA,QAAP;AACA;;AAED,QAAOL,SAAP;AACC,CAhED","file":"packages/zurb:foundation-sites/bower_components/jquery/src/css/adjustCSS.js.map","sourcesContent":["define( [\n\t\"../core\",\n\t\"../var/rcssNum\"\n], function( jQuery, rcssNum ) {\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() { return tween.cur(); } :\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\nreturn adjustCSS;\n} );\n"]},"hash":"fc4cf84dfd7078b1a7ba9c85f2e06d38332a543e"}
