{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/bower_components/jquery/src/core/ready.js","filenameRelative":"packages/zurb:foundation-sites/bower_components/jquery/src/core/ready.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/bower_components/jquery/src/core/ready.js.map","sourceFileName":"packages/zurb:foundation-sites/bower_components/jquery/src/core/ready.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ready"},"ignored":false,"code":"define([\"../core\", \"../var/document\", \"../core/init\", \"../deferred\"], function (jQuery, document) {\n\t// The deferred used on DOM ready\n\tvar readyList;\n\n\tjQuery.fn.ready = function (fn) {\n\t\t// Add the callback\n\t\tjQuery.ready.promise().done(fn);\n\t\treturn this;\n\t};\n\n\tjQuery.extend({\n\t\t// Is the DOM ready to be used? Set to true once it occurs.\n\t\tisReady: false,\n\t\t// A counter to track how many items to wait for before\n\t\t// the ready event fires. See #6781\n\t\treadyWait: 1,\n\t\t// Hold (or release) the ready event\n\t\tholdReady: function (hold) {\n\t\t\tif (hold) {\n\t\t\t\tjQuery.readyWait++;\n\t\t\t} else {\n\t\t\t\tjQuery.ready(true);\n\t\t\t}\n\t\t},\n\t\t// Handle when the DOM is ready\n\t\tready: function (wait) {\n\t\t\t// Abort if there are pending holds or we're already ready\n\t\t\tif (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n\t\t\t\treturn;\n\t\t\t} // Remember that the DOM is ready\n\n\n\t\t\tjQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n\t\t\tif (wait !== true && --jQuery.readyWait > 0) {\n\t\t\t\treturn;\n\t\t\t} // If there are functions bound, to execute\n\n\n\t\t\treadyList.resolveWith(document, [jQuery]); // Trigger any bound ready events\n\n\t\t\tif (jQuery.fn.triggerHandler) {\n\t\t\t\tjQuery(document).triggerHandler(\"ready\");\n\t\t\t\tjQuery(document).off(\"ready\");\n\t\t\t}\n\t\t}\n\t}); /**\n      * The ready event handler and self cleanup method\n      */\n\n\tfunction completed() {\n\t\tdocument.removeEventListener(\"DOMContentLoaded\", completed);\n\t\twindow.removeEventListener(\"load\", completed);\n\t\tjQuery.ready();\n\t}\n\n\tjQuery.ready.promise = function (obj) {\n\t\tif (!readyList) {\n\t\t\treadyList = jQuery.Deferred(); // Catch cases where $(document).ready() is called\n\t\t\t// after the browser event has already occurred.\n\t\t\t// Support: IE9-10 only\n\t\t\t// Older IE sometimes signals \"interactive\" too soon\n\n\t\t\tif (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n\t\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\t\twindow.setTimeout(jQuery.ready);\n\t\t\t} else {\n\t\t\t\t// Use the handy event callback\n\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n\t\t\t\twindow.addEventListener(\"load\", completed);\n\t\t\t}\n\t\t}\n\n\t\treturn readyList.promise(obj);\n\t}; // Kick off the DOM ready check even if the user does not\n\n\n\tjQuery.ready.promise();\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/bower_components/jquery/src/core/ready.js"],"names":["define","jQuery","document","readyList","fn","ready","promise","done","extend","isReady","readyWait","holdReady","hold","wait","resolveWith","triggerHandler","off","completed","removeEventListener","window","obj","Deferred","readyState","documentElement","doScroll","setTimeout","addEventListener"],"mappings":"AAAAA,OAAQ,CACP,SADO,EAEP,iBAFO,EAGP,cAHO,EAIP,aAJO,CAAR,EAKG,UAAUC,MAAV,EAAkBC,QAAlB,EAA6B;AAEhC;AACA,KAAIC,SAAJ;;AAEAF,QAAOG,EAAP,CAAUC,KAAV,GAAkB,UAAUD,EAAV,EAAe;AAEhC;AACAH,SAAOI,KAAP,CAAaC,OAAb,GAAuBC,IAAvB,CAA6BH,EAA7B;AAEA,SAAO,IAAP;AACA,EAND;;AAQAH,QAAOO,MAAP,CAAe;AAEd;AACAC,WAAS,KAHK;AAKd;AACA;AACAC,aAAW,CAPG;AASd;AACAC,aAAW,UAAUC,IAAV,EAAiB;AAC3B,OAAKA,IAAL,EAAY;AACXX,WAAOS,SAAP;AACA,IAFD,MAEO;AACNT,WAAOI,KAAP,CAAc,IAAd;AACA;AACD,GAhBa;AAkBd;AACAA,SAAO,UAAUQ,IAAV,EAAiB;AAEvB;AACA,OAAKA,SAAS,IAAT,GAAgB,EAAEZ,OAAOS,SAAzB,GAAqCT,OAAOQ,OAAjD,EAA2D;AAC1D;AACA,IALsB,CAOvB;;;AACAR,UAAOQ,OAAP,GAAiB,IAAjB,CARuB,CAUvB;;AACA,OAAKI,SAAS,IAAT,IAAiB,EAAEZ,OAAOS,SAAT,GAAqB,CAA3C,EAA+C;AAC9C;AACA,IAbsB,CAevB;;;AACAP,aAAUW,WAAV,CAAuBZ,QAAvB,EAAiC,CAAED,MAAF,CAAjC,EAhBuB,CAkBvB;;AACA,OAAKA,OAAOG,EAAP,CAAUW,cAAf,EAAgC;AAC/Bd,WAAQC,QAAR,EAAmBa,cAAnB,CAAmC,OAAnC;AACAd,WAAQC,QAAR,EAAmBc,GAAnB,CAAwB,OAAxB;AACA;AACD;AA1Ca,EAAf,EAbgC,CA0DhC;;;;AAGA,UAASC,SAAT,GAAqB;AACpBf,WAASgB,mBAAT,CAA8B,kBAA9B,EAAkDD,SAAlD;AACAE,SAAOD,mBAAP,CAA4B,MAA5B,EAAoCD,SAApC;AACAhB,SAAOI,KAAP;AACA;;AAEDJ,QAAOI,KAAP,CAAaC,OAAb,GAAuB,UAAUc,GAAV,EAAgB;AACtC,MAAK,CAACjB,SAAN,EAAkB;AAEjBA,eAAYF,OAAOoB,QAAP,EAAZ,CAFiB,CAIjB;AACA;AACA;AACA;;AACA,OAAKnB,SAASoB,UAAT,KAAwB,UAAxB,IACFpB,SAASoB,UAAT,KAAwB,SAAxB,IAAqC,CAACpB,SAASqB,eAAT,CAAyBC,QADlE,EAC+E;AAE9E;AACAL,WAAOM,UAAP,CAAmBxB,OAAOI,KAA1B;AAEA,IAND,MAMO;AAEN;AACAH,aAASwB,gBAAT,CAA2B,kBAA3B,EAA+CT,SAA/C,EAHM,CAKN;;AACAE,WAAOO,gBAAP,CAAyB,MAAzB,EAAiCT,SAAjC;AACA;AACD;;AACD,SAAOd,UAAUG,OAAV,CAAmBc,GAAnB,CAAP;AACA,EAzBD,CAnEgC,CA8FhC;;;AACAnB,QAAOI,KAAP,CAAaC,OAAb;AAEC,CAtGD","file":"packages/zurb:foundation-sites/bower_components/jquery/src/core/ready.js.map","sourcesContent":["define( [\n\t\"../core\",\n\t\"../var/document\",\n\t\"../core/init\",\n\t\"../deferred\"\n], function( jQuery, document ) {\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE9-10 only\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n} );\n"]},"hash":"98632a3ba5e79cbc739d1d1ba2113a910f6c6b72"}
