{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/test/javascript/components/offcanvas.js","filenameRelative":"packages/zurb:foundation-sites/test/javascript/components/offcanvas.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/test/javascript/components/offcanvas.js.map","sourceFileName":"packages/zurb:foundation-sites/test/javascript/components/offcanvas.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"offcanvas"},"ignored":false,"code":"describe('Off Canvas', function () {\n  var plugin;\n  var $html;\n  var template = \"<div class=\\\"off-canvas-wrapper\\\">\\n      <div class=\\\"off-canvas-wrapper-inner\\\" data-off-canvas-wrapper>\\n        <div class=\\\"off-canvas position-left\\\" id=\\\"offCanvas\\\" data-off-canvas data-content-scroll=\\\"false\\\">\\n\\n          <!-- Close button -->\\n          <button class=\\\"close-button\\\" aria-label=\\\"Close menu\\\" type=\\\"button\\\" data-close>\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n\\n          <!-- Menu -->\\n          <ul class=\\\"vertical menu\\\">\\n            <li><a href=\\\"#\\\">Foundation</a></li>\\n            <li><a href=\\\"#\\\">Dot</a></li>\\n            <li><a href=\\\"#\\\">ZURB</a></li>\\n            <li><a href=\\\"#\\\">Com</a></li>\\n            <li><a href=\\\"#\\\">Slash</a></li>\\n            <li><a href=\\\"#\\\">Sites</a></li>\\n          </ul>\\n\\n        </div>\\n\\n        <div class=\\\"off-canvas-content\\\" data-off-canvas-content>\\n          <!-- Page content -->\\n          PAGE_CONTENT.\\n\\n          <!-- Triggers -->\\n          <button type=\\\"button\\\" class=\\\"button\\\" data-toggle=\\\"offCanvas\\\">Open Menu</button>\\n        </div>\\n      </div>\\n    </div>\";\n  afterEach(function () {\n    plugin.destroy();\n    $html.remove();\n  });\n  describe('constructor()', function () {\n    it('stores the element and plugin options', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n  describe('init()', function () {\n    it('finds triggers for the Off Canvas', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      plugin.$triggers.length.should.be.equal(1);\n    });\n    it('sets ARIA attributes', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      plugin.$element.should.have.attr('aria-hidden', 'true');\n      plugin.$triggers.should.have.attr('aria-controls', plugin.$element.attr('id'));\n      plugin.$triggers.should.have.attr('aria-expanded', 'false');\n    });\n    it('closes Off Canvas on outside click if closeOnClick option is true', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {\n        closeOnClick: true\n      });\n      plugin.$overlay.should.be.an('object');\n      $html.one('opened.zf.offcanvas', function () {\n        plugin.$overlay.trigger('click');\n        plugin.$element.should.not.have.class('is-open');\n        done();\n      });\n      plugin.open();\n    });\n  });\n  describe('open()', function () {\n    it('toggles ARIA attributes', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {}); //$html.one(Foundation.transitionend($html), function() {\n\n      $html.one('opened.zf.offcanvas', function () {\n        plugin.$triggers.should.have.attr('aria-expanded', 'true');\n        plugin.$element.should.have.attr('aria-hidden', 'false');\n        done();\n      });\n      plugin.open();\n    });\n    it('adds active classes', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      $html.one('opened.zf.offcanvas', function () {\n        setTimeout(function () {\n          plugin.$element.should.have.class('is-open');\n          $('body').should.have.class('is-off-canvas-open');\n          done();\n        }, 1);\n      });\n      plugin.open();\n    });\n    it('focusses Off Canvas if autoFocus option is true', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {\n        autoFocus: true\n      });\n      plugin.$element.one(Foundation.transitionend(plugin.$element), function () {\n        setTimeout(function () {\n          plugin.$element.find('a, button')[0].should.be.equal(document.activeElement);\n          done();\n        }, 1);\n      });\n      plugin.open(); // fake transitionend for console tests\n\n      plugin.$element.triggerHandler(Foundation.transitionend(plugin.$element));\n    });\n    it('traps focus if trapFocus option is true', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {\n        trapFocus: true\n      });\n      var spy = sinon.spy(Foundation.Keyboard, 'trapFocus');\n      $html.one(Foundation.transitionend($html), function () {\n        sinon.assert.called(spy);\n        Foundation.Keyboard.trapFocus.restore();\n        done();\n      });\n      plugin.open();\n    });\n    it('fires opened.zf.offcanvas event', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      $html.one('opened.zf.offcanvas', function () {\n        done();\n      });\n      plugin.open();\n    });\n  });\n  describe('close()', function () {\n    it('toggles ARIA attributes', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      $html.one('opened.zf.offcanvas', function () {\n        plugin.close();\n        plugin.$triggers.should.have.attr('aria-expanded', 'false');\n        plugin.$element.should.have.attr('aria-hidden', 'true');\n        done();\n      }); // Open it first\n\n      plugin.open();\n    });\n    it('removes active classes', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      $html.one('opened.zf.offcanvas', function () {\n        setTimeout(function () {\n          plugin.close();\n          plugin.$element.should.not.have.class('is-open');\n          $('body').should.not.have.class('is-off-canvas-open');\n          done();\n        }, 1);\n      }); // Open it first\n\n      plugin.open();\n    });\n    it('fires closed.zf.offcanvas event', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      $html.one('opened.zf.offcanvas', function () {\n        $html.one('closed.zf.offcanvas', function () {\n          done();\n        });\n        plugin.close();\n      }); // Open it first\n\n      plugin.open();\n    });\n    it('releases focus if trapFocus option is true', function () {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {\n        trapFocus: true\n      });\n      $html.one(Foundation.transitionend($html), function () {\n        var spy = sinon.spy(Foundation.Keyboard, 'releaseFocus');\n        plugin.close();\n        sinon.assert.called(spy);\n        Foundation.Keyboard.releaseFocus.restore();\n      }); // Open it first...\n\n      plugin.open();\n    });\n  });\n  describe('toggle()', function () {\n    it('opens a closed Off Canvas', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      $html.one('opened.zf.offcanvas', function () {\n        plugin.$element.should.have.class('is-open');\n        done();\n      });\n      plugin.toggle();\n    });\n    it('closes an open Off Canvas', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      $html.one('opened.zf.offcanvas', function () {\n        plugin.toggle();\n        plugin.$element.should.not.have.class('is-open');\n        done();\n      }); // Open it first\n\n      plugin.toggle();\n    });\n  });\n  describe('keyboard events', function () {\n    it('closes Off Canvas on ESCAPE', function (done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n      $html.one('opened.zf.offcanvas', function () {\n        plugin.$element.focus().trigger(window.mockKeyboardEvent('ESCAPE'));\n        plugin.$element.should.not.have.class('is-open');\n        done();\n      }); // Open it first\n\n      plugin.open();\n    });\n  });\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/test/javascript/components/offcanvas.js"],"names":["describe","plugin","$html","template","afterEach","destroy","remove","it","$","appendTo","Foundation","OffCanvas","find","$element","should","be","an","options","$triggers","length","equal","have","attr","done","closeOnClick","$overlay","one","trigger","not","class","open","setTimeout","autoFocus","transitionend","document","activeElement","triggerHandler","trapFocus","spy","sinon","Keyboard","assert","called","restore","close","releaseFocus","toggle","focus","window","mockKeyboardEvent"],"mappings":"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","file":"packages/zurb:foundation-sites/test/javascript/components/offcanvas.js.map","sourcesContent":["describe('Off Canvas', function() {\n  var plugin;\n  var $html;\n  var template = `<div class=\"off-canvas-wrapper\">\n      <div class=\"off-canvas-wrapper-inner\" data-off-canvas-wrapper>\n        <div class=\"off-canvas position-left\" id=\"offCanvas\" data-off-canvas data-content-scroll=\"false\">\n\n          <!-- Close button -->\n          <button class=\"close-button\" aria-label=\"Close menu\" type=\"button\" data-close>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n\n          <!-- Menu -->\n          <ul class=\"vertical menu\">\n            <li><a href=\"#\">Foundation</a></li>\n            <li><a href=\"#\">Dot</a></li>\n            <li><a href=\"#\">ZURB</a></li>\n            <li><a href=\"#\">Com</a></li>\n            <li><a href=\"#\">Slash</a></li>\n            <li><a href=\"#\">Sites</a></li>\n          </ul>\n\n        </div>\n\n        <div class=\"off-canvas-content\" data-off-canvas-content>\n          <!-- Page content -->\n          PAGE_CONTENT.\n\n          <!-- Triggers -->\n          <button type=\"button\" class=\"button\" data-toggle=\"offCanvas\">Open Menu</button>\n        </div>\n      </div>\n    </div>`;\n\n  afterEach(function() {\n    plugin.destroy();\n    $html.remove();\n  });\n\n  describe('constructor()', function() {\n    it('stores the element and plugin options', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n\n  describe('init()', function() {\n    it('finds triggers for the Off Canvas', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      plugin.$triggers.length.should.be.equal(1);\n    });\n\n    it('sets ARIA attributes', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      plugin.$element.should.have.attr('aria-hidden', 'true');\n      plugin.$triggers.should.have.attr('aria-controls', plugin.$element.attr('id'));\n      plugin.$triggers.should.have.attr('aria-expanded', 'false');\n    });\n\n    it('closes Off Canvas on outside click if closeOnClick option is true', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {closeOnClick: true});\n\n      plugin.$overlay.should.be.an('object');\n\n      $html.one('opened.zf.offcanvas', function() {\n        plugin.$overlay.trigger('click');\n        plugin.$element.should.not.have.class('is-open');\n        done();\n      });\n\n      plugin.open();\n    });\n  });\n\n  describe('open()', function() {\n    it('toggles ARIA attributes', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      //$html.one(Foundation.transitionend($html), function() {\n      $html.one('opened.zf.offcanvas', function() {\n        plugin.$triggers.should.have.attr('aria-expanded', 'true');\n        plugin.$element.should.have.attr('aria-hidden', 'false');\n        done();\n      });\n\n      plugin.open();\n    });\n\n    it('adds active classes', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      $html.one('opened.zf.offcanvas', function() {\n        setTimeout(function() {\n          plugin.$element.should.have.class('is-open');\n          $('body').should.have.class('is-off-canvas-open');\n          done();\n        }, 1);\n      });\n\n      plugin.open();\n    });\n\n    it('focusses Off Canvas if autoFocus option is true', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {autoFocus: true});\n\n\n      plugin.$element.one(Foundation.transitionend(plugin.$element),function() {\n        setTimeout(function() {\n          plugin.$element.find('a, button')[0].should.be.equal(document.activeElement);\n          done();\n        }, 1);\n      });\n\n      plugin.open();\n      // fake transitionend for console tests\n      plugin.$element.triggerHandler(Foundation.transitionend(plugin.$element));\n    });\n\n    it('traps focus if trapFocus option is true', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {trapFocus: true});\n\n      let spy = sinon.spy(Foundation.Keyboard, 'trapFocus');\n\n      $html.one(Foundation.transitionend($html), function() {\n        sinon.assert.called(spy);\n        Foundation.Keyboard.trapFocus.restore();\n        done();\n      });\n\n      plugin.open();\n    });\n\n\n    it('fires opened.zf.offcanvas event', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      $html.one('opened.zf.offcanvas', function() {\n        done();\n      });\n\n      plugin.open();\n    });\n  });\n\n  describe('close()', function() {\n    it('toggles ARIA attributes', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      $html.one('opened.zf.offcanvas', function() {\n        plugin.close();\n\n        plugin.$triggers.should.have.attr('aria-expanded', 'false');\n        plugin.$element.should.have.attr('aria-hidden', 'true');\n        done();\n      });\n\n      // Open it first\n      plugin.open();\n    });\n\n    it('removes active classes', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      $html.one('opened.zf.offcanvas', function() {\n        setTimeout(function() {\n          plugin.close();\n\n          plugin.$element.should.not.have.class('is-open');\n          $('body').should.not.have.class('is-off-canvas-open');\n          done();\n        }, 1);\n      });\n\n      // Open it first\n      plugin.open();\n    });\n\n    it('fires closed.zf.offcanvas event', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      $html.one('opened.zf.offcanvas', function() {\n        $html.one('closed.zf.offcanvas', function() {\n          done();\n        });\n\n        plugin.close();\n      });\n\n      // Open it first\n      plugin.open();\n    });\n\n    it('releases focus if trapFocus option is true', function() {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {trapFocus: true});\n\n      $html.one(Foundation.transitionend($html), function() {\n        let spy = sinon.spy(Foundation.Keyboard, 'releaseFocus');\n\n        plugin.close();\n\n        sinon.assert.called(spy);\n        Foundation.Keyboard.releaseFocus.restore();\n      });\n\n      // Open it first...\n      plugin.open();\n    });\n  });\n\n  describe('toggle()', function() {\n    it('opens a closed Off Canvas', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      $html.one('opened.zf.offcanvas', function() {\n        plugin.$element.should.have.class('is-open');\n        done();\n      });\n\n      plugin.toggle();\n    });\n\n    it('closes an open Off Canvas', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      $html.one('opened.zf.offcanvas', function() {\n        plugin.toggle();\n\n        plugin.$element.should.not.have.class('is-open');\n        done();\n      });\n\n      // Open it first\n      plugin.toggle();\n    });\n  });\n  \n  describe('keyboard events', function() {\n    it('closes Off Canvas on ESCAPE', function(done) {\n      $html = $(template).appendTo('body');\n      plugin = new Foundation.OffCanvas($html.find('[data-off-canvas]'), {});\n\n      $html.one('opened.zf.offcanvas', function() {\n        plugin.$element.focus()\n          .trigger(window.mockKeyboardEvent('ESCAPE'));\n\n        plugin.$element.should.not.have.class('is-open');\n        done();\n      });\n\n      // Open it first\n      plugin.open();\n    });\n  });\n\n});\n"]},"hash":"619cfdecc519b8355aa28af8d0dbe4b71a4f533b"}
