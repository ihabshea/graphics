{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"jquery","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"$"}]},{"source":"./foundation.util.keyboard","imported":["Keyboard"],"specifiers":[{"kind":"named","imported":"Keyboard","local":"Keyboard"}]},{"source":"./foundation.util.imageLoader","imported":["onImagesLoaded"],"specifiers":[{"kind":"named","imported":"onImagesLoaded","local":"onImagesLoaded"}]},{"source":"./foundation.plugin","imported":["Plugin"],"specifiers":[{"kind":"named","imported":"Plugin","local":"Plugin"}]}],"exports":{"exported":["Tabs"],"specifiers":[{"kind":"local","local":"Tabs","exported":"Tabs"}]}}},"options":{"filename":"packages/zurb:foundation-sites/js/foundation.tabs.js","filenameRelative":"packages/zurb:foundation-sites/js/foundation.tabs.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/js/foundation.tabs.js.map","sourceFileName":"packages/zurb:foundation-sites/js/foundation.tabs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"foundation.tabs"},"ignored":false,"code":"'use strict';\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar module1 = module;\nmodule1.export({\n  Tabs: function () {\n    return Tabs;\n  }\n});\nvar $ = void 0;\nmodule1.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 0);\nvar Keyboard = void 0;\nmodule1.watch(require(\"./foundation.util.keyboard\"), {\n  Keyboard: function (v) {\n    Keyboard = v;\n  }\n}, 1);\nvar onImagesLoaded = void 0;\nmodule1.watch(require(\"./foundation.util.imageLoader\"), {\n  onImagesLoaded: function (v) {\n    onImagesLoaded = v;\n  }\n}, 2);\nvar Plugin = void 0;\nmodule1.watch(require(\"./foundation.plugin\"), {\n  Plugin: function (v) {\n    Plugin = v;\n  }\n}, 3);\n\n/**\n * Tabs module.\n * @module foundation.tabs\n * @requires foundation.util.keyboard\n * @requires foundation.util.imageLoader if tabs contain images\n */var Tabs = function (_Plugin) {\n  (0, _inherits3.default)(Tabs, _Plugin);\n\n  function Tabs() {\n    (0, _classCallCheck3.default)(this, Tabs);\n    return (0, _possibleConstructorReturn3.default)(this, _Plugin.apply(this, arguments));\n  }\n\n  /**\n   * Creates a new instance of tabs.\n   * @class\n   * @name Tabs\n   * @fires Tabs#init\n   * @param {jQuery} element - jQuery object to make into tabs.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */Tabs.prototype._setup = function () {\n    function _setup(element, options) {\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n      this.className = 'Tabs'; // ie9 back compat\n\n      this._init();\n\n      Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous' // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n\n      });\n    }\n\n    return _setup;\n  }(); /**\n        * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n        * @private\n        */\n\n  Tabs.prototype._init = function () {\n    function _init() {\n      var _this3 = this;\n\n      var _this = this;\n\n      this.$element.attr({\n        'role': 'tablist'\n      });\n      this.$tabTitles = this.$element.find(\".\" + this.options.linkClass);\n      this.$tabContent = $(\"[data-tabs-content=\\\"\" + this.$element[0].id + \"\\\"]\");\n      this.$tabTitles.each(function () {\n        var $elem = $(this),\n            $link = $elem.find('a'),\n            isActive = $elem.hasClass(\"\" + _this.options.linkActiveClass),\n            hash = $link.attr('data-tabs-target') || $link[0].hash.slice(1),\n            linkId = $link[0].id ? $link[0].id : hash + \"-label\",\n            $tabContent = $(\"#\" + hash);\n        $elem.attr({\n          'role': 'presentation'\n        });\n        $link.attr({\n          'role': 'tab',\n          'aria-controls': hash,\n          'aria-selected': isActive,\n          'id': linkId,\n          'tabindex': isActive ? '0' : '-1'\n        });\n        $tabContent.attr({\n          'role': 'tabpanel',\n          'aria-labelledby': linkId\n        });\n\n        if (!isActive) {\n          $tabContent.attr('aria-hidden', 'true');\n        }\n\n        if (isActive && _this.options.autoFocus) {\n          $(window).load(function () {\n            $('html, body').animate({\n              scrollTop: $elem.offset().top\n            }, _this.options.deepLinkSmudgeDelay, function () {\n              $link.focus();\n            });\n          });\n        }\n      });\n\n      if (this.options.matchHeight) {\n        var $images = this.$tabContent.find('img');\n\n        if ($images.length) {\n          onImagesLoaded($images, this._setHeight.bind(this));\n        } else {\n          this._setHeight();\n        }\n      } //current context-bound function to open tabs on page load or history popstate\n\n\n      this._checkDeepLink = function () {\n        var anchor = window.location.hash; //need a hash and a relevant anchor in this tabset\n\n        if (anchor.length) {\n          var $link = _this3.$element.find('[href$=\"' + anchor + '\"]');\n\n          if ($link.length) {\n            _this3.selectTab($(anchor), true); //roll up a little to show the titles\n\n\n            if (_this3.options.deepLinkSmudge) {\n              var offset = _this3.$element.offset();\n\n              $('html, body').animate({\n                scrollTop: offset.top\n              }, _this3.options.deepLinkSmudgeDelay);\n            } /**\n                * Fires when the zplugin has deeplinked at pageload\n                * @event Tabs#deeplink\n                */\n\n            _this3.$element.trigger('deeplink.zf.tabs', [$link, $(anchor)]);\n          }\n        }\n      }; //use browser to open a tab, if it exists in this tabset\n\n\n      if (this.options.deepLink) {\n        this._checkDeepLink();\n      }\n\n      this._events();\n    }\n\n    return _init;\n  }(); /**\n        * Adds event handlers for items within the tabs.\n        * @private\n        */\n\n  Tabs.prototype._events = function () {\n    function _events() {\n      this._addKeyHandler();\n\n      this._addClickHandler();\n\n      this._setHeightMqHandler = null;\n\n      if (this.options.matchHeight) {\n        this._setHeightMqHandler = this._setHeight.bind(this);\n        $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n      }\n\n      if (this.options.deepLink) {\n        $(window).on('popstate', this._checkDeepLink);\n      }\n    }\n\n    return _events;\n  }(); /**\n        * Adds click handlers for items within the tabs.\n        * @private\n        */\n\n  Tabs.prototype._addClickHandler = function () {\n    function _addClickHandler() {\n      var _this = this;\n\n      this.$element.off('click.zf.tabs').on('click.zf.tabs', \".\" + this.options.linkClass, function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        _this._handleTabChange($(this));\n      });\n    }\n\n    return _addClickHandler;\n  }(); /**\n        * Adds keyboard event handlers for items within the tabs.\n        * @private\n        */\n\n  Tabs.prototype._addKeyHandler = function () {\n    function _addKeyHandler() {\n      var _this = this;\n\n      this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n        if (e.which === 9) return;\n        var $element = $(this),\n            $elements = $element.parent('ul').children('li'),\n            $prevElement,\n            $nextElement;\n        $elements.each(function (i) {\n          if ($(this).is($element)) {\n            if (_this.options.wrapOnKeys) {\n              $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n              $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n            } else {\n              $prevElement = $elements.eq(Math.max(0, i - 1));\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n            }\n\n            return;\n          }\n        }); // handle keyboard event with keyboard util\n\n        Keyboard.handleKey(e, 'Tabs', {\n          open: function () {\n            $element.find('[role=\"tab\"]').focus();\n\n            _this._handleTabChange($element);\n          },\n          previous: function () {\n            $prevElement.find('[role=\"tab\"]').focus();\n\n            _this._handleTabChange($prevElement);\n          },\n          next: function () {\n            $nextElement.find('[role=\"tab\"]').focus();\n\n            _this._handleTabChange($nextElement);\n          },\n          handled: function () {\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        });\n      });\n    }\n\n    return _addKeyHandler;\n  }(); /**\n        * Opens the tab `$targetContent` defined by `$target`. Collapses active tab.\n        * @param {jQuery} $target - Tab to open.\n        * @param {boolean} historyHandled - browser has already handled a history update\n        * @fires Tabs#change\n        * @function\n        */\n\n  Tabs.prototype._handleTabChange = function () {\n    function _handleTabChange($target, historyHandled) {\n      /**\n       * Check for active class on target. Collapse if exists.\n       */if ($target.hasClass(\"\" + this.options.linkActiveClass)) {\n        if (this.options.activeCollapse) {\n          this._collapseTab($target); /**\n                                       * Fires when the zplugin has successfully collapsed tabs.\n                                       * @event Tabs#collapse\n                                       */\n\n          this.$element.trigger('collapse.zf.tabs', [$target]);\n        }\n\n        return;\n      }\n\n      var $oldTab = this.$element.find(\".\" + this.options.linkClass + \".\" + this.options.linkActiveClass),\n          $tabLink = $target.find('[role=\"tab\"]'),\n          hash = $tabLink.attr('data-tabs-target') || $tabLink[0].hash.slice(1),\n          $targetContent = this.$tabContent.find(\"#\" + hash); //close old tab\n\n      this._collapseTab($oldTab); //open new tab\n\n\n      this._openTab($target); //either replace or update browser history\n\n\n      if (this.options.deepLink && !historyHandled) {\n        var anchor = $target.find('a').attr('href');\n\n        if (this.options.updateHistory) {\n          history.pushState({}, '', anchor);\n        } else {\n          history.replaceState({}, '', anchor);\n        }\n      } /**\n         * Fires when the plugin has successfully changed tabs.\n         * @event Tabs#change\n         */\n\n      this.$element.trigger('change.zf.tabs', [$target, $targetContent]); //fire to children a mutation event\n\n      $targetContent.find(\"[data-mutate]\").trigger(\"mutateme.zf.trigger\");\n    }\n\n    return _handleTabChange;\n  }(); /**\n        * Opens the tab `$targetContent` defined by `$target`.\n        * @param {jQuery} $target - Tab to Open.\n        * @function\n        */\n\n  Tabs.prototype._openTab = function () {\n    function _openTab($target) {\n      var $tabLink = $target.find('[role=\"tab\"]'),\n          hash = $tabLink.attr('data-tabs-target') || $tabLink[0].hash.slice(1),\n          $targetContent = this.$tabContent.find(\"#\" + hash);\n      $target.addClass(\"\" + this.options.linkActiveClass);\n      $tabLink.attr({\n        'aria-selected': 'true',\n        'tabindex': '0'\n      });\n      $targetContent.addClass(\"\" + this.options.panelActiveClass).removeAttr('aria-hidden');\n    }\n\n    return _openTab;\n  }(); /**\n        * Collapses `$targetContent` defined by `$target`.\n        * @param {jQuery} $target - Tab to Open.\n        * @function\n        */\n\n  Tabs.prototype._collapseTab = function () {\n    function _collapseTab($target) {\n      var $target_anchor = $target.removeClass(\"\" + this.options.linkActiveClass).find('[role=\"tab\"]').attr({\n        'aria-selected': 'false',\n        'tabindex': -1\n      });\n      $(\"#\" + $target_anchor.attr('aria-controls')).removeClass(\"\" + this.options.panelActiveClass).attr({\n        'aria-hidden': 'true'\n      });\n    }\n\n    return _collapseTab;\n  }(); /**\n        * Public method for selecting a content pane to display.\n        * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n        * @param {boolean} historyHandled - browser has already handled a history update\n        * @function\n        */\n\n  Tabs.prototype.selectTab = function () {\n    function selectTab(elem, historyHandled) {\n      var idStr;\n\n      if ((typeof elem === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(elem)) === 'object') {\n        idStr = elem[0].id;\n      } else {\n        idStr = elem;\n      }\n\n      if (idStr.indexOf('#') < 0) {\n        idStr = \"#\" + idStr;\n      }\n\n      var $target = this.$tabTitles.find(\"[href$=\\\"\" + idStr + \"\\\"]\").parent(\".\" + this.options.linkClass);\n\n      this._handleTabChange($target, historyHandled);\n    }\n\n    return selectTab;\n  }();\n\n  /**\n   * Sets the height of each panel to the height of the tallest panel.\n   * If enabled in options, gets called on media query change.\n   * If loading content via external source, can be called directly or with _reflow.\n   * If enabled with `data-match-height=\"true\"`, tabs sets to equal height\n   * @function\n   * @private\n   */Tabs.prototype._setHeight = function () {\n    function _setHeight() {\n      var max = 0,\n          _this = this; // Lock down the `this` value for the root tabs object\n\n\n      this.$tabContent.find(\".\" + this.options.panelClass).css('height', '').each(function () {\n        var panel = $(this),\n            isActive = panel.hasClass(\"\" + _this.options.panelActiveClass); // get the options from the parent instead of trying to get them from the child\n\n        if (!isActive) {\n          panel.css({\n            'visibility': 'hidden',\n            'display': 'block'\n          });\n        }\n\n        var temp = this.getBoundingClientRect().height;\n\n        if (!isActive) {\n          panel.css({\n            'visibility': '',\n            'display': ''\n          });\n        }\n\n        max = temp > max ? temp : max;\n      }).css('height', max + \"px\");\n    }\n\n    return _setHeight;\n  }(); /**\n        * Destroys an instance of an tabs.\n        * @fires Tabs#destroyed\n        */\n\n  Tabs.prototype._destroy = function () {\n    function _destroy() {\n      this.$element.find(\".\" + this.options.linkClass).off('.zf.tabs').hide().end().find(\".\" + this.options.panelClass).hide();\n\n      if (this.options.matchHeight) {\n        if (this._setHeightMqHandler != null) {\n          $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n        }\n      }\n\n      if (this.options.deepLink) {\n        $(window).off('popstate', this._checkDeepLink);\n      }\n    }\n\n    return _destroy;\n  }();\n\n  return Tabs;\n}(Plugin);\n\nTabs.defaults = {\n  /**\n   * Allows the window to scroll to content of pane specified by hash anchor\n   * @option\n   * @type {boolean}\n   * @default false\n   */deepLink: false,\n  /**\n   * Adjust the deep link scroll to make sure the top of the tab panel is visible\n   * @option\n   * @type {boolean}\n   * @default false\n   */deepLinkSmudge: false,\n  /**\n   * Animation time (ms) for the deep link adjustment\n   * @option\n   * @type {number}\n   * @default 300\n   */deepLinkSmudgeDelay: 300,\n  /**\n   * Update the browser history with the open tab\n   * @option\n   * @type {boolean}\n   * @default false\n   */updateHistory: false,\n  /**\n   * Allows the window to scroll to content of active pane on load if set to true.\n   * Not recommended if more than one tab panel per page.\n   * @option\n   * @type {boolean}\n   * @default false\n   */autoFocus: false,\n  /**\n   * Allows keyboard input to 'wrap' around the tab links.\n   * @option\n   * @type {boolean}\n   * @default true\n   */wrapOnKeys: true,\n  /**\n   * Allows the tab content panes to match heights if set to true.\n   * @option\n   * @type {boolean}\n   * @default false\n   */matchHeight: false,\n  /**\n   * Allows active tabs to collapse when clicked.\n   * @option\n   * @type {boolean}\n   * @default false\n   */activeCollapse: false,\n  /**\n   * Class applied to `li`'s in tab link list.\n   * @option\n   * @type {string}\n   * @default 'tabs-title'\n   */linkClass: 'tabs-title',\n  /**\n   * Class applied to the active `li` in tab link list.\n   * @option\n   * @type {string}\n   * @default 'is-active'\n   */linkActiveClass: 'is-active',\n  /**\n   * Class applied to the content containers.\n   * @option\n   * @type {string}\n   * @default 'tabs-panel'\n   */panelClass: 'tabs-panel',\n  /**\n   * Class applied to the active content container.\n   * @option\n   * @type {string}\n   * @default 'is-active'\n   */panelActiveClass: 'is-active'\n};","map":{"version":3,"sources":["packages/zurb:foundation-sites/js/foundation.tabs.js"],"names":["module1","module","export","Tabs","$","watch","require","v","Keyboard","onImagesLoaded","Plugin","_setup","element","options","$element","extend","defaults","data","className","_init","register","_this","attr","$tabTitles","find","linkClass","$tabContent","id","each","$elem","$link","isActive","hasClass","linkActiveClass","hash","slice","linkId","autoFocus","window","load","animate","scrollTop","offset","top","deepLinkSmudgeDelay","focus","matchHeight","$images","length","_setHeight","bind","_checkDeepLink","anchor","location","selectTab","deepLinkSmudge","trigger","deepLink","_events","_addKeyHandler","_addClickHandler","_setHeightMqHandler","on","off","e","preventDefault","stopPropagation","_handleTabChange","which","$elements","parent","children","$prevElement","$nextElement","i","is","wrapOnKeys","last","eq","first","Math","max","min","handleKey","open","previous","next","handled","$target","historyHandled","activeCollapse","_collapseTab","$oldTab","$tabLink","$targetContent","_openTab","updateHistory","history","pushState","replaceState","addClass","panelActiveClass","removeAttr","$target_anchor","removeClass","elem","idStr","indexOf","panelClass","css","panel","temp","getBoundingClientRect","height","_destroy","hide","end"],"mappings":"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","file":"packages/zurb:foundation-sites/js/foundation.tabs.js.map","sourcesContent":["'use strict';\n\nimport $ from 'jquery';\nimport { Keyboard } from './foundation.util.keyboard';\nimport { onImagesLoaded } from './foundation.util.imageLoader';\nimport { Plugin } from './foundation.plugin';\n/**\n * Tabs module.\n * @module foundation.tabs\n * @requires foundation.util.keyboard\n * @requires foundation.util.imageLoader if tabs contain images\n */\n\nclass Tabs extends Plugin {\n  /**\n   * Creates a new instance of tabs.\n   * @class\n   * @name Tabs\n   * @fires Tabs#init\n   * @param {jQuery} element - jQuery object to make into tabs.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n    this.className = 'Tabs'; // ie9 back compat\n\n    this._init();\n    Keyboard.register('Tabs', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'previous',\n      'ARROW_DOWN': 'next',\n      'ARROW_LEFT': 'previous'\n      // 'TAB': 'next',\n      // 'SHIFT_TAB': 'previous'\n    });\n  }\n\n  /**\n   * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n   * @private\n   */\n  _init() {\n    var _this = this;\n\n    this.$element.attr({'role': 'tablist'});\n    this.$tabTitles = this.$element.find(`.${this.options.linkClass}`);\n    this.$tabContent = $(`[data-tabs-content=\"${this.$element[0].id}\"]`);\n\n    this.$tabTitles.each(function(){\n      var $elem = $(this),\n          $link = $elem.find('a'),\n          isActive = $elem.hasClass(`${_this.options.linkActiveClass}`),\n          hash = $link.attr('data-tabs-target') || $link[0].hash.slice(1),\n          linkId = $link[0].id ? $link[0].id : `${hash}-label`,\n          $tabContent = $(`#${hash}`);\n\n      $elem.attr({'role': 'presentation'});\n\n      $link.attr({\n        'role': 'tab',\n        'aria-controls': hash,\n        'aria-selected': isActive,\n        'id': linkId,\n        'tabindex': isActive ? '0' : '-1'\n      });\n\n      $tabContent.attr({\n        'role': 'tabpanel',\n        'aria-labelledby': linkId\n      });\n\n      if(!isActive) {\n        $tabContent.attr('aria-hidden', 'true');\n      }\n\n      if(isActive && _this.options.autoFocus){\n        $(window).load(function() {\n          $('html, body').animate({ scrollTop: $elem.offset().top }, _this.options.deepLinkSmudgeDelay, () => {\n            $link.focus();\n          });\n        });\n      }\n    });\n    if(this.options.matchHeight) {\n      var $images = this.$tabContent.find('img');\n\n      if ($images.length) {\n        onImagesLoaded($images, this._setHeight.bind(this));\n      } else {\n        this._setHeight();\n      }\n    }\n\n     //current context-bound function to open tabs on page load or history popstate\n    this._checkDeepLink = () => {\n      var anchor = window.location.hash;\n      //need a hash and a relevant anchor in this tabset\n      if(anchor.length) {\n        var $link = this.$element.find('[href$=\"'+anchor+'\"]');\n        if ($link.length) {\n          this.selectTab($(anchor), true);\n\n          //roll up a little to show the titles\n          if (this.options.deepLinkSmudge) {\n            var offset = this.$element.offset();\n            $('html, body').animate({ scrollTop: offset.top }, this.options.deepLinkSmudgeDelay);\n          }\n\n          /**\n            * Fires when the zplugin has deeplinked at pageload\n            * @event Tabs#deeplink\n            */\n           this.$element.trigger('deeplink.zf.tabs', [$link, $(anchor)]);\n         }\n       }\n     }\n\n    //use browser to open a tab, if it exists in this tabset\n    if (this.options.deepLink) {\n      this._checkDeepLink();\n    }\n\n    this._events();\n  }\n\n  /**\n   * Adds event handlers for items within the tabs.\n   * @private\n   */\n  _events() {\n    this._addKeyHandler();\n    this._addClickHandler();\n    this._setHeightMqHandler = null;\n\n    if (this.options.matchHeight) {\n      this._setHeightMqHandler = this._setHeight.bind(this);\n\n      $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n    }\n\n    if(this.options.deepLink) {\n      $(window).on('popstate', this._checkDeepLink);\n    }\n  }\n\n  /**\n   * Adds click handlers for items within the tabs.\n   * @private\n   */\n  _addClickHandler() {\n    var _this = this;\n\n    this.$element\n      .off('click.zf.tabs')\n      .on('click.zf.tabs', `.${this.options.linkClass}`, function(e){\n        e.preventDefault();\n        e.stopPropagation();\n        _this._handleTabChange($(this));\n      });\n  }\n\n  /**\n   * Adds keyboard event handlers for items within the tabs.\n   * @private\n   */\n  _addKeyHandler() {\n    var _this = this;\n\n    this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function(e){\n      if (e.which === 9) return;\n\n\n      var $element = $(this),\n        $elements = $element.parent('ul').children('li'),\n        $prevElement,\n        $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          if (_this.options.wrapOnKeys) {\n            $prevElement = i === 0 ? $elements.last() : $elements.eq(i-1);\n            $nextElement = i === $elements.length -1 ? $elements.first() : $elements.eq(i+1);\n          } else {\n            $prevElement = $elements.eq(Math.max(0, i-1));\n            $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\n          }\n          return;\n        }\n      });\n\n      // handle keyboard event with keyboard util\n      Keyboard.handleKey(e, 'Tabs', {\n        open: function() {\n          $element.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($element);\n        },\n        previous: function() {\n          $prevElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($prevElement);\n        },\n        next: function() {\n          $nextElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($nextElement);\n        },\n        handled: function() {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      });\n    });\n  }\n\n  /**\n   * Opens the tab `$targetContent` defined by `$target`. Collapses active tab.\n   * @param {jQuery} $target - Tab to open.\n   * @param {boolean} historyHandled - browser has already handled a history update\n   * @fires Tabs#change\n   * @function\n   */\n  _handleTabChange($target, historyHandled) {\n\n    /**\n     * Check for active class on target. Collapse if exists.\n     */\n    if ($target.hasClass(`${this.options.linkActiveClass}`)) {\n        if(this.options.activeCollapse) {\n            this._collapseTab($target);\n\n           /**\n            * Fires when the zplugin has successfully collapsed tabs.\n            * @event Tabs#collapse\n            */\n            this.$element.trigger('collapse.zf.tabs', [$target]);\n        }\n        return;\n    }\n\n    var $oldTab = this.$element.\n          find(`.${this.options.linkClass}.${this.options.linkActiveClass}`),\n          $tabLink = $target.find('[role=\"tab\"]'),\n          hash = $tabLink.attr('data-tabs-target') || $tabLink[0].hash.slice(1),\n          $targetContent = this.$tabContent.find(`#${hash}`);\n\n    //close old tab\n    this._collapseTab($oldTab);\n\n    //open new tab\n    this._openTab($target);\n\n    //either replace or update browser history\n    if (this.options.deepLink && !historyHandled) {\n      var anchor = $target.find('a').attr('href');\n\n      if (this.options.updateHistory) {\n        history.pushState({}, '', anchor);\n      } else {\n        history.replaceState({}, '', anchor);\n      }\n    }\n\n    /**\n     * Fires when the plugin has successfully changed tabs.\n     * @event Tabs#change\n     */\n    this.$element.trigger('change.zf.tabs', [$target, $targetContent]);\n\n    //fire to children a mutation event\n    $targetContent.find(\"[data-mutate]\").trigger(\"mutateme.zf.trigger\");\n  }\n\n  /**\n   * Opens the tab `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to Open.\n   * @function\n   */\n  _openTab($target) {\n      var $tabLink = $target.find('[role=\"tab\"]'),\n          hash = $tabLink.attr('data-tabs-target') || $tabLink[0].hash.slice(1),\n          $targetContent = this.$tabContent.find(`#${hash}`);\n\n      $target.addClass(`${this.options.linkActiveClass}`);\n\n      $tabLink.attr({\n        'aria-selected': 'true',\n        'tabindex': '0'\n      });\n\n      $targetContent\n        .addClass(`${this.options.panelActiveClass}`).removeAttr('aria-hidden');\n  }\n\n  /**\n   * Collapses `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to Open.\n   * @function\n   */\n  _collapseTab($target) {\n    var $target_anchor = $target\n      .removeClass(`${this.options.linkActiveClass}`)\n      .find('[role=\"tab\"]')\n      .attr({\n        'aria-selected': 'false',\n        'tabindex': -1\n      });\n\n    $(`#${$target_anchor.attr('aria-controls')}`)\n      .removeClass(`${this.options.panelActiveClass}`)\n      .attr({ 'aria-hidden': 'true' })\n  }\n\n  /**\n   * Public method for selecting a content pane to display.\n   * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n   * @param {boolean} historyHandled - browser has already handled a history update\n   * @function\n   */\n  selectTab(elem, historyHandled) {\n    var idStr;\n\n    if (typeof elem === 'object') {\n      idStr = elem[0].id;\n    } else {\n      idStr = elem;\n    }\n\n    if (idStr.indexOf('#') < 0) {\n      idStr = `#${idStr}`;\n    }\n\n    var $target = this.$tabTitles.find(`[href$=\"${idStr}\"]`).parent(`.${this.options.linkClass}`);\n\n    this._handleTabChange($target, historyHandled);\n  };\n  /**\n   * Sets the height of each panel to the height of the tallest panel.\n   * If enabled in options, gets called on media query change.\n   * If loading content via external source, can be called directly or with _reflow.\n   * If enabled with `data-match-height=\"true\"`, tabs sets to equal height\n   * @function\n   * @private\n   */\n  _setHeight() {\n    var max = 0,\n        _this = this; // Lock down the `this` value for the root tabs object\n\n    this.$tabContent\n      .find(`.${this.options.panelClass}`)\n      .css('height', '')\n      .each(function() {\n\n        var panel = $(this),\n            isActive = panel.hasClass(`${_this.options.panelActiveClass}`); // get the options from the parent instead of trying to get them from the child\n\n        if (!isActive) {\n          panel.css({'visibility': 'hidden', 'display': 'block'});\n        }\n\n        var temp = this.getBoundingClientRect().height;\n\n        if (!isActive) {\n          panel.css({\n            'visibility': '',\n            'display': ''\n          });\n        }\n\n        max = temp > max ? temp : max;\n      })\n      .css('height', `${max}px`);\n  }\n\n  /**\n   * Destroys an instance of an tabs.\n   * @fires Tabs#destroyed\n   */\n  _destroy() {\n    this.$element\n      .find(`.${this.options.linkClass}`)\n      .off('.zf.tabs').hide().end()\n      .find(`.${this.options.panelClass}`)\n      .hide();\n\n    if (this.options.matchHeight) {\n      if (this._setHeightMqHandler != null) {\n         $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n      }\n    }\n\n    if (this.options.deepLink) {\n      $(window).off('popstate', this._checkDeepLink);\n    }\n\n  }\n}\n\nTabs.defaults = {\n  /**\n   * Allows the window to scroll to content of pane specified by hash anchor\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  deepLink: false,\n\n  /**\n   * Adjust the deep link scroll to make sure the top of the tab panel is visible\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  deepLinkSmudge: false,\n\n  /**\n   * Animation time (ms) for the deep link adjustment\n   * @option\n   * @type {number}\n   * @default 300\n   */\n  deepLinkSmudgeDelay: 300,\n\n  /**\n   * Update the browser history with the open tab\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  updateHistory: false,\n\n  /**\n   * Allows the window to scroll to content of active pane on load if set to true.\n   * Not recommended if more than one tab panel per page.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  autoFocus: false,\n\n  /**\n   * Allows keyboard input to 'wrap' around the tab links.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  wrapOnKeys: true,\n\n  /**\n   * Allows the tab content panes to match heights if set to true.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  matchHeight: false,\n\n  /**\n   * Allows active tabs to collapse when clicked.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  activeCollapse: false,\n\n  /**\n   * Class applied to `li`'s in tab link list.\n   * @option\n   * @type {string}\n   * @default 'tabs-title'\n   */\n  linkClass: 'tabs-title',\n\n  /**\n   * Class applied to the active `li` in tab link list.\n   * @option\n   * @type {string}\n   * @default 'is-active'\n   */\n  linkActiveClass: 'is-active',\n\n  /**\n   * Class applied to the content containers.\n   * @option\n   * @type {string}\n   * @default 'tabs-panel'\n   */\n  panelClass: 'tabs-panel',\n\n  /**\n   * Class applied to the active content container.\n   * @option\n   * @type {string}\n   * @default 'is-active'\n   */\n  panelActiveClass: 'is-active'\n};\n\nexport {Tabs};\n"]},"hash":"4677cfc3f383dfa1a3d49de13e77f23e2e12b2d4"}
