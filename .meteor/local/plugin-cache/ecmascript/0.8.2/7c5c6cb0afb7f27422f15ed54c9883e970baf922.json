{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zurb:foundation-sites/test/javascript/components/toggler.js","filenameRelative":"packages/zurb:foundation-sites/test/javascript/components/toggler.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zurb:foundation-sites/test/javascript/components/toggler.js.map","sourceFileName":"packages/zurb:foundation-sites/test/javascript/components/toggler.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"toggler"},"ignored":false,"code":"describe('Toggler', function () {\n  var plugin;\n  var $html;\n  afterEach(function () {\n    plugin.destroy();\n    $html.remove();\n  });\n  describe('constructor()', function () {\n    it('stores the element and plugin options', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n  describe('init()', function () {\n    it('stores the class defined on the data-toggler attribute', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n      plugin.className.should.equal('class');\n    });\n    it('stores the class defined on the data-toggler attribute (with leading dot)', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\".class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n      plugin.className.should.equal('class');\n    });\n    it('stores defined animation classes', function () {\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n      plugin.animationIn.should.equal('fade-in');\n      plugin.animationOut.should.equal('fade-out');\n    });\n    it('adds Aria attributes to click triggers', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      var $triggers = $(\"<div>\\n          <a data-open=\\\"toggler\\\">Open</a>\\n          <a data-close=\\\"toggler\\\">Close</a>\\n          <a data-toggle=\\\"toggler\\\">Toggle</a>\\n        </div>\").appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n      $triggers.find('[data-open]').should.have.attr('aria-controls', 'toggler');\n      $triggers.find('[data-close]').should.have.attr('aria-controls', 'toggler');\n      $triggers.find('[data-toggle]').should.have.attr('aria-controls', 'toggler');\n      $triggers.remove();\n    });\n    it('sets aria-expanded to true if the element is visible', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n      $('#toggler').should.have.attr('aria-expanded', 'true');\n    });\n    it('sets aria-expanded to false if the element is invisible', function () {\n      var $css = $('<style>#toggler { display: none }</style>').appendTo('body');\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n      $('#toggler').should.have.attr('aria-expanded', 'false');\n      $css.remove();\n    });\n  });\n  describe('toggle()', function () {\n    it('calls Toggler._toggleClass() if the element toggles with a class');\n    it('calls Toggler._toggleAnimate() if the element toggles with animation');\n  });\n  describe('toggleClass()', function () {\n    it('toggles a class on the element', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin._toggleClass();\n\n      $('#toggler').should.have.class('class');\n\n      plugin._toggleClass();\n\n      $('#toggler').should.not.have.class('class');\n    });\n    it('updates aria-expanded after the class is toggled', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin._toggleClass();\n\n      $('#toggler').should.have.attr('aria-expanded', 'true');\n\n      plugin._toggleClass();\n\n      $('#toggler').should.have.attr('aria-expanded', 'false');\n    });\n  }); // [TODO] Re-enable this if you can get it working in PhantomJS\n\n  xdescribe('toggleAnimate()', function () {\n    it('animates an invisible element in', function (done) {\n      var $css = $('<style>#toggler { display: none; }</style>').appendTo('body');\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n      $html.on('on.zf.toggler', function () {\n        $('#toggler').should.be.visible;\n        $('#toggler').should.have.attr('aria-expanded', 'true');\n        $css.remove();\n        done();\n      });\n\n      plugin._toggleAnimate();\n    });\n    it('animates an visible element out', function (done) {\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n      $html.on('off.zf.toggler', function () {\n        $('#toggler').should.be.hidden;\n        $('#toggler').should.have.attr('aria-expanded', 'false');\n        done();\n      });\n\n      plugin._toggleAnimate();\n    });\n  });\n});","map":{"version":3,"sources":["packages/zurb:foundation-sites/test/javascript/components/toggler.js"],"names":["describe","plugin","$html","afterEach","destroy","remove","it","$","appendTo","Foundation","Toggler","$element","should","be","an","options","className","equal","animationIn","animationOut","$triggers","find","have","attr","$css","_toggleClass","class","not","xdescribe","done","on","visible","_toggleAnimate","hidden"],"mappings":"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","file":"packages/zurb:foundation-sites/test/javascript/components/toggler.js.map","sourcesContent":["describe('Toggler', function() {\n  var plugin;\n  var $html;\n\n  afterEach(function() {\n    plugin.destroy();\n    $html.remove();\n  });\n\n  describe('constructor()', function() {\n    it('stores the element and plugin options', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n\n  describe('init()', function() {\n    it('stores the class defined on the data-toggler attribute', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.className.should.equal('class');\n    });\n\n    it('stores the class defined on the data-toggler attribute (with leading dot)', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\".class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.className.should.equal('class');\n    });\n\n    it('stores defined animation classes', function() {\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.animationIn.should.equal('fade-in');\n      plugin.animationOut.should.equal('fade-out');\n    });\n\n    it('adds Aria attributes to click triggers', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      var $triggers = $(`<div>\n          <a data-open=\"toggler\">Open</a>\n          <a data-close=\"toggler\">Close</a>\n          <a data-toggle=\"toggler\">Toggle</a>\n        </div>`).appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $triggers.find('[data-open]').should.have.attr('aria-controls', 'toggler');\n      $triggers.find('[data-close]').should.have.attr('aria-controls', 'toggler');\n      $triggers.find('[data-toggle]').should.have.attr('aria-controls', 'toggler');\n\n      $triggers.remove();\n    });\n\n    it('sets aria-expanded to true if the element is visible', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $('#toggler').should.have.attr('aria-expanded', 'true');\n    });\n\n    it('sets aria-expanded to false if the element is invisible', function() {\n      var $css = $('<style>#toggler { display: none }</style>').appendTo('body');\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $('#toggler').should.have.attr('aria-expanded', 'false');\n      $css.remove();\n    });\n  });\n\n  describe('toggle()', function() {\n    it('calls Toggler._toggleClass() if the element toggles with a class');\n    it('calls Toggler._toggleAnimate() if the element toggles with animation');\n  });\n\n  describe('toggleClass()', function() {\n    it('toggles a class on the element', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin._toggleClass();\n      $('#toggler').should.have.class('class');\n\n      plugin._toggleClass();\n      $('#toggler').should.not.have.class('class');\n    });\n\n    it('updates aria-expanded after the class is toggled', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin._toggleClass();\n      $('#toggler').should.have.attr('aria-expanded', 'true');\n\n      plugin._toggleClass();\n      $('#toggler').should.have.attr('aria-expanded', 'false');\n    });\n  });\n\n  // [TODO] Re-enable this if you can get it working in PhantomJS\n  xdescribe('toggleAnimate()', function() {\n    it('animates an invisible element in', function(done) {\n      var $css = $('<style>#toggler { display: none; }</style>').appendTo('body');\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $html.on('on.zf.toggler', function() {\n        $('#toggler').should.be.visible;\n        $('#toggler').should.have.attr('aria-expanded', 'true');\n        $css.remove();\n        done();\n      });\n\n      plugin._toggleAnimate();\n    });\n\n    it('animates an visible element out', function(done) {\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $html.on('off.zf.toggler', function() {\n        $('#toggler').should.be.hidden;\n        $('#toggler').should.have.attr('aria-expanded', 'false');\n        done();\n      });\n\n      plugin._toggleAnimate();\n    });\n  });\n});\n"]},"hash":"7c5c6cb0afb7f27422f15ed54c9883e970baf922"}
